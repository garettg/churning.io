{"version":3,"file":"static/chunks/679-c64726a2a0dd2a6f.js","mappings":"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3B,mBAAA,KACAC,0BAAA,KACAC,aAAA,KACAC,eAAA,KACA3iC,QAAA,KACAmpC,kBAAA,KACAC,iBAAA,KACAzU,YAAA,KACA0U,OAAA,KACAC,GAAA,KACAC,GAAA,KACApxC,EAAA,KACAyqC,SAAA,KACA4G,cAAA,KACAC,QAAa1mC,EACb2mC,gBAAqB3mC,EACrB0L,UAAA,KACAsd,QAAA,KACA4d,IAAA,KACAC,QAAa7mC,EACb8/B,iBAAA,KACA5N,SAAcjH,EACd6b,GAAA,KACAC,GAAA,KACAC,SAAA,KACAC,SAAA,KACAC,UAAelnC,EACf+/B,iBAAA,KACA3gD,IAAA,KACA2iB,MAAA,KACAolC,SAAcnnC,EACdonC,0BAAA,KACA19B,KAAA,KACAs2B,YAAiBhgC,EACjBigC,SAAA,KACArmC,OAAA,KACAytC,UAAA,KACAC,YAAA,KACApH,WAAA,KACAC,aAAA,KACAoH,UAAA,KACAC,eAAA,KACApH,WAAA,KACAC,SAAA,KACAC,eAAA,KACAC,YAAA,KACAC,UAAA,KACAC,YAAA,KACAC,WAAA,KACA5lD,OAAA,KACA2sD,GAAA,KACAhhD,KAAA,KACAihD,GAAA,KACAC,GAAA,KACAC,GAAQjd,EACRkd,GAAQld,EACRgW,UAAehW,EACfiW,2BAAA,KACAC,yBAAA,KACAiH,SAAA,KACAC,kBAAA,KACAC,cAAA,KACAC,QAAA,KACAC,QAAaloC,EACbmoC,kBAAA,KACAC,WAAA,KACAv5B,OAAA,KACAmkB,KAAA,KACAC,SAAA,KACA6N,UAAe9gC,EACf+gC,aAAkB/gC,EAClBghC,aAAkBhhC,EAClBojB,GAAA,KACAilB,YAAiBroC,EACjBihC,eAAA,KACAqH,kBAAA,KACAC,GAAA,KACAC,IAAA,KACAC,UAAezoC,EACflK,EAAOkK,EACP0oC,GAAQ1oC,EACR2oC,GAAQ3oC,EACR4oC,GAAQ5oC,EACR6oC,GAAQ7oC,EACR8oC,aAAkBje,EAClBke,iBAAA,KACAC,UAAA,KACAC,WAAA,KACAC,SAAA,KACAC,QAAA,KACAlV,KAAA,KACAmV,aAAA,KACAlI,cAAA,KACAC,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","sources":["webpack://_N_E/./node_modules/copy-to-clipboard/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/assign/index.js","webpack://_N_E/./node_modules/date-fns/esm/addMonths/index.js","webpack://_N_E/./node_modules/date-fns/esm/addYears/index.js","webpack://_N_E/./node_modules/date-fns/esm/differenceInCalendarMonths/index.js","webpack://_N_E/./node_modules/date-fns/esm/eachDayOfInterval/index.js","webpack://_N_E/./node_modules/date-fns/esm/endOfMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/endOfWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/compareAsc/index.js","webpack://_N_E/./node_modules/date-fns/esm/isLastDayOfMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/differenceInMonths/index.js","webpack://_N_E/./node_modules/date-fns/esm/differenceInMilliseconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/roundingMethods/index.js","webpack://_N_E/./node_modules/date-fns/esm/differenceInSeconds/index.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/cloneObject/index.js","webpack://_N_E/./node_modules/date-fns/esm/formatDistance/index.js","webpack://_N_E/./node_modules/date-fns/esm/formatDistanceToNow/index.js","webpack://_N_E/./node_modules/date-fns/esm/isAfter/index.js","webpack://_N_E/./node_modules/date-fns/esm/isBefore/index.js","webpack://_N_E/./node_modules/date-fns/esm/isEqual/index.js","webpack://_N_E/./node_modules/date-fns/esm/isSameDay/index.js","webpack://_N_E/./node_modules/date-fns/esm/isSameMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/isWeekend/index.js","webpack://_N_E/./node_modules/date-fns/esm/isWithinInterval/index.js","webpack://_N_E/./node_modules/date-fns/esm/max/index.js","webpack://_N_E/./node_modules/date-fns/esm/min/index.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/createSuper.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/Setter.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/Parser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/constants.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/utils.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack://_N_E/./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack://_N_E/./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack://_N_E/./node_modules/date-fns/esm/parse/index.js","webpack://_N_E/./node_modules/date-fns/esm/getDaysInMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/setMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/setYear/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfMonth/index.js","webpack://_N_E/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://_N_E/./node_modules/date-fns/esm/subMonths/index.js","webpack://_N_E/./node_modules/extend/index.js","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://_N_E/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://_N_E/./node_modules/prop-types/index.js","webpack://_N_E/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://_N_E/./node_modules/react-copy-to-clipboard/lib/Component.js","webpack://_N_E/./node_modules/react-copy-to-clipboard/lib/index.js","webpack://_N_E/./node_modules/react-date-range/dist/accessibility/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/Calendar/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/DateInput/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/DateRange/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/DateRangePicker/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/DayCell/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/DefinedRange/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/InputRangeField/index.js","webpack://_N_E/./node_modules/react-date-range/dist/components/Month/index.js","webpack://_N_E/./node_modules/react-date-range/dist/defaultRanges.js","webpack://_N_E/./node_modules/react-date-range/dist/index.js","webpack://_N_E/./node_modules/react-date-range/dist/styles.js","webpack://_N_E/./node_modules/react-date-range/dist/utils.js","webpack://_N_E/./node_modules/react-icons/fi/index.esm.js","webpack://_N_E/./node_modules/react-list/react-list.js","webpack://_N_E/./node_modules/shallow-equal/dist/index.esm.js","webpack://_N_E/./node_modules/toggle-selection/index.js","webpack://_N_E/./node_modules/devlop/lib/default.js","webpack://_N_E/./node_modules/goober/dist/goober.modern.js","webpack://_N_E/./node_modules/react-hot-toast/dist/index.mjs","webpack://_N_E/./node_modules/comma-separated-tokens/index.js","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/node_modules/hast-util-whitespace/lib/index.js","webpack://_N_E/./node_modules/property-information/lib/util/schema.js","webpack://_N_E/./node_modules/property-information/lib/util/merge.js","webpack://_N_E/./node_modules/property-information/lib/normalize.js","webpack://_N_E/./node_modules/property-information/lib/util/info.js","webpack://_N_E/./node_modules/property-information/lib/util/types.js","webpack://_N_E/./node_modules/property-information/lib/util/defined-info.js","webpack://_N_E/./node_modules/property-information/lib/util/create.js","webpack://_N_E/./node_modules/property-information/lib/xlink.js","webpack://_N_E/./node_modules/property-information/lib/xml.js","webpack://_N_E/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://_N_E/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://_N_E/./node_modules/property-information/lib/xmlns.js","webpack://_N_E/./node_modules/property-information/lib/aria.js","webpack://_N_E/./node_modules/property-information/lib/html.js","webpack://_N_E/./node_modules/property-information/lib/svg.js","webpack://_N_E/./node_modules/property-information/index.js","webpack://_N_E/./node_modules/property-information/lib/find.js","webpack://_N_E/./node_modules/property-information/lib/hast-to-react.js","webpack://_N_E/./node_modules/space-separated-tokens/index.js","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/node_modules/unist-util-position/lib/index.js","webpack://_N_E/./node_modules/vfile-message/node_modules/unist-util-stringify-position/lib/index.js","webpack://_N_E/./node_modules/vfile-message/lib/index.js","webpack://_N_E/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://_N_E/./node_modules/html-url-attributes/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-chunked/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-subtokenize/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/postprocess.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-combine-extensions/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-factory-space/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/initialize/content.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/initialize/document.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/content.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/initialize/text.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-resolve-all/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/list.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-factory-destination/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-factory-label/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-factory-title/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-factory-whitespace/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-normalize-identifier/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/definition.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-html-tag-name/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://_N_E/./node_modules/decode-named-character-reference/index.dom.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-classify-character/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/attention.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/constructs.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/parse.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark/lib/preprocess.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/micromark-util-decode-string/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/mdast-util-from-markdown/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/remark-parse/lib/index.js","webpack://_N_E/./node_modules/@ungap/structured-clone/esm/types.js","webpack://_N_E/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://_N_E/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://_N_E/./node_modules/@ungap/structured-clone/esm/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/node_modules/micromark-util-sanitize-uri/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://_N_E/./node_modules/mdast-util-to-hast/node_modules/unist-util-visit/lib/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://_N_E/./node_modules/trim-lines/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/state.js","webpack://_N_E/./node_modules/mdast-util-to-hast/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/remark-rehype/lib/index.js","webpack://_N_E/./node_modules/bail/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/is-plain-obj/index.js","webpack://_N_E/./node_modules/trough/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/vfile/lib/minpath.browser.js","webpack://_N_E/./node_modules/react-markdown/node_modules/vfile/lib/minproc.browser.js","webpack://_N_E/./node_modules/react-markdown/node_modules/vfile/lib/minurl.shared.js","webpack://_N_E/./node_modules/react-markdown/node_modules/vfile/lib/minurl.browser.js","webpack://_N_E/./node_modules/react-markdown/node_modules/vfile/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","webpack://_N_E/./node_modules/react-markdown/node_modules/unified/lib/index.js","webpack://_N_E/./node_modules/react-markdown/node_modules/unist-util-visit/lib/index.js","webpack://_N_E/./node_modules/react-markdown/lib/index.js","webpack://_N_E/./node_modules/ccount/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://_N_E/./node_modules/mdast-util-find-and-replace/node_modules/unist-util-is/lib/index.js","webpack://_N_E/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-footnote/node_modules/micromark-util-normalize-identifier/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://_N_E/./node_modules/markdown-table/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://_N_E/./node_modules/longest-streak/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/unist-util-visit/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-string/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/unist-util-is/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-phrasing/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/unist-util-visit/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-string/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/unist-util-is/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-phrasing/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://_N_E/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://_N_E/./node_modules/mdast-util-gfm/lib/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm/node_modules/micromark-util-chunked/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm/node_modules/micromark-util-combine-extensions/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-autolink-literal/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://_N_E/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-factory-space/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://_N_E/./node_modules/micromark-extension-gfm-footnote/node_modules/micromark-util-normalize-identifier/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://_N_E/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-chunked/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-classify-character/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-strikethrough/node_modules/micromark-util-resolve-all/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://_N_E/./node_modules/micromark-extension-gfm-table/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-table/node_modules/micromark-factory-space/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://_N_E/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://_N_E/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://_N_E/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-util-character/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-task-list-item/node_modules/micromark-factory-space/index.js","webpack://_N_E/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://_N_E/./node_modules/micromark-extension-gfm/index.js","webpack://_N_E/./node_modules/remark-gfm/lib/index.js","webpack://_N_E/./node_modules/unist-util-visit-parents/node_modules/unist-util-is/lib/index.js","webpack://_N_E/./node_modules/unist-util-visit-parents/lib/color.js","webpack://_N_E/./node_modules/unist-util-visit-parents/lib/index.js","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","export default function assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n  return target;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function trunc(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n};\n\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import distanceInWords from \"../formatDistance/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport default function formatDistanceToNow(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), options);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * const result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\nexport default function isWithinInterval(dirtyDate, interval) {\n  requiredArgs(2, arguments);\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  return time >= startTime && time <= endTime;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray;\n  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n\n    // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (_typeof(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} - the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray;\n  // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray;\n    // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (_typeof(dirtyDatesArray) === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n    if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar TIMEZONE_UNIT_PRIORITY = 10;\nexport var Setter = /*#__PURE__*/function () {\n  function Setter() {\n    _classCallCheck(this, Setter);\n    _defineProperty(this, \"priority\", void 0);\n    _defineProperty(this, \"subPriority\", 0);\n  }\n  _createClass(Setter, [{\n    key: \"validate\",\n    value: function validate(_utcDate, _options) {\n      return true;\n    }\n  }]);\n  return Setter;\n}();\nexport var ValueSetter = /*#__PURE__*/function (_Setter) {\n  _inherits(ValueSetter, _Setter);\n  var _super = _createSuper(ValueSetter);\n  function ValueSetter(value, validateValue, setValue, priority, subPriority) {\n    var _this;\n    _classCallCheck(this, ValueSetter);\n    _this = _super.call(this);\n    _this.value = value;\n    _this.validateValue = validateValue;\n    _this.setValue = setValue;\n    _this.priority = priority;\n    if (subPriority) {\n      _this.subPriority = subPriority;\n    }\n    return _this;\n  }\n  _createClass(ValueSetter, [{\n    key: \"validate\",\n    value: function validate(utcDate, options) {\n      return this.validateValue(utcDate, this.value, options);\n    }\n  }, {\n    key: \"set\",\n    value: function set(utcDate, flags, options) {\n      return this.setValue(utcDate, flags, this.value, options);\n    }\n  }]);\n  return ValueSetter;\n}(Setter);\nexport var DateToSystemTimezoneSetter = /*#__PURE__*/function (_Setter2) {\n  _inherits(DateToSystemTimezoneSetter, _Setter2);\n  var _super2 = _createSuper(DateToSystemTimezoneSetter);\n  function DateToSystemTimezoneSetter() {\n    var _this2;\n    _classCallCheck(this, DateToSystemTimezoneSetter);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this2), \"priority\", TIMEZONE_UNIT_PRIORITY);\n    _defineProperty(_assertThisInitialized(_this2), \"subPriority\", -1);\n    return _this2;\n  }\n  _createClass(DateToSystemTimezoneSetter, [{\n    key: \"set\",\n    value: function set(date, flags) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      var convertedDate = new Date(0);\n      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n      return convertedDate;\n    }\n  }]);\n  return DateToSystemTimezoneSetter;\n}(Setter);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { ValueSetter } from \"./Setter.js\";\nexport var Parser = /*#__PURE__*/function () {\n  function Parser() {\n    _classCallCheck(this, Parser);\n    _defineProperty(this, \"incompatibleTokens\", void 0);\n    _defineProperty(this, \"priority\", void 0);\n    _defineProperty(this, \"subPriority\", void 0);\n  }\n  _createClass(Parser, [{\n    key: \"run\",\n    value: function run(dateString, token, match, options) {\n      var result = this.parse(dateString, token, match, options);\n      if (!result) {\n        return null;\n      }\n      return {\n        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),\n        rest: result.rest\n      };\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_utcDate, _value, _options) {\n      return true;\n    }\n  }]);\n  return Parser;\n}();","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nexport var EraParser = /*#__PURE__*/function (_Parser) {\n  _inherits(EraParser, _Parser);\n  var _super = _createSuper(EraParser);\n  function EraParser() {\n    var _this;\n    _classCallCheck(this, EraParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 140);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['R', 'u', 't', 'T']);\n    return _this;\n  }\n  _createClass(EraParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(dateString, {\n            width: 'abbreviated'\n          }) || match.era(dateString, {\n            width: 'narrow'\n          });\n        // A, B\n        case 'GGGGG':\n          return match.era(dateString, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n        case 'GGGG':\n        default:\n          return match.era(dateString, {\n            width: 'wide'\n          }) || match.era(dateString, {\n            width: 'abbreviated'\n          }) || match.era(dateString, {\n            width: 'narrow'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return EraParser;\n}(Parser);","export var numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n};\n\nexport var timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};","import { millisecondsInHour, millisecondsInMinute, millisecondsInSecond } from \"../../constants/index.js\";\nimport { numericPatterns } from \"./constants.js\";\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest\n  };\n}\nexport function parseNumericPattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nexport function parseTimezonePattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: dateString.slice(1)\n    };\n  }\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), dateString);\n  }\n}\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), dateString);\n  }\n}\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case 'morning':\n      return 4;\n    case 'evening':\n      return 17;\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n  return isCommonEra ? result : 1 - result;\n}\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport var YearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(YearParser, _Parser);\n  var _super = _createSuper(YearParser);\n  function YearParser() {\n    var _this;\n    _classCallCheck(this, YearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(YearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n      switch (token) {\n        case 'y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n        case 'yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      var currentYear = date.getUTCFullYear();\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return YearParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits, normalizeTwoDigitYear, mapValue } from \"../utils.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\n// Local week-numbering year\nexport var LocalWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekYearParser, _Parser);\n  var _super = _createSuper(LocalWeekYearParser);\n  function LocalWeekYearParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n      switch (token) {\n        case 'Y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n        case 'Yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    }\n  }]);\n  return LocalWeekYearParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigitsSigned } from \"../utils.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\"; // ISO week-numbering year\nexport var ISOWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOWeekYearParser, _Parser);\n  var _super = _createSuper(ISOWeekYearParser);\n  function ISOWeekYearParser() {\n    var _this;\n    _classCallCheck(this, ISOWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISOWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, dateString);\n      }\n      return parseNDigitsSigned(token.length, dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    }\n  }]);\n  return ISOWeekYearParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigitsSigned } from \"../utils.js\";\nexport var ExtendedYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ExtendedYearParser, _Parser);\n  var _super = _createSuper(ExtendedYearParser);\n  function ExtendedYearParser() {\n    var _this;\n    _classCallCheck(this, ExtendedYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ExtendedYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, dateString);\n      }\n      return parseNDigitsSigned(token.length, dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return ExtendedYearParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits } from \"../utils.js\";\nexport var QuarterParser = /*#__PURE__*/function (_Parser) {\n  _inherits(QuarterParser, _Parser);\n  var _super = _createSuper(QuarterParser);\n  function QuarterParser() {\n    var _this;\n    _classCallCheck(this, QuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(QuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case 'Qo':\n          return match.ordinalNumber(dateString, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n        case 'QQQ':\n          return match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'QQQQQ':\n          return match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n        case 'QQQQ':\n        default:\n          return match.quarter(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return QuarterParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseNDigits } from \"../utils.js\";\nexport var StandAloneQuarterParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneQuarterParser, _Parser);\n  var _super = _createSuper(StandAloneQuarterParser);\n  function StandAloneQuarterParser() {\n    var _this;\n    _classCallCheck(this, StandAloneQuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneQuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case 'qo':\n          return match.ordinalNumber(dateString, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n        case 'qqq':\n          return match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'qqqqq':\n          return match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n        case 'qqqq':\n        default:\n          return match.quarter(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneQuarterParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nexport var MonthParser = /*#__PURE__*/function (_Parser) {\n  _inherits(MonthParser, _Parser);\n  var _super = _createSuper(MonthParser);\n  function MonthParser() {\n    var _this;\n    _classCallCheck(this, MonthParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 110);\n    return _this;\n  }\n  _createClass(MonthParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case 'MM':\n          return mapValue(parseNDigits(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Mo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'month'\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case 'MMM':\n          return match.month(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n        case 'MMMMM':\n          return match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n        case 'MMMM':\n        default:\n          return match.month(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return MonthParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits, mapValue } from \"../utils.js\";\nexport var StandAloneMonthParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneMonthParser, _Parser);\n  var _super = _createSuper(StandAloneMonthParser);\n  function StandAloneMonthParser() {\n    var _this;\n    _classCallCheck(this, StandAloneMonthParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 110);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneMonthParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case 'LL':\n          return mapValue(parseNDigits(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Lo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'month'\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case 'LLL':\n          return match.month(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n        case 'LLLLL':\n          return match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n        case 'LLLL':\n        default:\n          return match.month(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneMonthParser;\n}(Parser);","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\"; // Local week of year\nexport var LocalWeekParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekParser, _Parser);\n  var _super = _createSuper(LocalWeekParser);\n  function LocalWeekParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 100);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalWeekParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, dateString);\n        case 'wo':\n          return match.ordinalNumber(dateString, {\n            unit: 'week'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 53;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    }\n  }]);\n  return LocalWeekParser;\n}(Parser);","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\"; // ISO week of year\nexport var ISOWeekParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOWeekParser, _Parser);\n  var _super = _createSuper(ISOWeekParser);\n  function ISOWeekParser() {\n    var _this;\n    _classCallCheck(this, ISOWeekParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 100);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISOWeekParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, dateString);\n        case 'Io':\n          return match.ordinalNumber(dateString, {\n            unit: 'week'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 53;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value));\n    }\n  }]);\n  return ISOWeekParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { isLeapYearIndex, parseNDigits, parseNumericPattern } from \"../utils.js\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// Day of the month\nexport var DateParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DateParser, _Parser);\n  var _super = _createSuper(DateParser);\n  function DateParser() {\n    var _this;\n    _classCallCheck(this, DateParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"subPriority\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DateParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, dateString);\n        case 'do':\n          return match.ordinalNumber(dateString, {\n            unit: 'date'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(date, value) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DateParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits, isLeapYearIndex } from \"../utils.js\";\nexport var DayOfYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayOfYearParser, _Parser);\n  var _super = _createSuper(DayOfYearParser);\n  function DayOfYearParser() {\n    var _this;\n    _classCallCheck(this, DayOfYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"subpriority\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayOfYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n        case 'Do':\n          return match.ordinalNumber(dateString, {\n            unit: 'date'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(date, value) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayOfYearParser;\n}(Parser);","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function setUTCDay(dirtyDate, dirtyDay, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\"; // Day of week\nexport var DayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayParser, _Parser);\n  var _super = _createSuper(DayParser);\n  function DayParser() {\n    var _this;\n    _classCallCheck(this, DayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n        case 'EEEEE':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n        case 'EEEEEE':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n        case 'EEEE':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\"; // Local day of week\nexport var LocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalDayParser, _Parser);\n  var _super = _createSuper(LocalDayParser);\n  function LocalDayParser() {\n    var _this;\n    _classCallCheck(this, LocalDayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n        case 'eo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'day'\n          }), valueCallback);\n        // Tue\n        case 'eee':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n        case 'eeeee':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n        case 'eeeeee':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n        case 'eeee':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return LocalDayParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\"; // Stand-alone local day of week\nexport var StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneLocalDayParser, _Parser);\n  var _super = _createSuper(StandAloneLocalDayParser);\n  function StandAloneLocalDayParser() {\n    var _this;\n    _classCallCheck(this, StandAloneLocalDayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneLocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n        case 'co':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'day'\n          }), valueCallback);\n        // Tue\n        case 'ccc':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n        case 'ccccc':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n        case 'cccccc':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n        case 'cccc':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneLocalDayParser;\n}(Parser);","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\"; // ISO day of week\nexport var ISODayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISODayParser, _Parser);\n  var _super = _createSuper(ISODayParser);\n  function ISODayParser() {\n    var _this;\n    _classCallCheck(this, ISODayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISODayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n        return value;\n      };\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, dateString);\n        // 2nd\n        case 'io':\n          return match.ordinalNumber(dateString, {\n            unit: 'day'\n          });\n        // Tue\n        case 'iii':\n          return mapValue(match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // T\n        case 'iiiii':\n          return mapValue(match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // Tu\n        case 'iiiiii':\n          return mapValue(match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // Tuesday\n        case 'iiii':\n        default:\n          return mapValue(match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 7;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date = setUTCISODay(date, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return ISODayParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\";\nexport var AMPMParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AMPMParser, _Parser);\n  var _super = _createSuper(AMPMParser);\n  function AMPMParser() {\n    var _this;\n    _classCallCheck(this, AMPMParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['b', 'B', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(AMPMParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'aaaaa':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'aaaa':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return AMPMParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\";\nexport var AMPMMidnightParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AMPMMidnightParser, _Parser);\n  var _super = _createSuper(AMPMMidnightParser);\n  function AMPMMidnightParser() {\n    var _this;\n    _classCallCheck(this, AMPMMidnightParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'B', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(AMPMMidnightParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'bbbbb':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'bbbb':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return AMPMMidnightParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\"; // in the morning, in the afternoon, in the evening, at night\nexport var DayPeriodParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayPeriodParser, _Parser);\n  var _super = _createSuper(DayPeriodParser);\n  function DayPeriodParser() {\n    var _this;\n    _classCallCheck(this, DayPeriodParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayPeriodParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'BBBBB':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'BBBB':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayPeriodParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour1to12Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1to12Parser, _Parser);\n  var _super = _createSuper(Hour1to12Parser);\n  function Hour1to12Parser() {\n    var _this;\n    _classCallCheck(this, Hour1to12Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['H', 'K', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour1to12Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, dateString);\n        case 'ho':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 12;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  }]);\n  return Hour1to12Parser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour0to23Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour0to23Parser, _Parser);\n  var _super = _createSuper(Hour0to23Parser);\n  function Hour0to23Parser() {\n    var _this;\n    _classCallCheck(this, Hour0to23Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 'h', 'K', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour0to23Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, dateString);\n        case 'Ho':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 23;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return Hour0to23Parser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour0To11Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour0To11Parser, _Parser);\n  var _super = _createSuper(Hour0To11Parser);\n  function Hour0To11Parser() {\n    var _this;\n    _classCallCheck(this, Hour0To11Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['h', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour0To11Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, dateString);\n        case 'Ko':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  }]);\n  return Hour0To11Parser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var Hour1To24Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1To24Parser, _Parser);\n  var _super = _createSuper(Hour1To24Parser);\n  function Hour1To24Parser() {\n    var _this;\n    _classCallCheck(this, Hour1To24Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 'h', 'H', 'K', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour1To24Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, dateString);\n        case 'ko':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 24;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return Hour1To24Parser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var MinuteParser = /*#__PURE__*/function (_Parser) {\n  _inherits(MinuteParser, _Parser);\n  var _super = _createSuper(MinuteParser);\n  function MinuteParser() {\n    var _this;\n    _classCallCheck(this, MinuteParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 60);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(MinuteParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, dateString);\n        case 'mo':\n          return match.ordinalNumber(dateString, {\n            unit: 'minute'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 59;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    }\n  }]);\n  return MinuteParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits } from \"../utils.js\";\nexport var SecondParser = /*#__PURE__*/function (_Parser) {\n  _inherits(SecondParser, _Parser);\n  var _super = _createSuper(SecondParser);\n  function SecondParser() {\n    var _this;\n    _classCallCheck(this, SecondParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 50);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(SecondParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, dateString);\n        case 'so':\n          return match.ordinalNumber(dateString, {\n            unit: 'second'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 59;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    }\n  }]);\n  return SecondParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { mapValue, parseNDigits } from \"../utils.js\";\nexport var FractionOfSecondParser = /*#__PURE__*/function (_Parser) {\n  _inherits(FractionOfSecondParser, _Parser);\n  var _super = _createSuper(FractionOfSecondParser);\n  function FractionOfSecondParser() {\n    var _this;\n    _classCallCheck(this, FractionOfSecondParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 30);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(FractionOfSecondParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n      return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMilliseconds(value);\n      return date;\n    }\n  }]);\n  return FractionOfSecondParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { parseTimezonePattern } from \"../utils.js\"; // Timezone (ISO-8601. +00:00 is `'Z'`)\nexport var ISOTimezoneWithZParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneWithZParser, _Parser);\n  var _super = _createSuper(ISOTimezoneWithZParser);\n  function ISOTimezoneWithZParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneWithZParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'x']);\n    return _this;\n  }\n  _createClass(ISOTimezoneWithZParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneWithZParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { parseTimezonePattern } from \"../utils.js\"; // Timezone (ISO-8601)\nexport var ISOTimezoneParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneParser, _Parser);\n  var _super = _createSuper(ISOTimezoneParser);\n  function ISOTimezoneParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'X']);\n    return _this;\n  }\n  _createClass(ISOTimezoneParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseAnyDigitsSigned } from \"../utils.js\";\nexport var TimestampSecondsParser = /*#__PURE__*/function (_Parser) {\n  _inherits(TimestampSecondsParser, _Parser);\n  var _super = _createSuper(TimestampSecondsParser);\n  function TimestampSecondsParser() {\n    var _this;\n    _classCallCheck(this, TimestampSecondsParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 40);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", '*');\n    return _this;\n  }\n  _createClass(TimestampSecondsParser, [{\n    key: \"parse\",\n    value: function parse(dateString) {\n      return parseAnyDigitsSigned(dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    }\n  }]);\n  return TimestampSecondsParser;\n}(Parser);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Parser } from \"../Parser.js\";\nimport { parseAnyDigitsSigned } from \"../utils.js\";\nexport var TimestampMillisecondsParser = /*#__PURE__*/function (_Parser) {\n  _inherits(TimestampMillisecondsParser, _Parser);\n  var _super = _createSuper(TimestampMillisecondsParser);\n  function TimestampMillisecondsParser() {\n    var _this;\n    _classCallCheck(this, TimestampMillisecondsParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 20);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", '*');\n    return _this;\n  }\n  _createClass(TimestampMillisecondsParser, [{\n    key: \"parse\",\n    value: function parse(dateString) {\n      return parseAnyDigitsSigned(dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    }\n  }]);\n  return TimestampMillisecondsParser;\n}(Parser);","import { EraParser } from \"./EraParser.js\";\nimport { YearParser } from \"./YearParser.js\";\nimport { LocalWeekYearParser } from \"./LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./ExtendedYearParser.js\";\nimport { QuarterParser } from \"./QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./MonthParser.js\";\nimport { StandAloneMonthParser } from \"./StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./ISOWeekParser.js\";\nimport { DateParser } from \"./DateParser.js\";\nimport { DayOfYearParser } from \"./DayOfYearParser.js\";\nimport { DayParser } from \"./DayParser.js\";\nimport { LocalDayParser } from \"./LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./ISODayParser.js\";\nimport { AMPMParser } from \"./AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./Hour1To24Parser.js\";\nimport { MinuteParser } from \"./MinuteParser.js\";\nimport { SecondParser } from \"./SecondParser.js\";\nimport { FractionOfSecondParser } from \"./FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./TimestampMillisecondsParser.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport var parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser()\n};","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { DateToSystemTimezoneSetter } from \"./_lib/Setter.js\";\nimport { parsers } from \"./_lib/parsers/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  var setters = [new DateToSystemTimezoneSetter()];\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter in longFormatters) {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n  var _iterator = _createForOfIteratorHelper(tokens),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var token = _step.value;\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token)) {\n        throwProtectedError(token, formatString, dirtyDateString);\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {\n        throwProtectedError(token, formatString, dirtyDateString);\n      }\n      var firstCharacter = token[0];\n      var parser = parsers[firstCharacter];\n      if (parser) {\n        var incompatibleTokens = parser.incompatibleTokens;\n        if (Array.isArray(incompatibleTokens)) {\n          var incompatibleToken = usedTokens.find(function (usedToken) {\n            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;\n          });\n          if (incompatibleToken) {\n            throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n          }\n        } else if (parser.incompatibleTokens === '*' && usedTokens.length > 0) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n        }\n        usedTokens.push({\n          token: firstCharacter,\n          fullToken: token\n        });\n        var parseResult = parser.run(dateString, token, locale.match, subFnOptions);\n        if (!parseResult) {\n          return {\n            v: new Date(NaN)\n          };\n        }\n        setters.push(parseResult.setter);\n        dateString = parseResult.rest;\n      } else {\n        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n        }\n\n        // Replace two single quote characters with one single quote character\n        if (token === \"''\") {\n          token = \"'\";\n        } else if (firstCharacter === \"'\") {\n          token = cleanEscapedString(token);\n        }\n\n        // Cut token from string, or, if string doesn't match the token, return Invalid Date\n        if (dateString.indexOf(token) === 0) {\n          dateString = dateString.slice(token.length);\n        } else {\n          return {\n            v: new Date(NaN)\n          };\n        }\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n      if (_typeof(_ret) === \"object\") return _ret.v;\n    }\n\n    // Check if the remaining input contains something other than whitespace\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var setter = _step2.value;\n      if (!setter.validate(utcDate, subFnOptions)) {\n        return new Date(NaN);\n      }\n      var result = setter.set(utcDate, flags, subFnOptions);\n      // Result is tuple (date, flags)\n      if (Array.isArray(result)) {\n        utcDate = result[0];\n        assign(flags, result[1]);\n        // Result is date\n      } else {\n        utcDate = result;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return utcDate;\n}\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport getDaysInMonth from \"../getDaysInMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  date.setFullYear(year);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\nexports.default = StyleToObject;\n//# sourceMappingURL=index.js.map","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nvar _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  var _super = _createSuper(CopyToClipboard);\n\n  function CopyToClipboard() {\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ariaLabelsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ariaLabelsShape = _propTypes.default.shape({\n  dateInput: _propTypes.default.objectOf(_propTypes.default.shape({\n    startDate: _propTypes.default.string,\n    endDate: _propTypes.default.string\n  })),\n  monthPicker: _propTypes.default.string,\n  yearPicker: _propTypes.default.string,\n  prevButton: _propTypes.default.string,\n  nextButton: _propTypes.default.string\n});\n\nexports.ariaLabelsShape = ariaLabelsShape;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _DayCell = require(\"../DayCell\");\n\nvar _Month = _interopRequireDefault(require(\"../Month\"));\n\nvar _DateInput = _interopRequireDefault(require(\"../DateInput\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _classnames3 = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactList = _interopRequireDefault(require(\"react-list\"));\n\nvar _shallowEqual = require(\"shallow-equal\");\n\nvar _max = _interopRequireDefault(require(\"date-fns/max\"));\n\nvar _min = _interopRequireDefault(require(\"date-fns/min\"));\n\nvar _differenceInDays = _interopRequireDefault(require(\"date-fns/differenceInDays\"));\n\nvar _isSameMonth = _interopRequireDefault(require(\"date-fns/isSameMonth\"));\n\nvar _addDays = _interopRequireDefault(require(\"date-fns/addDays\"));\n\nvar _endOfMonth = _interopRequireDefault(require(\"date-fns/endOfMonth\"));\n\nvar _startOfMonth = _interopRequireDefault(require(\"date-fns/startOfMonth\"));\n\nvar _differenceInCalendarMonths = _interopRequireDefault(require(\"date-fns/differenceInCalendarMonths\"));\n\nvar _setMonth2 = _interopRequireDefault(require(\"date-fns/setMonth\"));\n\nvar _setYear2 = _interopRequireDefault(require(\"date-fns/setYear\"));\n\nvar _addYears = _interopRequireDefault(require(\"date-fns/addYears\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"date-fns/isSameDay\"));\n\nvar _endOfWeek = _interopRequireDefault(require(\"date-fns/endOfWeek\"));\n\nvar _startOfWeek = _interopRequireDefault(require(\"date-fns/startOfWeek\"));\n\nvar _eachDayOfInterval = _interopRequireDefault(require(\"date-fns/eachDayOfInterval\"));\n\nvar _format = _interopRequireDefault(require(\"date-fns/format\"));\n\nvar _subMonths = _interopRequireDefault(require(\"date-fns/subMonths\"));\n\nvar _addMonths = _interopRequireDefault(require(\"date-fns/addMonths\"));\n\nvar _enUS = _interopRequireDefault(require(\"date-fns/locale/en-US\"));\n\nvar _styles = _interopRequireDefault(require(\"../../styles\"));\n\nvar _accessibility = require(\"../../accessibility\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Calendar = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Calendar, _PureComponent);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(_props, context) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, _props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"focusToDate\", function (date) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props;\n      var preventUnnecessary = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (!props.scroll.enabled) {\n        if (preventUnnecessary && props.preventSnapRefocus) {\n          var focusedDateDiff = (0, _differenceInCalendarMonths.default)(date, _this.state.focusedDate);\n          var isAllowedForward = props.calendarFocus === 'forwards' && focusedDateDiff >= 0;\n          var isAllowedBackward = props.calendarFocus === 'backwards' && focusedDateDiff <= 0;\n\n          if ((isAllowedForward || isAllowedBackward) && Math.abs(focusedDateDiff) < props.months) {\n            return;\n          }\n        }\n\n        _this.setState({\n          focusedDate: date\n        });\n\n        return;\n      }\n\n      var targetMonthIndex = (0, _differenceInCalendarMonths.default)(date, props.minDate, _this.dateOptions);\n\n      var visibleMonths = _this.list.getVisibleRange();\n\n      if (preventUnnecessary && visibleMonths.includes(targetMonthIndex)) return;\n      _this.isFirstRender = true;\n\n      _this.list.scrollTo(targetMonthIndex);\n\n      _this.setState({\n        focusedDate: date\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateShownDate\", function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var newProps = props.scroll.enabled ? _objectSpread(_objectSpread({}, props), {}, {\n        months: _this.list.getVisibleRange().length\n      }) : props;\n      var newFocus = (0, _utils.calcFocusDate)(_this.state.focusedDate, newProps);\n\n      _this.focusToDate(newFocus, newProps);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePreview\", function (val) {\n      if (!val) {\n        _this.setState({\n          preview: null\n        });\n\n        return;\n      }\n\n      var preview = {\n        startDate: val,\n        endDate: val,\n        color: _this.props.color\n      };\n\n      _this.setState({\n        preview: preview\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeShownDate\", function (value) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'set';\n      var focusedDate = _this.state.focusedDate;\n      var _this$props = _this.props,\n          onShownDateChange = _this$props.onShownDateChange,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate;\n      var modeMapper = {\n        monthOffset: function monthOffset() {\n          return (0, _addMonths.default)(focusedDate, value);\n        },\n        setMonth: function (_setMonth) {\n          function setMonth() {\n            return _setMonth.apply(this, arguments);\n          }\n\n          setMonth.toString = function () {\n            return _setMonth.toString();\n          };\n\n          return setMonth;\n        }(function () {\n          return (0, _setMonth2.default)(focusedDate, value);\n        }),\n        setYear: function (_setYear) {\n          function setYear() {\n            return _setYear.apply(this, arguments);\n          }\n\n          setYear.toString = function () {\n            return _setYear.toString();\n          };\n\n          return setYear;\n        }(function () {\n          return (0, _setYear2.default)(focusedDate, value);\n        }),\n        set: function set() {\n          return value;\n        }\n      };\n      var newDate = (0, _min.default)([(0, _max.default)([modeMapper[mode](), minDate]), maxDate]);\n\n      _this.focusToDate(newDate, _this.props, false);\n\n      onShownDateChange && onShownDateChange(newDate);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRangeFocusChange\", function (rangesIndex, rangeItemIndex) {\n      _this.props.onRangeFocusChange && _this.props.onRangeFocusChange([rangesIndex, rangeItemIndex]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var _this$props2 = _this.props,\n          onShownDateChange = _this$props2.onShownDateChange,\n          minDate = _this$props2.minDate;\n      var focusedDate = _this.state.focusedDate;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          isFirstRender = _assertThisInitialize.isFirstRender;\n\n      var visibleMonths = _this.list.getVisibleRange(); // prevent scroll jump with wrong visible value\n\n\n      if (visibleMonths[0] === undefined) return;\n      var visibleMonth = (0, _addMonths.default)(minDate, visibleMonths[0] || 0);\n      var isFocusedToDifferent = !(0, _isSameMonth.default)(visibleMonth, focusedDate);\n\n      if (isFocusedToDifferent && !isFirstRender) {\n        _this.setState({\n          focusedDate: visibleMonth\n        });\n\n        onShownDateChange && onShownDateChange(visibleMonth);\n      }\n\n      _this.isFirstRender = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMonthAndYear\", function (focusedDate, changeShownDate, props) {\n      var showMonthArrow = props.showMonthArrow,\n          minDate = props.minDate,\n          maxDate = props.maxDate,\n          showMonthAndYearPickers = props.showMonthAndYearPickers,\n          ariaLabels = props.ariaLabels;\n      var upperYearLimit = (maxDate || Calendar.defaultProps.maxDate).getFullYear();\n      var lowerYearLimit = (minDate || Calendar.defaultProps.minDate).getFullYear();\n      var styles = _this.styles;\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        onMouseUp: function onMouseUp(e) {\n          return e.stopPropagation();\n        },\n        className: styles.monthAndYearWrapper\n      }, showMonthArrow ? /*#__PURE__*/_react.default.createElement(\"button\", {\n        type: \"button\",\n        className: (0, _classnames3.default)(styles.nextPrevButton, styles.prevButton),\n        onClick: function onClick() {\n          return changeShownDate(-1, 'monthOffset');\n        },\n        \"aria-label\": ariaLabels.prevButton\n      }, /*#__PURE__*/_react.default.createElement(\"i\", null)) : null, showMonthAndYearPickers ? /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: styles.monthAndYearPickers\n      }, /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: styles.monthPicker\n      }, /*#__PURE__*/_react.default.createElement(\"select\", {\n        value: focusedDate.getMonth(),\n        onChange: function onChange(e) {\n          return changeShownDate(e.target.value, 'setMonth');\n        },\n        \"aria-label\": ariaLabels.monthPicker\n      }, _this.state.monthNames.map(function (monthName, i) {\n        return /*#__PURE__*/_react.default.createElement(\"option\", {\n          key: i,\n          value: i\n        }, monthName);\n      }))), /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: styles.monthAndYearDivider\n      }), /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: styles.yearPicker\n      }, /*#__PURE__*/_react.default.createElement(\"select\", {\n        value: focusedDate.getFullYear(),\n        onChange: function onChange(e) {\n          return changeShownDate(e.target.value, 'setYear');\n        },\n        \"aria-label\": ariaLabels.yearPicker\n      }, new Array(upperYearLimit - lowerYearLimit + 1).fill(upperYearLimit).map(function (val, i) {\n        var year = val - i;\n        return /*#__PURE__*/_react.default.createElement(\"option\", {\n          key: year,\n          value: year\n        }, year);\n      })))) : /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: styles.monthAndYearPickers\n      }, _this.state.monthNames[focusedDate.getMonth()], \" \", focusedDate.getFullYear()), showMonthArrow ? /*#__PURE__*/_react.default.createElement(\"button\", {\n        type: \"button\",\n        className: (0, _classnames3.default)(styles.nextPrevButton, styles.nextButton),\n        onClick: function onClick() {\n          return changeShownDate(+1, 'monthOffset');\n        },\n        \"aria-label\": ariaLabels.nextButton\n      }, /*#__PURE__*/_react.default.createElement(\"i\", null)) : null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDateDisplay\", function () {\n      var _this$props3 = _this.props,\n          focusedRange = _this$props3.focusedRange,\n          color = _this$props3.color,\n          ranges = _this$props3.ranges,\n          rangeColors = _this$props3.rangeColors,\n          dateDisplayFormat = _this$props3.dateDisplayFormat,\n          editableDateInputs = _this$props3.editableDateInputs,\n          startDatePlaceholder = _this$props3.startDatePlaceholder,\n          endDatePlaceholder = _this$props3.endDatePlaceholder,\n          ariaLabels = _this$props3.ariaLabels;\n      var defaultColor = rangeColors[focusedRange[0]] || color;\n      var styles = _this.styles;\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: styles.dateDisplayWrapper\n      }, ranges.map(function (range, i) {\n        if (range.showDateDisplay === false || range.disabled && !range.showDateDisplay) return null;\n        return /*#__PURE__*/_react.default.createElement(\"div\", {\n          className: styles.dateDisplay,\n          key: i,\n          style: {\n            color: range.color || defaultColor\n          }\n        }, /*#__PURE__*/_react.default.createElement(_DateInput.default, {\n          className: (0, _classnames3.default)(styles.dateDisplayItem, _defineProperty({}, styles.dateDisplayItemActive, focusedRange[0] === i && focusedRange[1] === 0)),\n          readOnly: !editableDateInputs,\n          disabled: range.disabled,\n          value: range.startDate,\n          placeholder: startDatePlaceholder,\n          dateOptions: _this.dateOptions,\n          dateDisplayFormat: dateDisplayFormat,\n          ariaLabel: ariaLabels.dateInput && ariaLabels.dateInput[range.key] && ariaLabels.dateInput[range.key].startDate,\n          onChange: _this.onDragSelectionEnd,\n          onFocus: function onFocus() {\n            return _this.handleRangeFocusChange(i, 0);\n          }\n        }), /*#__PURE__*/_react.default.createElement(_DateInput.default, {\n          className: (0, _classnames3.default)(styles.dateDisplayItem, _defineProperty({}, styles.dateDisplayItemActive, focusedRange[0] === i && focusedRange[1] === 1)),\n          readOnly: !editableDateInputs,\n          disabled: range.disabled,\n          value: range.endDate,\n          placeholder: endDatePlaceholder,\n          dateOptions: _this.dateOptions,\n          dateDisplayFormat: dateDisplayFormat,\n          ariaLabel: ariaLabels.dateInput && ariaLabels.dateInput[range.key] && ariaLabels.dateInput[range.key].endDate,\n          onChange: _this.onDragSelectionEnd,\n          onFocus: function onFocus() {\n            return _this.handleRangeFocusChange(i, 1);\n          }\n        }));\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragSelectionStart\", function (date) {\n      var _this$props4 = _this.props,\n          onChange = _this$props4.onChange,\n          dragSelectionEnabled = _this$props4.dragSelectionEnabled;\n\n      if (dragSelectionEnabled) {\n        _this.setState({\n          drag: {\n            status: true,\n            range: {\n              startDate: date,\n              endDate: date\n            },\n            disablePreview: true\n          }\n        });\n      } else {\n        onChange && onChange(date);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragSelectionEnd\", function (date) {\n      var _this$props5 = _this.props,\n          updateRange = _this$props5.updateRange,\n          displayMode = _this$props5.displayMode,\n          onChange = _this$props5.onChange,\n          dragSelectionEnabled = _this$props5.dragSelectionEnabled;\n      if (!dragSelectionEnabled) return;\n\n      if (displayMode === 'date' || !_this.state.drag.status) {\n        onChange && onChange(date);\n        return;\n      }\n\n      var newRange = {\n        startDate: _this.state.drag.range.startDate,\n        endDate: date\n      };\n\n      if (displayMode !== 'dateRange' || (0, _isSameDay.default)(newRange.startDate, date)) {\n        _this.setState({\n          drag: {\n            status: false,\n            range: {}\n          }\n        }, function () {\n          return onChange && onChange(date);\n        });\n      } else {\n        _this.setState({\n          drag: {\n            status: false,\n            range: {}\n          }\n        }, function () {\n          updateRange && updateRange(newRange);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragSelectionMove\", function (date) {\n      var drag = _this.state.drag;\n      if (!drag.status || !_this.props.dragSelectionEnabled) return;\n\n      _this.setState({\n        drag: {\n          status: drag.status,\n          range: {\n            startDate: drag.range.startDate,\n            endDate: date\n          },\n          disablePreview: true\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"estimateMonthSize\", function (index, cache) {\n      var _this$props6 = _this.props,\n          direction = _this$props6.direction,\n          minDate = _this$props6.minDate;\n      var scrollArea = _this.state.scrollArea;\n\n      if (cache) {\n        _this.listSizeCache = cache;\n        if (cache[index]) return cache[index];\n      }\n\n      if (direction === 'horizontal') return scrollArea.monthWidth;\n      var monthStep = (0, _addMonths.default)(minDate, index);\n\n      var _getMonthDisplayRange = (0, _utils.getMonthDisplayRange)(monthStep, _this.dateOptions),\n          start = _getMonthDisplayRange.start,\n          end = _getMonthDisplayRange.end;\n\n      var isLongMonth = (0, _differenceInDays.default)(end, start, _this.dateOptions) + 1 > 7 * 5;\n      return isLongMonth ? scrollArea.longMonthHeight : scrollArea.monthHeight;\n    });\n\n    _this.dateOptions = {\n      locale: _props.locale\n    };\n    if (_props.weekStartsOn !== undefined) _this.dateOptions.weekStartsOn = _props.weekStartsOn;\n    _this.styles = (0, _utils.generateStyles)([_styles.default, _props.classNames]);\n    _this.listSizeCache = {};\n    _this.isFirstRender = true;\n    _this.state = {\n      monthNames: _this.getMonthNames(),\n      focusedDate: (0, _utils.calcFocusDate)(null, _props),\n      drag: {\n        status: false,\n        range: {\n          startDate: null,\n          endDate: null\n        },\n        disablePreview: false\n      },\n      scrollArea: _this.calcScrollArea(_props)\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"getMonthNames\",\n    value: function getMonthNames() {\n      var _this2 = this;\n\n      return _toConsumableArray(Array(12).keys()).map(function (i) {\n        return _this2.props.locale.localize.month(i);\n      });\n    }\n  }, {\n    key: \"calcScrollArea\",\n    value: function calcScrollArea(props) {\n      var direction = props.direction,\n          months = props.months,\n          scroll = props.scroll;\n      if (!scroll.enabled) return {\n        enabled: false\n      };\n      var longMonthHeight = scroll.longMonthHeight || scroll.monthHeight;\n\n      if (direction === 'vertical') {\n        return {\n          enabled: true,\n          monthHeight: scroll.monthHeight || 220,\n          longMonthHeight: longMonthHeight || 260,\n          calendarWidth: 'auto',\n          calendarHeight: (scroll.calendarHeight || longMonthHeight || 240) * months\n        };\n      }\n\n      return {\n        enabled: true,\n        monthWidth: scroll.monthWidth || 332,\n        calendarWidth: (scroll.calendarWidth || scroll.monthWidth || 332) * months,\n        monthHeight: longMonthHeight || 300,\n        calendarHeight: longMonthHeight || 300\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.props.scroll.enabled) {\n        // prevent react-list's initial render focus problem\n        setTimeout(function () {\n          return _this3.focusToDate(_this3.state.focusedDate);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var propMapper = {\n        dateRange: 'ranges',\n        date: 'date'\n      };\n      var targetProp = propMapper[this.props.displayMode];\n\n      if (this.props[targetProp] !== prevProps[targetProp]) {\n        this.updateShownDate(this.props);\n      }\n\n      if (prevProps.locale !== this.props.locale || prevProps.weekStartsOn !== this.props.weekStartsOn) {\n        this.dateOptions = {\n          locale: this.props.locale\n        };\n        if (this.props.weekStartsOn !== undefined) this.dateOptions.weekStartsOn = this.props.weekStartsOn;\n        this.setState({\n          monthNames: this.getMonthNames()\n        });\n      }\n\n      if (!(0, _shallowEqual.shallowEqualObjects)(prevProps.scroll, this.props.scroll)) {\n        this.setState({\n          scrollArea: this.calcScrollArea(this.props)\n        });\n      }\n    }\n  }, {\n    key: \"renderWeekdays\",\n    value: function renderWeekdays() {\n      var _this4 = this;\n\n      var now = new Date();\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: this.styles.weekDays\n      }, (0, _eachDayOfInterval.default)({\n        start: (0, _startOfWeek.default)(now, this.dateOptions),\n        end: (0, _endOfWeek.default)(now, this.dateOptions)\n      }).map(function (day, i) {\n        return /*#__PURE__*/_react.default.createElement(\"span\", {\n          className: _this4.styles.weekDay,\n          key: i\n        }, (0, _format.default)(day, _this4.props.weekdayDisplayFormat, _this4.dateOptions));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props7 = this.props,\n          showDateDisplay = _this$props7.showDateDisplay,\n          onPreviewChange = _this$props7.onPreviewChange,\n          scroll = _this$props7.scroll,\n          direction = _this$props7.direction,\n          disabledDates = _this$props7.disabledDates,\n          disabledDay = _this$props7.disabledDay,\n          maxDate = _this$props7.maxDate,\n          minDate = _this$props7.minDate,\n          rangeColors = _this$props7.rangeColors,\n          color = _this$props7.color,\n          navigatorRenderer = _this$props7.navigatorRenderer,\n          className = _this$props7.className,\n          preview = _this$props7.preview;\n      var _this$state = this.state,\n          scrollArea = _this$state.scrollArea,\n          focusedDate = _this$state.focusedDate;\n      var isVertical = direction === 'vertical';\n      var monthAndYearRenderer = navigatorRenderer || this.renderMonthAndYear;\n      var ranges = this.props.ranges.map(function (range, i) {\n        return _objectSpread(_objectSpread({}, range), {}, {\n          color: range.color || rangeColors[i] || color\n        });\n      });\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: (0, _classnames3.default)(this.styles.calendarWrapper, className),\n        onMouseUp: function onMouseUp() {\n          return _this5.setState({\n            drag: {\n              status: false,\n              range: {}\n            }\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this5.setState({\n            drag: {\n              status: false,\n              range: {}\n            }\n          });\n        }\n      }, showDateDisplay && this.renderDateDisplay(), monthAndYearRenderer(focusedDate, this.changeShownDate, this.props), scroll.enabled ? /*#__PURE__*/_react.default.createElement(\"div\", null, isVertical && this.renderWeekdays(this.dateOptions), /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: (0, _classnames3.default)(this.styles.infiniteMonths, isVertical ? this.styles.monthsVertical : this.styles.monthsHorizontal),\n        onMouseLeave: function onMouseLeave() {\n          return onPreviewChange && onPreviewChange();\n        },\n        style: {\n          width: scrollArea.calendarWidth + 11,\n          height: scrollArea.calendarHeight + 11\n        },\n        onScroll: this.handleScroll\n      }, /*#__PURE__*/_react.default.createElement(_reactList.default, {\n        length: (0, _differenceInCalendarMonths.default)((0, _endOfMonth.default)(maxDate), (0, _addDays.default)((0, _startOfMonth.default)(minDate), -1), this.dateOptions),\n        treshold: 500,\n        type: \"variable\",\n        ref: function ref(target) {\n          return _this5.list = target;\n        },\n        itemSizeEstimator: this.estimateMonthSize,\n        axis: isVertical ? 'y' : 'x',\n        itemRenderer: function itemRenderer(index, key) {\n          var monthStep = (0, _addMonths.default)(minDate, index);\n          return /*#__PURE__*/_react.default.createElement(_Month.default, _extends({}, _this5.props, {\n            onPreviewChange: onPreviewChange || _this5.updatePreview,\n            preview: preview || _this5.state.preview,\n            ranges: ranges,\n            key: key,\n            drag: _this5.state.drag,\n            dateOptions: _this5.dateOptions,\n            disabledDates: disabledDates,\n            disabledDay: disabledDay,\n            month: monthStep,\n            onDragSelectionStart: _this5.onDragSelectionStart,\n            onDragSelectionEnd: _this5.onDragSelectionEnd,\n            onDragSelectionMove: _this5.onDragSelectionMove,\n            onMouseLeave: function onMouseLeave() {\n              return onPreviewChange && onPreviewChange();\n            },\n            styles: _this5.styles,\n            style: isVertical ? {\n              height: _this5.estimateMonthSize(index)\n            } : {\n              height: scrollArea.monthHeight,\n              width: _this5.estimateMonthSize(index)\n            },\n            showMonthName: true,\n            showWeekDays: !isVertical\n          }));\n        }\n      }))) : /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: (0, _classnames3.default)(this.styles.months, isVertical ? this.styles.monthsVertical : this.styles.monthsHorizontal)\n      }, new Array(this.props.months).fill(null).map(function (_, i) {\n        var monthStep = (0, _addMonths.default)(_this5.state.focusedDate, i);\n        ;\n\n        if (_this5.props.calendarFocus === 'backwards') {\n          monthStep = (0, _subMonths.default)(_this5.state.focusedDate, _this5.props.months - 1 - i);\n        }\n\n        return /*#__PURE__*/_react.default.createElement(_Month.default, _extends({}, _this5.props, {\n          onPreviewChange: onPreviewChange || _this5.updatePreview,\n          preview: preview || _this5.state.preview,\n          ranges: ranges,\n          key: i,\n          drag: _this5.state.drag,\n          dateOptions: _this5.dateOptions,\n          disabledDates: disabledDates,\n          disabledDay: disabledDay,\n          month: monthStep,\n          onDragSelectionStart: _this5.onDragSelectionStart,\n          onDragSelectionEnd: _this5.onDragSelectionEnd,\n          onDragSelectionMove: _this5.onDragSelectionMove,\n          onMouseLeave: function onMouseLeave() {\n            return onPreviewChange && onPreviewChange();\n          },\n          styles: _this5.styles,\n          showWeekDays: !isVertical || i === 0,\n          showMonthName: !isVertical || i > 0\n        }));\n      })));\n    }\n  }]);\n\n  return Calendar;\n}(_react.PureComponent);\n\nCalendar.defaultProps = {\n  showMonthArrow: true,\n  showMonthAndYearPickers: true,\n  disabledDates: [],\n  disabledDay: function disabledDay() {},\n  classNames: {},\n  locale: _enUS.default,\n  ranges: [],\n  focusedRange: [0, 0],\n  dateDisplayFormat: 'MMM d, yyyy',\n  monthDisplayFormat: 'MMM yyyy',\n  weekdayDisplayFormat: 'E',\n  dayDisplayFormat: 'd',\n  showDateDisplay: true,\n  showPreview: true,\n  displayMode: 'date',\n  months: 1,\n  color: '#3d91ff',\n  scroll: {\n    enabled: false\n  },\n  direction: 'vertical',\n  maxDate: (0, _addYears.default)(new Date(), 20),\n  minDate: (0, _addYears.default)(new Date(), -100),\n  rangeColors: ['#3d91ff', '#3ecf8e', '#fed14c'],\n  startDatePlaceholder: 'Early',\n  endDatePlaceholder: 'Continuous',\n  editableDateInputs: false,\n  dragSelectionEnabled: true,\n  fixedHeight: false,\n  calendarFocus: 'forwards',\n  preventSnapRefocus: false,\n  ariaLabels: {}\n};\nCalendar.propTypes = {\n  showMonthArrow: _propTypes.default.bool,\n  showMonthAndYearPickers: _propTypes.default.bool,\n  disabledDates: _propTypes.default.array,\n  disabledDay: _propTypes.default.func,\n  minDate: _propTypes.default.object,\n  maxDate: _propTypes.default.object,\n  date: _propTypes.default.object,\n  onChange: _propTypes.default.func,\n  onPreviewChange: _propTypes.default.func,\n  onRangeFocusChange: _propTypes.default.func,\n  classNames: _propTypes.default.object,\n  locale: _propTypes.default.object,\n  shownDate: _propTypes.default.object,\n  onShownDateChange: _propTypes.default.func,\n  ranges: _propTypes.default.arrayOf(_DayCell.rangeShape),\n  preview: _propTypes.default.shape({\n    startDate: _propTypes.default.object,\n    endDate: _propTypes.default.object,\n    color: _propTypes.default.string\n  }),\n  dateDisplayFormat: _propTypes.default.string,\n  monthDisplayFormat: _propTypes.default.string,\n  weekdayDisplayFormat: _propTypes.default.string,\n  weekStartsOn: _propTypes.default.number,\n  dayDisplayFormat: _propTypes.default.string,\n  focusedRange: _propTypes.default.arrayOf(_propTypes.default.number),\n  initialFocusedRange: _propTypes.default.arrayOf(_propTypes.default.number),\n  months: _propTypes.default.number,\n  className: _propTypes.default.string,\n  showDateDisplay: _propTypes.default.bool,\n  showPreview: _propTypes.default.bool,\n  displayMode: _propTypes.default.oneOf(['dateRange', 'date']),\n  color: _propTypes.default.string,\n  updateRange: _propTypes.default.func,\n  scroll: _propTypes.default.shape({\n    enabled: _propTypes.default.bool,\n    monthHeight: _propTypes.default.number,\n    longMonthHeight: _propTypes.default.number,\n    monthWidth: _propTypes.default.number,\n    calendarWidth: _propTypes.default.number,\n    calendarHeight: _propTypes.default.number\n  }),\n  direction: _propTypes.default.oneOf(['vertical', 'horizontal']),\n  startDatePlaceholder: _propTypes.default.string,\n  endDatePlaceholder: _propTypes.default.string,\n  navigatorRenderer: _propTypes.default.func,\n  rangeColors: _propTypes.default.arrayOf(_propTypes.default.string),\n  editableDateInputs: _propTypes.default.bool,\n  dragSelectionEnabled: _propTypes.default.bool,\n  fixedHeight: _propTypes.default.bool,\n  calendarFocus: _propTypes.default.string,\n  preventSnapRefocus: _propTypes.default.bool,\n  ariaLabels: _accessibility.ariaLabelsShape\n};\nvar _default = Calendar;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _isEqual = _interopRequireDefault(require(\"date-fns/isEqual\"));\n\nvar _isValid = _interopRequireDefault(require(\"date-fns/isValid\"));\n\nvar _parse = _interopRequireDefault(require(\"date-fns/parse\"));\n\nvar _format = _interopRequireDefault(require(\"date-fns/format\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DateInput = /*#__PURE__*/function (_PureComponent) {\n  _inherits(DateInput, _PureComponent);\n\n  var _super = _createSuper(DateInput);\n\n  function DateInput(props, context) {\n    var _this;\n\n    _classCallCheck(this, DateInput);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (e) {\n      var value = _this.state.value;\n\n      if (e.key === 'Enter') {\n        _this.update(value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      _this.setState({\n        value: e.target.value,\n        changed: true,\n        invalid: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      var value = _this.state.value;\n\n      _this.update(value);\n    });\n\n    _this.state = {\n      invalid: false,\n      changed: false,\n      value: _this.formatDate(props)\n    };\n    return _this;\n  }\n\n  _createClass(DateInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var value = prevProps.value;\n\n      if (!(0, _isEqual.default)(value, this.props.value)) {\n        this.setState({\n          value: this.formatDate(this.props)\n        });\n      }\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(_ref) {\n      var value = _ref.value,\n          dateDisplayFormat = _ref.dateDisplayFormat,\n          dateOptions = _ref.dateOptions;\n\n      if (value && (0, _isValid.default)(value)) {\n        return (0, _format.default)(value, dateDisplayFormat, dateOptions);\n      }\n\n      return '';\n    }\n  }, {\n    key: \"update\",\n    value: function update(value) {\n      var _this$state = this.state,\n          invalid = _this$state.invalid,\n          changed = _this$state.changed;\n\n      if (invalid || !changed || !value) {\n        return;\n      }\n\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          dateDisplayFormat = _this$props.dateDisplayFormat,\n          dateOptions = _this$props.dateOptions;\n      var parsed = (0, _parse.default)(value, dateDisplayFormat, new Date(), dateOptions);\n\n      if ((0, _isValid.default)(parsed)) {\n        this.setState({\n          changed: false\n        }, function () {\n          return onChange(parsed);\n        });\n      } else {\n        this.setState({\n          invalid: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          readOnly = _this$props2.readOnly,\n          placeholder = _this$props2.placeholder,\n          ariaLabel = _this$props2.ariaLabel,\n          disabled = _this$props2.disabled,\n          onFocus = _this$props2.onFocus;\n      var _this$state2 = this.state,\n          value = _this$state2.value,\n          invalid = _this$state2.invalid;\n      return /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: (0, _classnames.default)('rdrDateInput', className)\n      }, /*#__PURE__*/_react.default.createElement(\"input\", {\n        readOnly: readOnly,\n        disabled: disabled,\n        value: value,\n        placeholder: placeholder,\n        \"aria-label\": ariaLabel,\n        onKeyDown: this.onKeyDown,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        onFocus: onFocus\n      }), invalid && /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: \"rdrWarning\"\n      }, \"\\u26A0\"));\n    }\n  }]);\n\n  return DateInput;\n}(_react.PureComponent);\n\nDateInput.propTypes = {\n  value: _propTypes.default.object,\n  placeholder: _propTypes.default.string,\n  disabled: _propTypes.default.bool,\n  readOnly: _propTypes.default.bool,\n  dateOptions: _propTypes.default.object,\n  dateDisplayFormat: _propTypes.default.string,\n  ariaLabel: _propTypes.default.string,\n  className: _propTypes.default.string,\n  onFocus: _propTypes.default.func.isRequired,\n  onChange: _propTypes.default.func.isRequired\n};\nDateInput.defaultProps = {\n  readOnly: true,\n  disabled: false,\n  dateDisplayFormat: 'MMM D, YYYY'\n};\nvar _default = DateInput;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Calendar = _interopRequireDefault(require(\"../Calendar\"));\n\nvar _DayCell = require(\"../DayCell\");\n\nvar _utils = require(\"../../utils\");\n\nvar _max = _interopRequireDefault(require(\"date-fns/max\"));\n\nvar _isWithinInterval = _interopRequireDefault(require(\"date-fns/isWithinInterval\"));\n\nvar _min = _interopRequireDefault(require(\"date-fns/min\"));\n\nvar _addDays = _interopRequireDefault(require(\"date-fns/addDays\"));\n\nvar _differenceInCalendarDays = _interopRequireDefault(require(\"date-fns/differenceInCalendarDays\"));\n\nvar _isBefore = _interopRequireDefault(require(\"date-fns/isBefore\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _styles = _interopRequireDefault(require(\"../../styles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DateRange = /*#__PURE__*/function (_Component) {\n  _inherits(DateRange, _Component);\n\n  var _super = _createSuper(DateRange);\n\n  function DateRange(props, context) {\n    var _this;\n\n    _classCallCheck(this, DateRange);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"calcNewSelection\", function (value) {\n      var isSingleValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var focusedRange = _this.props.focusedRange || _this.state.focusedRange;\n      var _this$props = _this.props,\n          ranges = _this$props.ranges,\n          onChange = _this$props.onChange,\n          maxDate = _this$props.maxDate,\n          moveRangeOnFirstSelection = _this$props.moveRangeOnFirstSelection,\n          retainEndDateOnFirstSelection = _this$props.retainEndDateOnFirstSelection,\n          disabledDates = _this$props.disabledDates;\n      var focusedRangeIndex = focusedRange[0];\n      var selectedRange = ranges[focusedRangeIndex];\n      if (!selectedRange || !onChange) return {};\n      var startDate = selectedRange.startDate,\n          endDate = selectedRange.endDate;\n      var now = new Date();\n      var nextFocusRange;\n\n      if (!isSingleValue) {\n        startDate = value.startDate;\n        endDate = value.endDate;\n      } else if (focusedRange[1] === 0) {\n        // startDate selection\n        var dayOffset = (0, _differenceInCalendarDays.default)(endDate || now, startDate);\n\n        var calculateEndDate = function calculateEndDate() {\n          if (moveRangeOnFirstSelection) {\n            return (0, _addDays.default)(value, dayOffset);\n          }\n\n          if (retainEndDateOnFirstSelection) {\n            if (!endDate || (0, _isBefore.default)(value, endDate)) {\n              return endDate;\n            }\n\n            return value;\n          }\n\n          return value || now;\n        };\n\n        startDate = value;\n        endDate = calculateEndDate();\n        if (maxDate) endDate = (0, _min.default)([endDate, maxDate]);\n        nextFocusRange = [focusedRange[0], 1];\n      } else {\n        endDate = value;\n      } // reverse dates if startDate before endDate\n\n\n      var isStartDateSelected = focusedRange[1] === 0;\n\n      if ((0, _isBefore.default)(endDate, startDate)) {\n        isStartDateSelected = !isStartDateSelected;\n        var _ref = [endDate, startDate];\n        startDate = _ref[0];\n        endDate = _ref[1];\n      }\n\n      var inValidDatesWithinRange = disabledDates.filter(function (disabledDate) {\n        return (0, _isWithinInterval.default)(disabledDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n\n      if (inValidDatesWithinRange.length > 0) {\n        if (isStartDateSelected) {\n          startDate = (0, _addDays.default)((0, _max.default)(inValidDatesWithinRange), 1);\n        } else {\n          endDate = (0, _addDays.default)((0, _min.default)(inValidDatesWithinRange), -1);\n        }\n      }\n\n      if (!nextFocusRange) {\n        var nextFocusRangeIndex = (0, _utils.findNextRangeIndex)(_this.props.ranges, focusedRange[0]);\n        nextFocusRange = [nextFocusRangeIndex, 0];\n      }\n\n      return {\n        wasValid: !(inValidDatesWithinRange.length > 0),\n        range: {\n          startDate: startDate,\n          endDate: endDate\n        },\n        nextFocusRange: nextFocusRange\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelection\", function (value, isSingleValue) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          ranges = _this$props2.ranges,\n          onRangeFocusChange = _this$props2.onRangeFocusChange;\n      var focusedRange = _this.props.focusedRange || _this.state.focusedRange;\n      var focusedRangeIndex = focusedRange[0];\n      var selectedRange = ranges[focusedRangeIndex];\n      if (!selectedRange) return;\n\n      var newSelection = _this.calcNewSelection(value, isSingleValue);\n\n      onChange(_defineProperty({}, selectedRange.key || \"range\".concat(focusedRangeIndex + 1), _objectSpread(_objectSpread({}, selectedRange), newSelection.range)));\n\n      _this.setState({\n        focusedRange: newSelection.nextFocusRange,\n        preview: null\n      });\n\n      onRangeFocusChange && onRangeFocusChange(newSelection.nextFocusRange);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRangeFocusChange\", function (focusedRange) {\n      _this.setState({\n        focusedRange: focusedRange\n      });\n\n      _this.props.onRangeFocusChange && _this.props.onRangeFocusChange(focusedRange);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePreview\", function (val) {\n      var _ranges$focusedRange$;\n\n      if (!val) {\n        _this.setState({\n          preview: null\n        });\n\n        return;\n      }\n\n      var _this$props3 = _this.props,\n          rangeColors = _this$props3.rangeColors,\n          ranges = _this$props3.ranges;\n      var focusedRange = _this.props.focusedRange || _this.state.focusedRange;\n      var color = ((_ranges$focusedRange$ = ranges[focusedRange[0]]) === null || _ranges$focusedRange$ === void 0 ? void 0 : _ranges$focusedRange$.color) || rangeColors[focusedRange[0]] || color;\n\n      _this.setState({\n        preview: _objectSpread(_objectSpread({}, val.range), {}, {\n          color: color\n        })\n      });\n    });\n\n    _this.state = {\n      focusedRange: props.initialFocusedRange || [(0, _utils.findNextRangeIndex)(props.ranges), 0],\n      preview: null\n    };\n    _this.styles = (0, _utils.generateStyles)([_styles.default, props.classNames]);\n    return _this;\n  }\n\n  _createClass(DateRange, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_react.default.createElement(_Calendar.default, _extends({\n        focusedRange: this.state.focusedRange,\n        onRangeFocusChange: this.handleRangeFocusChange,\n        preview: this.state.preview,\n        onPreviewChange: function onPreviewChange(value) {\n          _this2.updatePreview(value ? _this2.calcNewSelection(value) : null);\n        }\n      }, this.props, {\n        displayMode: \"dateRange\",\n        className: (0, _classnames.default)(this.styles.dateRangeWrapper, this.props.className),\n        onChange: this.setSelection,\n        updateRange: function updateRange(val) {\n          return _this2.setSelection(val, false);\n        },\n        ref: function ref(target) {\n          _this2.calendar = target;\n        }\n      }));\n    }\n  }]);\n\n  return DateRange;\n}(_react.Component);\n\nDateRange.defaultProps = {\n  classNames: {},\n  ranges: [],\n  moveRangeOnFirstSelection: false,\n  retainEndDateOnFirstSelection: false,\n  rangeColors: ['#3d91ff', '#3ecf8e', '#fed14c'],\n  disabledDates: []\n};\nDateRange.propTypes = _objectSpread(_objectSpread({}, _Calendar.default.propTypes), {}, {\n  onChange: _propTypes.default.func,\n  onRangeFocusChange: _propTypes.default.func,\n  className: _propTypes.default.string,\n  ranges: _propTypes.default.arrayOf(_DayCell.rangeShape),\n  moveRangeOnFirstSelection: _propTypes.default.bool,\n  retainEndDateOnFirstSelection: _propTypes.default.bool\n});\nvar _default = DateRange;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _DateRange = _interopRequireDefault(require(\"../DateRange\"));\n\nvar _DefinedRange = _interopRequireDefault(require(\"../DefinedRange\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _styles = _interopRequireDefault(require(\"../../styles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar DateRangePicker = /*#__PURE__*/function (_Component) {\n  _inherits(DateRangePicker, _Component);\n\n  var _super = _createSuper(DateRangePicker);\n\n  function DateRangePicker(props) {\n    var _this;\n\n    _classCallCheck(this, DateRangePicker);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      focusedRange: [(0, _utils.findNextRangeIndex)(props.ranges), 0]\n    };\n    _this.styles = (0, _utils.generateStyles)([_styles.default, props.classNames]);\n    return _this;\n  }\n\n  _createClass(DateRangePicker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var focusedRange = this.state.focusedRange;\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: (0, _classnames.default)(this.styles.dateRangePickerWrapper, this.props.className)\n      }, /*#__PURE__*/_react.default.createElement(_DefinedRange.default, _extends({\n        focusedRange: focusedRange,\n        onPreviewChange: function onPreviewChange(value) {\n          return _this2.dateRange.updatePreview(value ? _this2.dateRange.calcNewSelection(value, typeof value === 'string') : null);\n        }\n      }, this.props, {\n        range: this.props.ranges[focusedRange[0]],\n        className: undefined\n      })), /*#__PURE__*/_react.default.createElement(_DateRange.default, _extends({\n        onRangeFocusChange: function onRangeFocusChange(focusedRange) {\n          return _this2.setState({\n            focusedRange: focusedRange\n          });\n        },\n        focusedRange: focusedRange\n      }, this.props, {\n        ref: function ref(t) {\n          return _this2.dateRange = t;\n        },\n        className: undefined\n      })));\n    }\n  }]);\n\n  return DateRangePicker;\n}(_react.Component);\n\nDateRangePicker.defaultProps = {};\nDateRangePicker.propTypes = _objectSpread(_objectSpread(_objectSpread({}, _DateRange.default.propTypes), _DefinedRange.default.propTypes), {}, {\n  className: _propTypes.default.string\n});\nvar _default = DateRangePicker;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.rangeShape = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames4 = _interopRequireDefault(require(\"classnames\"));\n\nvar _endOfDay = _interopRequireDefault(require(\"date-fns/endOfDay\"));\n\nvar _isBefore = _interopRequireDefault(require(\"date-fns/isBefore\"));\n\nvar _isAfter = _interopRequireDefault(require(\"date-fns/isAfter\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"date-fns/isSameDay\"));\n\nvar _format = _interopRequireDefault(require(\"date-fns/format\"));\n\nvar _startOfDay = _interopRequireDefault(require(\"date-fns/startOfDay\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DayCell = /*#__PURE__*/function (_Component) {\n  _inherits(DayCell, _Component);\n\n  var _super = _createSuper(DayCell);\n\n  function DayCell(props, context) {\n    var _this;\n\n    _classCallCheck(this, DayCell);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyEvent\", function (event) {\n      var _this$props = _this.props,\n          day = _this$props.day,\n          onMouseDown = _this$props.onMouseDown,\n          onMouseUp = _this$props.onMouseUp;\n\n      if ([13\n      /* space */\n      , 32\n      /* enter */\n      ].includes(event.keyCode)) {\n        if (event.type === 'keydown') onMouseDown(day);else onMouseUp(day);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEvent\", function (event) {\n      var _this$props2 = _this.props,\n          day = _this$props2.day,\n          disabled = _this$props2.disabled,\n          onPreviewChange = _this$props2.onPreviewChange,\n          onMouseEnter = _this$props2.onMouseEnter,\n          onMouseDown = _this$props2.onMouseDown,\n          onMouseUp = _this$props2.onMouseUp;\n      var stateChanges = {};\n\n      if (disabled) {\n        onPreviewChange();\n        return;\n      }\n\n      switch (event.type) {\n        case 'mouseenter':\n          onMouseEnter(day);\n          onPreviewChange(day);\n          stateChanges.hover = true;\n          break;\n\n        case 'blur':\n        case 'mouseleave':\n          stateChanges.hover = false;\n          break;\n\n        case 'mousedown':\n          stateChanges.active = true;\n          onMouseDown(day);\n          break;\n\n        case 'mouseup':\n          event.stopPropagation();\n          stateChanges.active = false;\n          onMouseUp(day);\n          break;\n\n        case 'focus':\n          onPreviewChange(day);\n          break;\n      }\n\n      if (Object.keys(stateChanges).length) {\n        _this.setState(stateChanges);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getClassNames\", function () {\n      var _classnames;\n\n      var _this$props3 = _this.props,\n          isPassive = _this$props3.isPassive,\n          isToday = _this$props3.isToday,\n          isWeekend = _this$props3.isWeekend,\n          isStartOfWeek = _this$props3.isStartOfWeek,\n          isEndOfWeek = _this$props3.isEndOfWeek,\n          isStartOfMonth = _this$props3.isStartOfMonth,\n          isEndOfMonth = _this$props3.isEndOfMonth,\n          disabled = _this$props3.disabled,\n          styles = _this$props3.styles;\n      return (0, _classnames4.default)(styles.day, (_classnames = {}, _defineProperty(_classnames, styles.dayPassive, isPassive), _defineProperty(_classnames, styles.dayDisabled, disabled), _defineProperty(_classnames, styles.dayToday, isToday), _defineProperty(_classnames, styles.dayWeekend, isWeekend), _defineProperty(_classnames, styles.dayStartOfWeek, isStartOfWeek), _defineProperty(_classnames, styles.dayEndOfWeek, isEndOfWeek), _defineProperty(_classnames, styles.dayStartOfMonth, isStartOfMonth), _defineProperty(_classnames, styles.dayEndOfMonth, isEndOfMonth), _defineProperty(_classnames, styles.dayHovered, _this.state.hover), _defineProperty(_classnames, styles.dayActive, _this.state.active), _classnames));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPreviewPlaceholder\", function () {\n      var _classnames2;\n\n      var _this$props4 = _this.props,\n          preview = _this$props4.preview,\n          day = _this$props4.day,\n          styles = _this$props4.styles;\n      if (!preview) return null;\n      var startDate = preview.startDate ? (0, _endOfDay.default)(preview.startDate) : null;\n      var endDate = preview.endDate ? (0, _startOfDay.default)(preview.endDate) : null;\n      var isInRange = (!startDate || (0, _isAfter.default)(day, startDate)) && (!endDate || (0, _isBefore.default)(day, endDate));\n      var isStartEdge = !isInRange && (0, _isSameDay.default)(day, startDate);\n      var isEndEdge = !isInRange && (0, _isSameDay.default)(day, endDate);\n      return /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: (0, _classnames4.default)((_classnames2 = {}, _defineProperty(_classnames2, styles.dayStartPreview, isStartEdge), _defineProperty(_classnames2, styles.dayInPreview, isInRange), _defineProperty(_classnames2, styles.dayEndPreview, isEndEdge), _classnames2)),\n        style: {\n          color: preview.color\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSelectionPlaceholders\", function () {\n      var _this$props5 = _this.props,\n          styles = _this$props5.styles,\n          ranges = _this$props5.ranges,\n          day = _this$props5.day;\n\n      if (_this.props.displayMode === 'date') {\n        var isSelected = (0, _isSameDay.default)(_this.props.day, _this.props.date);\n        return isSelected ? /*#__PURE__*/_react.default.createElement(\"span\", {\n          className: styles.selected,\n          style: {\n            color: _this.props.color\n          }\n        }) : null;\n      }\n\n      var inRanges = ranges.reduce(function (result, range) {\n        var startDate = range.startDate;\n        var endDate = range.endDate;\n\n        if (startDate && endDate && (0, _isBefore.default)(endDate, startDate)) {\n          var _ref = [endDate, startDate];\n          startDate = _ref[0];\n          endDate = _ref[1];\n        }\n\n        startDate = startDate ? (0, _endOfDay.default)(startDate) : null;\n        endDate = endDate ? (0, _startOfDay.default)(endDate) : null;\n        var isInRange = (!startDate || (0, _isAfter.default)(day, startDate)) && (!endDate || (0, _isBefore.default)(day, endDate));\n        var isStartEdge = !isInRange && (0, _isSameDay.default)(day, startDate);\n        var isEndEdge = !isInRange && (0, _isSameDay.default)(day, endDate);\n\n        if (isInRange || isStartEdge || isEndEdge) {\n          return [].concat(_toConsumableArray(result), [_objectSpread({\n            isStartEdge: isStartEdge,\n            isEndEdge: isEndEdge,\n            isInRange: isInRange\n          }, range)]);\n        }\n\n        return result;\n      }, []);\n      return inRanges.map(function (range, i) {\n        var _classnames3;\n\n        return /*#__PURE__*/_react.default.createElement(\"span\", {\n          key: i,\n          className: (0, _classnames4.default)((_classnames3 = {}, _defineProperty(_classnames3, styles.startEdge, range.isStartEdge), _defineProperty(_classnames3, styles.endEdge, range.isEndEdge), _defineProperty(_classnames3, styles.inRange, range.isInRange), _classnames3)),\n          style: {\n            color: range.color || _this.props.color\n          }\n        });\n      });\n    });\n\n    _this.state = {\n      hover: false,\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(DayCell, [{\n    key: \"render\",\n    value: function render() {\n      var dayContentRenderer = this.props.dayContentRenderer;\n      return /*#__PURE__*/_react.default.createElement(\"button\", _extends({\n        type: \"button\",\n        onMouseEnter: this.handleMouseEvent,\n        onMouseLeave: this.handleMouseEvent,\n        onFocus: this.handleMouseEvent,\n        onMouseDown: this.handleMouseEvent,\n        onMouseUp: this.handleMouseEvent,\n        onBlur: this.handleMouseEvent,\n        onPauseCapture: this.handleMouseEvent,\n        onKeyDown: this.handleKeyEvent,\n        onKeyUp: this.handleKeyEvent,\n        className: this.getClassNames(this.props.styles)\n      }, this.props.disabled || this.props.isPassive ? {\n        tabIndex: -1\n      } : {}, {\n        style: {\n          color: this.props.color\n        }\n      }), this.renderSelectionPlaceholders(), this.renderPreviewPlaceholder(), /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: this.props.styles.dayNumber\n      }, (dayContentRenderer === null || dayContentRenderer === void 0 ? void 0 : dayContentRenderer(this.props.day)) || /*#__PURE__*/_react.default.createElement(\"span\", null, (0, _format.default)(this.props.day, this.props.dayDisplayFormat))));\n    }\n  }]);\n\n  return DayCell;\n}(_react.Component);\n\nDayCell.defaultProps = {};\n\nvar rangeShape = _propTypes.default.shape({\n  startDate: _propTypes.default.object,\n  endDate: _propTypes.default.object,\n  color: _propTypes.default.string,\n  key: _propTypes.default.string,\n  autoFocus: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  showDateDisplay: _propTypes.default.bool\n});\n\nexports.rangeShape = rangeShape;\nDayCell.propTypes = {\n  day: _propTypes.default.object.isRequired,\n  dayDisplayFormat: _propTypes.default.string,\n  date: _propTypes.default.object,\n  ranges: _propTypes.default.arrayOf(rangeShape),\n  preview: _propTypes.default.shape({\n    startDate: _propTypes.default.object,\n    endDate: _propTypes.default.object,\n    color: _propTypes.default.string\n  }),\n  onPreviewChange: _propTypes.default.func,\n  previewColor: _propTypes.default.string,\n  disabled: _propTypes.default.bool,\n  isPassive: _propTypes.default.bool,\n  isToday: _propTypes.default.bool,\n  isWeekend: _propTypes.default.bool,\n  isStartOfWeek: _propTypes.default.bool,\n  isEndOfWeek: _propTypes.default.bool,\n  isStartOfMonth: _propTypes.default.bool,\n  isEndOfMonth: _propTypes.default.bool,\n  color: _propTypes.default.string,\n  displayMode: _propTypes.default.oneOf(['dateRange', 'date']),\n  styles: _propTypes.default.object,\n  onMouseDown: _propTypes.default.func,\n  onMouseUp: _propTypes.default.func,\n  onMouseEnter: _propTypes.default.func,\n  dayContentRenderer: _propTypes.default.func\n};\nvar _default = DayCell;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styles = _interopRequireDefault(require(\"../../styles\"));\n\nvar _defaultRanges = require(\"../../defaultRanges\");\n\nvar _DayCell = require(\"../DayCell\");\n\nvar _InputRangeField = _interopRequireDefault(require(\"../InputRangeField\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DefinedRange = /*#__PURE__*/function (_Component) {\n  _inherits(DefinedRange, _Component);\n\n  var _super = _createSuper(DefinedRange);\n\n  function DefinedRange(props) {\n    var _this;\n\n    _classCallCheck(this, DefinedRange);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRangeChange\", function (range) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          ranges = _this$props.ranges,\n          focusedRange = _this$props.focusedRange;\n      var selectedRange = ranges[focusedRange[0]];\n      if (!onChange || !selectedRange) return;\n      onChange(_defineProperty({}, selectedRange.key || \"range\".concat(focusedRange[0] + 1), _objectSpread(_objectSpread({}, selectedRange), range)));\n    });\n\n    _this.state = {\n      rangeOffset: 0,\n      focusedInput: -1\n    };\n    return _this;\n  }\n\n  _createClass(DefinedRange, [{\n    key: \"getRangeOptionValue\",\n    value: function getRangeOptionValue(option) {\n      var _this$props2 = this.props,\n          _this$props2$ranges = _this$props2.ranges,\n          ranges = _this$props2$ranges === void 0 ? [] : _this$props2$ranges,\n          _this$props2$focusedR = _this$props2.focusedRange,\n          focusedRange = _this$props2$focusedR === void 0 ? [] : _this$props2$focusedR;\n\n      if (typeof option.getCurrentValue !== 'function') {\n        return '';\n      }\n\n      var selectedRange = ranges[focusedRange[0]] || {};\n      return option.getCurrentValue(selectedRange) || '';\n    }\n  }, {\n    key: \"getSelectedRange\",\n    value: function getSelectedRange(ranges, staticRange) {\n      var focusedRangeIndex = ranges.findIndex(function (range) {\n        if (!range.startDate || !range.endDate || range.disabled) return false;\n        return staticRange.isSelected(range);\n      });\n      var selectedRange = ranges[focusedRangeIndex];\n      return {\n        selectedRange: selectedRange,\n        focusedRangeIndex: focusedRangeIndex\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          headerContent = _this$props3.headerContent,\n          footerContent = _this$props3.footerContent,\n          onPreviewChange = _this$props3.onPreviewChange,\n          inputRanges = _this$props3.inputRanges,\n          staticRanges = _this$props3.staticRanges,\n          ranges = _this$props3.ranges,\n          renderStaticRangeLabel = _this$props3.renderStaticRangeLabel,\n          rangeColors = _this$props3.rangeColors,\n          className = _this$props3.className;\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: (0, _classnames.default)(_styles.default.definedRangesWrapper, className)\n      }, headerContent, /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _styles.default.staticRanges\n      }, staticRanges.map(function (staticRange, i) {\n        var _this2$getSelectedRan = _this2.getSelectedRange(ranges, staticRange),\n            selectedRange = _this2$getSelectedRan.selectedRange,\n            focusedRangeIndex = _this2$getSelectedRan.focusedRangeIndex;\n\n        var labelContent;\n\n        if (staticRange.hasCustomRendering) {\n          labelContent = renderStaticRangeLabel(staticRange);\n        } else {\n          labelContent = staticRange.label;\n        }\n\n        return /*#__PURE__*/_react.default.createElement(\"button\", {\n          type: \"button\",\n          className: (0, _classnames.default)(_styles.default.staticRange, _defineProperty({}, _styles.default.staticRangeSelected, Boolean(selectedRange))),\n          style: {\n            color: selectedRange ? selectedRange.color || rangeColors[focusedRangeIndex] : null\n          },\n          key: i,\n          onClick: function onClick() {\n            return _this2.handleRangeChange(staticRange.range(_this2.props));\n          },\n          onFocus: function onFocus() {\n            return onPreviewChange && onPreviewChange(staticRange.range(_this2.props));\n          },\n          onMouseOver: function onMouseOver() {\n            return onPreviewChange && onPreviewChange(staticRange.range(_this2.props));\n          },\n          onMouseLeave: function onMouseLeave() {\n            onPreviewChange && onPreviewChange();\n          }\n        }, /*#__PURE__*/_react.default.createElement(\"span\", {\n          tabIndex: -1,\n          className: _styles.default.staticRangeLabel\n        }, labelContent));\n      })), /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: _styles.default.inputRanges\n      }, inputRanges.map(function (rangeOption, i) {\n        return /*#__PURE__*/_react.default.createElement(_InputRangeField.default, {\n          key: i,\n          styles: _styles.default,\n          label: rangeOption.label,\n          onFocus: function onFocus() {\n            return _this2.setState({\n              focusedInput: i,\n              rangeOffset: 0\n            });\n          },\n          onBlur: function onBlur() {\n            return _this2.setState({\n              rangeOffset: 0\n            });\n          },\n          onChange: function onChange(value) {\n            return _this2.handleRangeChange(rangeOption.range(value, _this2.props));\n          },\n          value: _this2.getRangeOptionValue(rangeOption)\n        });\n      })), footerContent);\n    }\n  }]);\n\n  return DefinedRange;\n}(_react.Component);\n\nDefinedRange.propTypes = {\n  inputRanges: _propTypes.default.array,\n  staticRanges: _propTypes.default.array,\n  ranges: _propTypes.default.arrayOf(_DayCell.rangeShape),\n  focusedRange: _propTypes.default.arrayOf(_propTypes.default.number),\n  onPreviewChange: _propTypes.default.func,\n  onChange: _propTypes.default.func,\n  footerContent: _propTypes.default.any,\n  headerContent: _propTypes.default.any,\n  rangeColors: _propTypes.default.arrayOf(_propTypes.default.string),\n  className: _propTypes.default.string,\n  renderStaticRangeLabel: _propTypes.default.func\n};\nDefinedRange.defaultProps = {\n  inputRanges: _defaultRanges.defaultInputRanges,\n  staticRanges: _defaultRanges.defaultStaticRanges,\n  ranges: [],\n  rangeColors: ['#3d91ff', '#3ecf8e', '#fed14c'],\n  focusedRange: [0, 0]\n};\nvar _default = DefinedRange;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar MIN = 0;\nvar MAX = 99999;\n\nvar InputRangeField = /*#__PURE__*/function (_Component) {\n  _inherits(InputRangeField, _Component);\n\n  var _super = _createSuper(InputRangeField);\n\n  function InputRangeField(props, context) {\n    var _this;\n\n    _classCallCheck(this, InputRangeField);\n\n    _this = _super.call(this, props, context);\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var onChange = _this.props.onChange;\n      var value = parseInt(e.target.value, 10);\n      value = isNaN(value) ? 0 : Math.max(Math.min(MAX, value), MIN);\n      onChange(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(InputRangeField, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label,\n          placeholder = _this$props.placeholder;\n      return value !== nextProps.value || label !== nextProps.label || placeholder !== nextProps.placeholder;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          label = _this$props2.label,\n          placeholder = _this$props2.placeholder,\n          value = _this$props2.value,\n          styles = _this$props2.styles,\n          onBlur = _this$props2.onBlur,\n          onFocus = _this$props2.onFocus;\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: styles.inputRange\n      }, /*#__PURE__*/_react.default.createElement(\"input\", {\n        className: styles.inputRangeInput,\n        placeholder: placeholder,\n        value: value,\n        min: MIN,\n        max: MAX,\n        onChange: this.onChange,\n        onFocus: onFocus,\n        onBlur: onBlur\n      }), /*#__PURE__*/_react.default.createElement(\"span\", {\n        className: styles.inputRangeLabel\n      }, label));\n    }\n  }]);\n\n  return InputRangeField;\n}(_react.Component);\n\nInputRangeField.propTypes = {\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  label: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.node]).isRequired,\n  placeholder: _propTypes.default.string,\n  styles: _propTypes.default.shape({\n    inputRange: _propTypes.default.string,\n    inputRangeInput: _propTypes.default.string,\n    inputRangeLabel: _propTypes.default.string\n  }).isRequired,\n  onBlur: _propTypes.default.func.isRequired,\n  onFocus: _propTypes.default.func.isRequired,\n  onChange: _propTypes.default.func.isRequired\n};\nInputRangeField.defaultProps = {\n  value: '',\n  placeholder: '-'\n};\nvar _default = InputRangeField;\nexports.default = _default;","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _DayCell = _interopRequireWildcard(require(\"../DayCell\"));\n\nvar _eachDayOfInterval = _interopRequireDefault(require(\"date-fns/eachDayOfInterval\"));\n\nvar _isWithinInterval = _interopRequireDefault(require(\"date-fns/isWithinInterval\"));\n\nvar _isWeekend = _interopRequireDefault(require(\"date-fns/isWeekend\"));\n\nvar _isAfter = _interopRequireDefault(require(\"date-fns/isAfter\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"date-fns/isSameDay\"));\n\nvar _isBefore = _interopRequireDefault(require(\"date-fns/isBefore\"));\n\nvar _endOfWeek = _interopRequireDefault(require(\"date-fns/endOfWeek\"));\n\nvar _startOfWeek = _interopRequireDefault(require(\"date-fns/startOfWeek\"));\n\nvar _endOfDay = _interopRequireDefault(require(\"date-fns/endOfDay\"));\n\nvar _startOfDay = _interopRequireDefault(require(\"date-fns/startOfDay\"));\n\nvar _format = _interopRequireDefault(require(\"date-fns/format\"));\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction renderWeekdays(styles, dateOptions, weekdayDisplayFormat) {\n  var now = new Date();\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: styles.weekDays\n  }, (0, _eachDayOfInterval.default)({\n    start: (0, _startOfWeek.default)(now, dateOptions),\n    end: (0, _endOfWeek.default)(now, dateOptions)\n  }).map(function (day, i) {\n    return /*#__PURE__*/_react.default.createElement(\"span\", {\n      className: styles.weekDay,\n      key: i\n    }, (0, _format.default)(day, weekdayDisplayFormat, dateOptions));\n  }));\n}\n\nvar Month = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Month, _PureComponent);\n\n  var _super = _createSuper(Month);\n\n  function Month() {\n    _classCallCheck(this, Month);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Month, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var now = new Date();\n      var _this$props = this.props,\n          displayMode = _this$props.displayMode,\n          focusedRange = _this$props.focusedRange,\n          drag = _this$props.drag,\n          styles = _this$props.styles,\n          disabledDates = _this$props.disabledDates,\n          disabledDay = _this$props.disabledDay;\n      var minDate = this.props.minDate && (0, _startOfDay.default)(this.props.minDate);\n      var maxDate = this.props.maxDate && (0, _endOfDay.default)(this.props.maxDate);\n      var monthDisplay = (0, _utils.getMonthDisplayRange)(this.props.month, this.props.dateOptions, this.props.fixedHeight);\n      var ranges = this.props.ranges;\n\n      if (displayMode === 'dateRange' && drag.status) {\n        var _drag$range = drag.range,\n            startDate = _drag$range.startDate,\n            endDate = _drag$range.endDate;\n        ranges = ranges.map(function (range, i) {\n          if (i !== focusedRange[0]) return range;\n          return _objectSpread(_objectSpread({}, range), {}, {\n            startDate: startDate,\n            endDate: endDate\n          });\n        });\n      }\n\n      var showPreview = this.props.showPreview && !drag.disablePreview;\n      return /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: styles.month,\n        style: this.props.style\n      }, this.props.showMonthName ? /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: styles.monthName\n      }, (0, _format.default)(this.props.month, this.props.monthDisplayFormat, this.props.dateOptions)) : null, this.props.showWeekDays && renderWeekdays(styles, this.props.dateOptions, this.props.weekdayDisplayFormat), /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: styles.days,\n        onMouseLeave: this.props.onMouseLeave\n      }, (0, _eachDayOfInterval.default)({\n        start: monthDisplay.start,\n        end: monthDisplay.end\n      }).map(function (day, index) {\n        var isStartOfMonth = (0, _isSameDay.default)(day, monthDisplay.startDateOfMonth);\n        var isEndOfMonth = (0, _isSameDay.default)(day, monthDisplay.endDateOfMonth);\n        var isOutsideMinMax = minDate && (0, _isBefore.default)(day, minDate) || maxDate && (0, _isAfter.default)(day, maxDate);\n        var isDisabledSpecifically = disabledDates.some(function (disabledDate) {\n          return (0, _isSameDay.default)(disabledDate, day);\n        });\n        var isDisabledDay = disabledDay(day);\n        return /*#__PURE__*/_react.default.createElement(_DayCell.default, _extends({}, _this.props, {\n          ranges: ranges,\n          day: day,\n          preview: showPreview ? _this.props.preview : null,\n          isWeekend: (0, _isWeekend.default)(day, _this.props.dateOptions),\n          isToday: (0, _isSameDay.default)(day, now),\n          isStartOfWeek: (0, _isSameDay.default)(day, (0, _startOfWeek.default)(day, _this.props.dateOptions)),\n          isEndOfWeek: (0, _isSameDay.default)(day, (0, _endOfWeek.default)(day, _this.props.dateOptions)),\n          isStartOfMonth: isStartOfMonth,\n          isEndOfMonth: isEndOfMonth,\n          key: index,\n          disabled: isOutsideMinMax || isDisabledSpecifically || isDisabledDay,\n          isPassive: !(0, _isWithinInterval.default)(day, {\n            start: monthDisplay.startDateOfMonth,\n            end: monthDisplay.endDateOfMonth\n          }),\n          styles: styles,\n          onMouseDown: _this.props.onDragSelectionStart,\n          onMouseUp: _this.props.onDragSelectionEnd,\n          onMouseEnter: _this.props.onDragSelectionMove,\n          dragRange: drag.range,\n          drag: drag.status\n        }));\n      })));\n    }\n  }]);\n\n  return Month;\n}(_react.PureComponent);\n\nMonth.defaultProps = {};\nMonth.propTypes = {\n  style: _propTypes.default.object,\n  styles: _propTypes.default.object,\n  month: _propTypes.default.object,\n  drag: _propTypes.default.object,\n  dateOptions: _propTypes.default.object,\n  disabledDates: _propTypes.default.array,\n  disabledDay: _propTypes.default.func,\n  preview: _propTypes.default.shape({\n    startDate: _propTypes.default.object,\n    endDate: _propTypes.default.object\n  }),\n  showPreview: _propTypes.default.bool,\n  displayMode: _propTypes.default.oneOf(['dateRange', 'date']),\n  minDate: _propTypes.default.object,\n  maxDate: _propTypes.default.object,\n  ranges: _propTypes.default.arrayOf(_DayCell.rangeShape),\n  focusedRange: _propTypes.default.arrayOf(_propTypes.default.number),\n  onDragSelectionStart: _propTypes.default.func,\n  onDragSelectionEnd: _propTypes.default.func,\n  onDragSelectionMove: _propTypes.default.func,\n  onMouseLeave: _propTypes.default.func,\n  monthDisplayFormat: _propTypes.default.string,\n  weekdayDisplayFormat: _propTypes.default.string,\n  dayDisplayFormat: _propTypes.default.string,\n  showWeekDays: _propTypes.default.bool,\n  showMonthName: _propTypes.default.bool,\n  fixedHeight: _propTypes.default.bool\n};\nvar _default = Month;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStaticRanges = createStaticRanges;\nexports.defaultInputRanges = exports.defaultStaticRanges = void 0;\n\nvar _differenceInCalendarDays = _interopRequireDefault(require(\"date-fns/differenceInCalendarDays\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"date-fns/isSameDay\"));\n\nvar _endOfWeek = _interopRequireDefault(require(\"date-fns/endOfWeek\"));\n\nvar _startOfWeek = _interopRequireDefault(require(\"date-fns/startOfWeek\"));\n\nvar _addMonths = _interopRequireDefault(require(\"date-fns/addMonths\"));\n\nvar _endOfMonth = _interopRequireDefault(require(\"date-fns/endOfMonth\"));\n\nvar _startOfMonth = _interopRequireDefault(require(\"date-fns/startOfMonth\"));\n\nvar _startOfDay = _interopRequireDefault(require(\"date-fns/startOfDay\"));\n\nvar _endOfDay = _interopRequireDefault(require(\"date-fns/endOfDay\"));\n\nvar _addDays = _interopRequireDefault(require(\"date-fns/addDays\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar defineds = {\n  startOfWeek: (0, _startOfWeek.default)(new Date()),\n  endOfWeek: (0, _endOfWeek.default)(new Date()),\n  startOfLastWeek: (0, _startOfWeek.default)((0, _addDays.default)(new Date(), -7)),\n  endOfLastWeek: (0, _endOfWeek.default)((0, _addDays.default)(new Date(), -7)),\n  startOfToday: (0, _startOfDay.default)(new Date()),\n  endOfToday: (0, _endOfDay.default)(new Date()),\n  startOfYesterday: (0, _startOfDay.default)((0, _addDays.default)(new Date(), -1)),\n  endOfYesterday: (0, _endOfDay.default)((0, _addDays.default)(new Date(), -1)),\n  startOfMonth: (0, _startOfMonth.default)(new Date()),\n  endOfMonth: (0, _endOfMonth.default)(new Date()),\n  startOfLastMonth: (0, _startOfMonth.default)((0, _addMonths.default)(new Date(), -1)),\n  endOfLastMonth: (0, _endOfMonth.default)((0, _addMonths.default)(new Date(), -1))\n};\nvar staticRangeHandler = {\n  range: {},\n  isSelected: function isSelected(range) {\n    var definedRange = this.range();\n    return (0, _isSameDay.default)(range.startDate, definedRange.startDate) && (0, _isSameDay.default)(range.endDate, definedRange.endDate);\n  }\n};\n\nfunction createStaticRanges(ranges) {\n  return ranges.map(function (range) {\n    return _objectSpread(_objectSpread({}, staticRangeHandler), range);\n  });\n}\n\nvar defaultStaticRanges = createStaticRanges([{\n  label: 'Today',\n  range: function range() {\n    return {\n      startDate: defineds.startOfToday,\n      endDate: defineds.endOfToday\n    };\n  }\n}, {\n  label: 'Yesterday',\n  range: function range() {\n    return {\n      startDate: defineds.startOfYesterday,\n      endDate: defineds.endOfYesterday\n    };\n  }\n}, {\n  label: 'This Week',\n  range: function range() {\n    return {\n      startDate: defineds.startOfWeek,\n      endDate: defineds.endOfWeek\n    };\n  }\n}, {\n  label: 'Last Week',\n  range: function range() {\n    return {\n      startDate: defineds.startOfLastWeek,\n      endDate: defineds.endOfLastWeek\n    };\n  }\n}, {\n  label: 'This Month',\n  range: function range() {\n    return {\n      startDate: defineds.startOfMonth,\n      endDate: defineds.endOfMonth\n    };\n  }\n}, {\n  label: 'Last Month',\n  range: function range() {\n    return {\n      startDate: defineds.startOfLastMonth,\n      endDate: defineds.endOfLastMonth\n    };\n  }\n}]);\nexports.defaultStaticRanges = defaultStaticRanges;\nvar defaultInputRanges = [{\n  label: 'days up to today',\n  range: function range(value) {\n    return {\n      startDate: (0, _addDays.default)(defineds.startOfToday, (Math.max(Number(value), 1) - 1) * -1),\n      endDate: defineds.endOfToday\n    };\n  },\n  getCurrentValue: function getCurrentValue(range) {\n    if (!(0, _isSameDay.default)(range.endDate, defineds.endOfToday)) return '-';\n    if (!range.startDate) return '∞';\n    return (0, _differenceInCalendarDays.default)(defineds.endOfToday, range.startDate) + 1;\n  }\n}, {\n  label: 'days starting today',\n  range: function range(value) {\n    var today = new Date();\n    return {\n      startDate: today,\n      endDate: (0, _addDays.default)(today, Math.max(Number(value), 1) - 1)\n    };\n  },\n  getCurrentValue: function getCurrentValue(range) {\n    if (!(0, _isSameDay.default)(range.startDate, defineds.startOfToday)) return '-';\n    if (!range.endDate) return '∞';\n    return (0, _differenceInCalendarDays.default)(range.endDate, defineds.startOfToday) + 1;\n  }\n}];\nexports.defaultInputRanges = defaultInputRanges;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DateRange\", {\n  enumerable: true,\n  get: function get() {\n    return _DateRange.default;\n  }\n});\nObject.defineProperty(exports, \"Calendar\", {\n  enumerable: true,\n  get: function get() {\n    return _Calendar.default;\n  }\n});\nObject.defineProperty(exports, \"DateRangePicker\", {\n  enumerable: true,\n  get: function get() {\n    return _DateRangePicker.default;\n  }\n});\nObject.defineProperty(exports, \"DefinedRange\", {\n  enumerable: true,\n  get: function get() {\n    return _DefinedRange.default;\n  }\n});\nObject.defineProperty(exports, \"defaultInputRanges\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultRanges.defaultInputRanges;\n  }\n});\nObject.defineProperty(exports, \"defaultStaticRanges\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultRanges.defaultStaticRanges;\n  }\n});\nObject.defineProperty(exports, \"createStaticRanges\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultRanges.createStaticRanges;\n  }\n});\n\nvar _DateRange = _interopRequireDefault(require(\"./components/DateRange\"));\n\nvar _Calendar = _interopRequireDefault(require(\"./components/Calendar\"));\n\nvar _DateRangePicker = _interopRequireDefault(require(\"./components/DateRangePicker\"));\n\nvar _DefinedRange = _interopRequireDefault(require(\"./components/DefinedRange\"));\n\nvar _defaultRanges = require(\"./defaultRanges\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  dateRangeWrapper: 'rdrDateRangeWrapper',\n  calendarWrapper: 'rdrCalendarWrapper',\n  dateDisplay: 'rdrDateDisplay',\n  dateDisplayItem: 'rdrDateDisplayItem',\n  dateDisplayItemActive: 'rdrDateDisplayItemActive',\n  monthAndYearWrapper: 'rdrMonthAndYearWrapper',\n  monthAndYearPickers: 'rdrMonthAndYearPickers',\n  nextPrevButton: 'rdrNextPrevButton',\n  month: 'rdrMonth',\n  weekDays: 'rdrWeekDays',\n  weekDay: 'rdrWeekDay',\n  days: 'rdrDays',\n  day: 'rdrDay',\n  dayNumber: 'rdrDayNumber',\n  dayPassive: 'rdrDayPassive',\n  dayToday: 'rdrDayToday',\n  dayStartOfWeek: 'rdrDayStartOfWeek',\n  dayEndOfWeek: 'rdrDayEndOfWeek',\n  daySelected: 'rdrDaySelected',\n  dayDisabled: 'rdrDayDisabled',\n  dayStartOfMonth: 'rdrDayStartOfMonth',\n  dayEndOfMonth: 'rdrDayEndOfMonth',\n  dayWeekend: 'rdrDayWeekend',\n  dayStartPreview: 'rdrDayStartPreview',\n  dayInPreview: 'rdrDayInPreview',\n  dayEndPreview: 'rdrDayEndPreview',\n  dayHovered: 'rdrDayHovered',\n  dayActive: 'rdrDayActive',\n  inRange: 'rdrInRange',\n  endEdge: 'rdrEndEdge',\n  startEdge: 'rdrStartEdge',\n  prevButton: 'rdrPprevButton',\n  nextButton: 'rdrNextButton',\n  selected: 'rdrSelected',\n  months: 'rdrMonths',\n  monthPicker: 'rdrMonthPicker',\n  yearPicker: 'rdrYearPicker',\n  dateDisplayWrapper: 'rdrDateDisplayWrapper',\n  definedRangesWrapper: 'rdrDefinedRangesWrapper',\n  staticRanges: 'rdrStaticRanges',\n  staticRange: 'rdrStaticRange',\n  inputRanges: 'rdrInputRanges',\n  inputRange: 'rdrInputRange',\n  inputRangeInput: 'rdrInputRangeInput',\n  dateRangePickerWrapper: 'rdrDateRangePickerWrapper',\n  staticRangeLabel: 'rdrStaticRangeLabel',\n  staticRangeSelected: 'rdrStaticRangeSelected',\n  monthName: 'rdrMonthName',\n  infiniteMonths: 'rdrInfiniteMonths',\n  monthsVertical: 'rdrMonthsVertical',\n  monthsHorizontal: 'rdrMonthsHorizontal'\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcFocusDate = calcFocusDate;\nexports.findNextRangeIndex = findNextRangeIndex;\nexports.getMonthDisplayRange = getMonthDisplayRange;\nexports.generateStyles = generateStyles;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _addDays = _interopRequireDefault(require(\"date-fns/addDays\"));\n\nvar _differenceInCalendarMonths = _interopRequireDefault(require(\"date-fns/differenceInCalendarMonths\"));\n\nvar _differenceInCalendarDays = _interopRequireDefault(require(\"date-fns/differenceInCalendarDays\"));\n\nvar _endOfWeek = _interopRequireDefault(require(\"date-fns/endOfWeek\"));\n\nvar _startOfWeek = _interopRequireDefault(require(\"date-fns/startOfWeek\"));\n\nvar _endOfMonth = _interopRequireDefault(require(\"date-fns/endOfMonth\"));\n\nvar _startOfMonth = _interopRequireDefault(require(\"date-fns/startOfMonth\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction calcFocusDate(currentFocusedDate, props) {\n  var shownDate = props.shownDate,\n      date = props.date,\n      months = props.months,\n      ranges = props.ranges,\n      focusedRange = props.focusedRange,\n      displayMode = props.displayMode; // find primary date according the props\n\n  var targetInterval;\n\n  if (displayMode === 'dateRange') {\n    var range = ranges[focusedRange[0]] || {};\n    targetInterval = {\n      start: range.startDate,\n      end: range.endDate\n    };\n  } else {\n    targetInterval = {\n      start: date,\n      end: date\n    };\n  }\n\n  targetInterval.start = (0, _startOfMonth.default)(targetInterval.start || new Date());\n  targetInterval.end = (0, _endOfMonth.default)(targetInterval.end || targetInterval.start);\n  var targetDate = targetInterval.start || targetInterval.end || shownDate || new Date(); // initial focus\n\n  if (!currentFocusedDate) return shownDate || targetDate; // // just return targetDate for native scrolled calendars\n  // if (props.scroll.enabled) return targetDate;\n\n  if ((0, _differenceInCalendarMonths.default)(targetInterval.start, targetInterval.end) > months) {\n    // don't change focused if new selection in view area\n    return currentFocusedDate;\n  }\n\n  return targetDate;\n}\n\nfunction findNextRangeIndex(ranges) {\n  var currentRangeIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  var nextIndex = ranges.findIndex(function (range, i) {\n    return i > currentRangeIndex && range.autoFocus !== false && !range.disabled;\n  });\n  if (nextIndex !== -1) return nextIndex;\n  return ranges.findIndex(function (range) {\n    return range.autoFocus !== false && !range.disabled;\n  });\n}\n\nfunction getMonthDisplayRange(date, dateOptions, fixedHeight) {\n  var startDateOfMonth = (0, _startOfMonth.default)(date, dateOptions);\n  var endDateOfMonth = (0, _endOfMonth.default)(date, dateOptions);\n  var startDateOfCalendar = (0, _startOfWeek.default)(startDateOfMonth, dateOptions);\n  var endDateOfCalendar = (0, _endOfWeek.default)(endDateOfMonth, dateOptions);\n\n  if (fixedHeight && (0, _differenceInCalendarDays.default)(endDateOfCalendar, startDateOfCalendar) <= 34) {\n    endDateOfCalendar = (0, _addDays.default)(endDateOfCalendar, 7);\n  }\n\n  return {\n    start: startDateOfCalendar,\n    end: endDateOfCalendar,\n    startDateOfMonth: startDateOfMonth,\n    endDateOfMonth: endDateOfMonth\n  };\n}\n\nfunction generateStyles(sources) {\n  if (!sources.length) return {};\n  var generatedStyles = sources.filter(function (source) {\n    return Boolean(source);\n  }).reduce(function (styles, styleSource) {\n    Object.keys(styleSource).forEach(function (key) {\n      styles[key] = (0, _classnames.default)(styles[key], styleSource[key]);\n    });\n    return styles;\n  }, {});\n  return generatedStyles;\n}","// THIS FILE IS AUTO GENERATED\nimport { GenIcon } from '../lib';\nexport function FiActivity (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 12 18 12 15 21 9 3 6 12 2 12\"}}]})(props);\n};\nexport function FiAirplay (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 15 17 21 7 21 12 15\"}}]})(props);\n};\nexport function FiAlertCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12.01\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiAlertOctagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12.01\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiAlertTriangle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"9\",\"x2\":\"12\",\"y2\":\"13\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"17\",\"x2\":\"12.01\",\"y2\":\"17\"}}]})(props);\n};\nexport function FiAlignCenter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"10\",\"x2\":\"6\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"18\",\"x2\":\"6\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiAlignJustify (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"10\",\"x2\":\"3\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiAlignLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"10\",\"x2\":\"3\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiAlignRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"10\",\"x2\":\"7\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"6\",\"x2\":\"3\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"14\",\"x2\":\"3\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"7\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiAnchor (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"5\",\"r\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"8\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12H2a10 10 0 0 0 20 0h-3\"}}]})(props);\n};\nexport function FiAperture (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.31\",\"y1\":\"8\",\"x2\":\"20.05\",\"y2\":\"17.94\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9.69\",\"y1\":\"8\",\"x2\":\"21.17\",\"y2\":\"8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"7.38\",\"y1\":\"12\",\"x2\":\"13.12\",\"y2\":\"2.06\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9.69\",\"y1\":\"16\",\"x2\":\"3.95\",\"y2\":\"6.06\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.31\",\"y1\":\"16\",\"x2\":\"2.83\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16.62\",\"y1\":\"12\",\"x2\":\"10.88\",\"y2\":\"21.94\"}}]})(props);\n};\nexport function FiArchive (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 8 21 21 3 21 3 8\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"3\",\"width\":\"22\",\"height\":\"5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"12\",\"x2\":\"14\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiArrowDownCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 12 12 16 16 12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiArrowDownLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"7\",\"x2\":\"7\",\"y2\":\"17\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 17 7 17 7 7\"}}]})(props);\n};\nexport function FiArrowDownRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"7\",\"x2\":\"17\",\"y2\":\"17\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 7 17 17 7 17\"}}]})(props);\n};\nexport function FiArrowDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"5\",\"x2\":\"12\",\"y2\":\"19\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"19 12 12 19 5 12\"}}]})(props);\n};\nexport function FiArrowLeftCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 8 8 12 12 16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"12\",\"x2\":\"8\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiArrowLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"12\",\"x2\":\"5\",\"y2\":\"12\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 19 5 12 12 5\"}}]})(props);\n};\nexport function FiArrowRightCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 16 16 12 12 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiArrowRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 5 19 12 12 19\"}}]})(props);\n};\nexport function FiArrowUpCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 12 12 8 8 12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"8\"}}]})(props);\n};\nexport function FiArrowUpLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"17\",\"x2\":\"7\",\"y2\":\"7\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 17 7 7 17 7\"}}]})(props);\n};\nexport function FiArrowUpRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"17\",\"x2\":\"17\",\"y2\":\"7\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 7 17 7 17 17\"}}]})(props);\n};\nexport function FiArrowUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"12\",\"y2\":\"5\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"5 12 12 5 19 12\"}}]})(props);\n};\nexport function FiAtSign (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94\"}}]})(props);\n};\nexport function FiAward (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"8\",\"r\":\"7\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8.21 13.89 7 23 12 20 17 23 15.79 13.88\"}}]})(props);\n};\nexport function FiBarChart2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"20\",\"x2\":\"18\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"20\",\"x2\":\"6\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiBarChart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"20\",\"x2\":\"18\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"20\",\"x2\":\"6\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiBatteryCharging (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"13\",\"x2\":\"23\",\"y2\":\"11\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"11 6 7 12 13 12 9 18\"}}]})(props);\n};\nexport function FiBattery (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"6\",\"width\":\"18\",\"height\":\"12\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"13\",\"x2\":\"23\",\"y2\":\"11\"}}]})(props);\n};\nexport function FiBellOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.73 21a2 2 0 0 1-3.46 0\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.63 13A17.89 17.89 0 0 1 18 8\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M18 8a6 6 0 0 0-9.33-5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiBell (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.73 21a2 2 0 0 1-3.46 0\"}}]})(props);\n};\nexport function FiBluetooth (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5\"}}]})(props);\n};\nexport function FiBold (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z\"}}]})(props);\n};\nexport function FiBookOpen (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"}}]})(props);\n};\nexport function FiBook (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"}}]})(props);\n};\nexport function FiBookmark (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"}}]})(props);\n};\nexport function FiBox (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"3.27 6.96 12 12.01 20.73 6.96\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22.08\",\"x2\":\"12\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiBriefcase (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"7\",\"width\":\"20\",\"height\":\"14\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\"}}]})(props);\n};\nexport function FiCalendar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"4\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"2\",\"x2\":\"16\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"10\"}}]})(props);\n};\nexport function FiCameraOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56\"}}]})(props);\n};\nexport function FiCamera (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"13\",\"r\":\"4\"}}]})(props);\n};\nexport function FiCast (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"20\",\"x2\":\"2.01\",\"y2\":\"20\"}}]})(props);\n};\nexport function FiCheckCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 4 12 14.01 9 11.01\"}}]})(props);\n};\nexport function FiCheckSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 11 12 14 22 4\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"}}]})(props);\n};\nexport function FiCheck (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"20 6 9 17 4 12\"}}]})(props);\n};\nexport function FiChevronDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"6 9 12 15 18 9\"}}]})(props);\n};\nexport function FiChevronLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 18 9 12 15 6\"}}]})(props);\n};\nexport function FiChevronRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 18 15 12 9 6\"}}]})(props);\n};\nexport function FiChevronUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"18 15 12 9 6 15\"}}]})(props);\n};\nexport function FiChevronsDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 13 12 18 17 13\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 6 12 11 17 6\"}}]})(props);\n};\nexport function FiChevronsLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"11 17 6 12 11 7\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"18 17 13 12 18 7\"}}]})(props);\n};\nexport function FiChevronsRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"13 17 18 12 13 7\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"6 17 11 12 6 7\"}}]})(props);\n};\nexport function FiChevronsUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 11 12 6 7 11\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 18 12 13 7 18\"}}]})(props);\n};\nexport function FiChrome (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21.17\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3.95\",\"y1\":\"6.06\",\"x2\":\"8.54\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10.88\",\"y1\":\"21.94\",\"x2\":\"15.46\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}}]})(props);\n};\nexport function FiClipboard (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"8\",\"y\":\"2\",\"width\":\"8\",\"height\":\"4\",\"rx\":\"1\",\"ry\":\"1\"}}]})(props);\n};\nexport function FiClock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 6 12 12 16 14\"}}]})(props);\n};\nexport function FiCloudDrizzle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"19\",\"x2\":\"8\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"13\",\"x2\":\"8\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"19\",\"x2\":\"16\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"13\",\"x2\":\"16\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"21\",\"x2\":\"12\",\"y2\":\"23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"15\",\"x2\":\"12\",\"y2\":\"17\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"}}]})(props);\n};\nexport function FiCloudLightning (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"13 11 9 17 15 17 11 23\"}}]})(props);\n};\nexport function FiCloudOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiCloudRain (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"13\",\"x2\":\"16\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"13\",\"x2\":\"8\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"15\",\"x2\":\"12\",\"y2\":\"23\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25\"}}]})(props);\n};\nexport function FiCloudSnow (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"16\",\"x2\":\"8.01\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"20\",\"x2\":\"8.01\",\"y2\":\"20\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12.01\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12.01\",\"y2\":\"22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"16\",\"x2\":\"16.01\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"20\",\"x2\":\"16.01\",\"y2\":\"20\"}}]})(props);\n};\nexport function FiCloud (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z\"}}]})(props);\n};\nexport function FiCode (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 18 22 12 16 6\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 6 2 12 8 18\"}}]})(props);\n};\nexport function FiCodepen (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"15.5\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 8.5 12 15.5 2 8.5\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"2 15.5 12 8.5 22 15.5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"8.5\"}}]})(props);\n};\nexport function FiCodesandbox (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7.5 4.21 12 6.81 16.5 4.21\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7.5 19.79 7.5 14.6 3 12\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 12 16.5 14.6 16.5 19.79\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"3.27 6.96 12 12.01 20.73 6.96\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22.08\",\"x2\":\"12\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiCoffee (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 8h1a4 4 0 0 1 0 8h-1\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"1\",\"x2\":\"6\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"1\",\"x2\":\"10\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"1\",\"x2\":\"14\",\"y2\":\"4\"}}]})(props);\n};\nexport function FiColumns (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18\"}}]})(props);\n};\nexport function FiCommand (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z\"}}]})(props);\n};\nexport function FiCompass (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\"}}]})(props);\n};\nexport function FiCopy (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"9\",\"y\":\"9\",\"width\":\"13\",\"height\":\"13\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"}}]})(props);\n};\nexport function FiCornerDownLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 10 4 15 9 20\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 4v7a4 4 0 0 1-4 4H4\"}}]})(props);\n};\nexport function FiCornerDownRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 10 20 15 15 20\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4v7a4 4 0 0 0 4 4h12\"}}]})(props);\n};\nexport function FiCornerLeftDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 15 9 20 4 15\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 4h-7a4 4 0 0 0-4 4v12\"}}]})(props);\n};\nexport function FiCornerLeftUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 9 9 4 4 9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 20h-7a4 4 0 0 1-4-4V4\"}}]})(props);\n};\nexport function FiCornerRightDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 15 15 20 20 15\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4h7a4 4 0 0 1 4 4v12\"}}]})(props);\n};\nexport function FiCornerRightUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 9 15 4 20 9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 20h7a4 4 0 0 0 4-4V4\"}}]})(props);\n};\nexport function FiCornerUpLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 14 4 9 9 4\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20 20v-7a4 4 0 0 0-4-4H4\"}}]})(props);\n};\nexport function FiCornerUpRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 14 20 9 15 4\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 20v-7a4 4 0 0 1 4-4h12\"}}]})(props);\n};\nexport function FiCpu (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"4\",\"y\":\"4\",\"width\":\"16\",\"height\":\"16\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"9\",\"y\":\"9\",\"width\":\"6\",\"height\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"1\",\"x2\":\"9\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"1\",\"x2\":\"15\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"20\",\"x2\":\"9\",\"y2\":\"23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"20\",\"x2\":\"15\",\"y2\":\"23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"9\",\"x2\":\"23\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"14\",\"x2\":\"23\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"9\",\"x2\":\"4\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"14\",\"x2\":\"4\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiCreditCard (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"4\",\"width\":\"22\",\"height\":\"16\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"10\",\"x2\":\"23\",\"y2\":\"10\"}}]})(props);\n};\nexport function FiCrop (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.13 1L6 16a2 2 0 0 0 2 2h15\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M1 6.13L16 6a2 2 0 0 1 2 2v15\"}}]})(props);\n};\nexport function FiCrosshair (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"22\",\"y1\":\"12\",\"x2\":\"18\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"12\",\"x2\":\"2\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"6\",\"x2\":\"12\",\"y2\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiDatabase (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"ellipse\",\"attr\":{\"cx\":\"12\",\"cy\":\"5\",\"rx\":\"9\",\"ry\":\"3\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 12c0 1.66-4 3-9 3s-9-1.34-9-3\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5\"}}]})(props);\n};\nexport function FiDelete (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"9\",\"x2\":\"12\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"9\",\"x2\":\"18\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiDisc (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"3\"}}]})(props);\n};\nexport function FiDivideCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"8\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}}]})(props);\n};\nexport function FiDivideSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"8\"}}]})(props);\n};\nexport function FiDivide (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"6\",\"r\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"18\",\"r\":\"2\"}}]})(props);\n};\nexport function FiDollarSign (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"1\",\"x2\":\"12\",\"y2\":\"23\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\"}}]})(props);\n};\nexport function FiDownloadCloud (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 17 12 21 16 17\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"12\",\"x2\":\"12\",\"y2\":\"21\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29\"}}]})(props);\n};\nexport function FiDownload (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 10 12 15 17 10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"15\",\"x2\":\"12\",\"y2\":\"3\"}}]})(props);\n};\nexport function FiDribbble (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32\"}}]})(props);\n};\nexport function FiDroplet (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"}}]})(props);\n};\nexport function FiEdit2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"}}]})(props);\n};\nexport function FiEdit3 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 20h9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"}}]})(props);\n};\nexport function FiEdit (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"}}]})(props);\n};\nexport function FiExternalLink (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 3 21 3 21 9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"14\",\"x2\":\"21\",\"y2\":\"3\"}}]})(props);\n};\nexport function FiEyeOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiEye (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"3\"}}]})(props);\n};\nexport function FiFacebook (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"}}]})(props);\n};\nexport function FiFastForward (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"13 19 22 12 13 5 13 19\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"2 19 11 12 2 5 2 19\"}}]})(props);\n};\nexport function FiFeather (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"8\",\"x2\":\"2\",\"y2\":\"22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17.5\",\"y1\":\"15\",\"x2\":\"9\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiFigma (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z\"}}]})(props);\n};\nexport function FiFileMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 2 14 8 20 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"15\",\"x2\":\"15\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiFilePlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 2 14 8 20 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"15\",\"x2\":\"15\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiFileText (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"14 2 14 8 20 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"13\",\"x2\":\"8\",\"y2\":\"13\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"17\",\"x2\":\"8\",\"y2\":\"17\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 9 9 9 8 9\"}}]})(props);\n};\nexport function FiFile (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"13 2 13 9 20 9\"}}]})(props);\n};\nexport function FiFilm (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"2\",\"width\":\"20\",\"height\":\"20\",\"rx\":\"2.18\",\"ry\":\"2.18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"2\",\"x2\":\"7\",\"y2\":\"22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"2\",\"x2\":\"17\",\"y2\":\"22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"7\",\"x2\":\"7\",\"y2\":\"7\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"17\",\"x2\":\"7\",\"y2\":\"17\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"17\",\"x2\":\"22\",\"y2\":\"17\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"7\",\"x2\":\"22\",\"y2\":\"7\"}}]})(props);\n};\nexport function FiFilter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\"}}]})(props);\n};\nexport function FiFlag (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"22\",\"x2\":\"4\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiFolderMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"14\",\"x2\":\"15\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiFolderPlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"11\",\"x2\":\"12\",\"y2\":\"17\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"14\",\"x2\":\"15\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiFolder (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z\"}}]})(props);\n};\nexport function FiFramer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7\"}}]})(props);\n};\nexport function FiFrown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 16s-1.5-2-4-2-4 2-4 2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"9.01\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"15.01\",\"y2\":\"9\"}}]})(props);\n};\nexport function FiGift (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"20 12 20 22 4 22 4 12\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"7\",\"width\":\"20\",\"height\":\"5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22\",\"x2\":\"12\",\"y2\":\"7\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"}}]})(props);\n};\nexport function FiGitBranch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"3\",\"x2\":\"6\",\"y2\":\"15\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"6\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M18 9a9 9 0 0 1-9 9\"}}]})(props);\n};\nexport function FiGitCommit (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1.05\",\"y1\":\"12\",\"x2\":\"7\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17.01\",\"y1\":\"12\",\"x2\":\"22.96\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiGitMerge (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"18\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M6 21V9a9 9 0 0 0 9 9\"}}]})(props);\n};\nexport function FiGitPullRequest (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"18\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M13 6h3a2 2 0 0 1 2 2v7\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"9\",\"x2\":\"6\",\"y2\":\"21\"}}]})(props);\n};\nexport function FiGithub (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"}}]})(props);\n};\nexport function FiGitlab (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z\"}}]})(props);\n};\nexport function FiGlobe (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"}}]})(props);\n};\nexport function FiGrid (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"7\",\"height\":\"7\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"3\",\"width\":\"7\",\"height\":\"7\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"14\",\"width\":\"7\",\"height\":\"7\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"14\",\"width\":\"7\",\"height\":\"7\"}}]})(props);\n};\nexport function FiHardDrive (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"22\",\"y1\":\"12\",\"x2\":\"2\",\"y2\":\"12\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"16\",\"x2\":\"6.01\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"16\",\"x2\":\"10.01\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiHash (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"9\",\"x2\":\"20\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"15\",\"x2\":\"20\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"3\",\"x2\":\"8\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"3\",\"x2\":\"14\",\"y2\":\"21\"}}]})(props);\n};\nexport function FiHeadphones (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3 18v-6a9 9 0 0 1 18 0v6\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z\"}}]})(props);\n};\nexport function FiHeart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"}}]})(props);\n};\nexport function FiHelpCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"17\",\"x2\":\"12.01\",\"y2\":\"17\"}}]})(props);\n};\nexport function FiHexagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"}}]})(props);\n};\nexport function FiHome (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 22 9 12 15 12 15 22\"}}]})(props);\n};\nexport function FiImage (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"8.5\",\"r\":\"1.5\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 15 16 10 5 21\"}}]})(props);\n};\nexport function FiInbox (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"22 12 16 12 14 15 10 15 8 12 2 12\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\"}}]})(props);\n};\nexport function FiInfo (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"16\",\"x2\":\"12\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12.01\",\"y2\":\"8\"}}]})(props);\n};\nexport function FiInstagram (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"2\",\"width\":\"20\",\"height\":\"20\",\"rx\":\"5\",\"ry\":\"5\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17.5\",\"y1\":\"6.5\",\"x2\":\"17.51\",\"y2\":\"6.5\"}}]})(props);\n};\nexport function FiItalic (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"4\",\"x2\":\"10\",\"y2\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"20\",\"x2\":\"5\",\"y2\":\"20\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"4\",\"x2\":\"9\",\"y2\":\"20\"}}]})(props);\n};\nexport function FiKey (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4\"}}]})(props);\n};\nexport function FiLayers (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 2 7 12 12 22 7 12 2\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"2 17 12 22 22 17\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"2 12 12 17 22 12\"}}]})(props);\n};\nexport function FiLayout (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"9\",\"x2\":\"21\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"21\",\"x2\":\"9\",\"y2\":\"9\"}}]})(props);\n};\nexport function FiLifeBuoy (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"4.93\",\"x2\":\"9.17\",\"y2\":\"9.17\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.83\",\"y1\":\"14.83\",\"x2\":\"19.07\",\"y2\":\"19.07\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.83\",\"y1\":\"9.17\",\"x2\":\"19.07\",\"y2\":\"4.93\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.83\",\"y1\":\"9.17\",\"x2\":\"18.36\",\"y2\":\"5.64\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"19.07\",\"x2\":\"9.17\",\"y2\":\"14.83\"}}]})(props);\n};\nexport function FiLink2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiLink (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"}}]})(props);\n};\nexport function FiLinkedin (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"9\",\"width\":\"4\",\"height\":\"12\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"4\",\"cy\":\"4\",\"r\":\"2\"}}]})(props);\n};\nexport function FiList (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"6\",\"x2\":\"21\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"21\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"18\",\"x2\":\"21\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"6\",\"x2\":\"3.01\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"12\",\"x2\":\"3.01\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"18\",\"x2\":\"3.01\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiLoader (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12\",\"y2\":\"22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"4.93\",\"x2\":\"7.76\",\"y2\":\"7.76\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16.24\",\"y1\":\"16.24\",\"x2\":\"19.07\",\"y2\":\"19.07\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"6\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"19.07\",\"x2\":\"7.76\",\"y2\":\"16.24\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16.24\",\"y1\":\"7.76\",\"x2\":\"19.07\",\"y2\":\"4.93\"}}]})(props);\n};\nexport function FiLock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"11\",\"width\":\"18\",\"height\":\"11\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M7 11V7a5 5 0 0 1 10 0v4\"}}]})(props);\n};\nexport function FiLogIn (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"10 17 15 12 10 7\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"12\",\"x2\":\"3\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiLogOut (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 17 21 12 16 7\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"12\",\"x2\":\"9\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiMail (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"22,6 12,13 2,6\"}}]})(props);\n};\nexport function FiMapPin (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"10\",\"r\":\"3\"}}]})(props);\n};\nexport function FiMap (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"6\",\"x2\":\"16\",\"y2\":\"22\"}}]})(props);\n};\nexport function FiMaximize2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 3 21 3 21 9\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 21 3 21 3 15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"3\",\"x2\":\"14\",\"y2\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"21\",\"x2\":\"10\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiMaximize (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"}}]})(props);\n};\nexport function FiMeh (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"15\",\"x2\":\"16\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"9.01\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"15.01\",\"y2\":\"9\"}}]})(props);\n};\nexport function FiMenu (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"12\",\"x2\":\"21\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"6\",\"x2\":\"21\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"18\",\"x2\":\"21\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiMessageCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"}}]})(props);\n};\nexport function FiMessageSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"}}]})(props);\n};\nexport function FiMicOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"12\",\"y2\":\"23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"23\",\"x2\":\"16\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiMic (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M19 10v2a7 7 0 0 1-14 0v-2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"12\",\"y2\":\"23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"23\",\"x2\":\"16\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiMinimize2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"4 14 10 14 10 20\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"20 10 14 10 14 4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"21\",\"x2\":\"10\",\"y2\":\"14\"}}]})(props);\n};\nexport function FiMinimize (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"}}]})(props);\n};\nexport function FiMinusCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiMinusSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiMonitor (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"3\",\"width\":\"20\",\"height\":\"14\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"21\",\"x2\":\"16\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"17\",\"x2\":\"12\",\"y2\":\"21\"}}]})(props);\n};\nexport function FiMoon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"}}]})(props);\n};\nexport function FiMoreHorizontal (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"1\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"19\",\"cy\":\"12\",\"r\":\"1\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5\",\"cy\":\"12\",\"r\":\"1\"}}]})(props);\n};\nexport function FiMoreVertical (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"1\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"5\",\"r\":\"1\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"19\",\"r\":\"1\"}}]})(props);\n};\nexport function FiMousePointer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M13 13l6 6\"}}]})(props);\n};\nexport function FiMove (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"5 9 2 12 5 15\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"9 5 12 2 15 5\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"15 19 12 22 9 19\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"19 9 22 12 19 15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"2\",\"y1\":\"12\",\"x2\":\"22\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"22\"}}]})(props);\n};\nexport function FiMusic (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 18V5l12-2v13\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"16\",\"r\":\"3\"}}]})(props);\n};\nexport function FiNavigation2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 19 21 12 17 5 21 12 2\"}}]})(props);\n};\nexport function FiNavigation (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"3 11 22 2 13 21 11 13 3 11\"}}]})(props);\n};\nexport function FiOctagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"}}]})(props);\n};\nexport function FiPackage (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"16.5\",\"y1\":\"9.4\",\"x2\":\"7.5\",\"y2\":\"4.21\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"3.27 6.96 12 12.01 20.73 6.96\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"22.08\",\"x2\":\"12\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiPaperclip (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"}}]})(props);\n};\nexport function FiPauseCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"15\",\"x2\":\"10\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"15\",\"x2\":\"14\",\"y2\":\"9\"}}]})(props);\n};\nexport function FiPause (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"6\",\"y\":\"4\",\"width\":\"4\",\"height\":\"16\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"4\",\"width\":\"4\",\"height\":\"16\"}}]})(props);\n};\nexport function FiPenTool (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 19l7-7 3 3-7 7-3-3z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M2 2l7.586 7.586\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"2\"}}]})(props);\n};\nexport function FiPercent (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"5\",\"x2\":\"5\",\"y2\":\"19\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6.5\",\"cy\":\"6.5\",\"r\":\"2.5\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"17.5\",\"cy\":\"17.5\",\"r\":\"2.5\"}}]})(props);\n};\nexport function FiPhoneCall (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"}}]})(props);\n};\nexport function FiPhoneForwarded (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"19 1 23 5 19 9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"5\",\"x2\":\"23\",\"y2\":\"5\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"}}]})(props);\n};\nexport function FiPhoneIncoming (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 2 16 8 22 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"1\",\"x2\":\"16\",\"y2\":\"8\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"}}]})(props);\n};\nexport function FiPhoneMissed (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"1\",\"x2\":\"17\",\"y2\":\"7\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"7\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"}}]})(props);\n};\nexport function FiPhoneOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"1\",\"x2\":\"1\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiPhoneOutgoing (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 7 23 1 17 1\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"8\",\"x2\":\"23\",\"y2\":\"1\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"}}]})(props);\n};\nexport function FiPhone (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\"}}]})(props);\n};\nexport function FiPieChart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.21 15.89A10 10 0 1 1 8 2.83\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M22 12A10 10 0 0 0 12 2v10z\"}}]})(props);\n};\nexport function FiPlayCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"10 8 16 12 10 16 10 8\"}}]})(props);\n};\nexport function FiPlay (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"5 3 19 12 5 21 5 3\"}}]})(props);\n};\nexport function FiPlusCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiPlusSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"12\",\"x2\":\"16\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiPlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"5\",\"x2\":\"12\",\"y2\":\"19\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"12\",\"x2\":\"19\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiPocket (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 10 12 14 16 10\"}}]})(props);\n};\nexport function FiPower (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.36 6.64a9 9 0 1 1-12.73 0\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiPrinter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"6 9 6 2 18 2 18 9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"6\",\"y\":\"14\",\"width\":\"12\",\"height\":\"8\"}}]})(props);\n};\nexport function FiRadio (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"2\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14\"}}]})(props);\n};\nexport function FiRefreshCcw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"1 4 1 10 7 10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 20 23 14 17 14\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"}}]})(props);\n};\nexport function FiRefreshCw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 4 23 10 17 10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"1 20 1 14 7 14\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15\"}}]})(props);\n};\nexport function FiRepeat (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 1 21 5 17 9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M3 11V9a4 4 0 0 1 4-4h14\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 23 3 19 7 15\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M21 13v2a4 4 0 0 1-4 4H3\"}}]})(props);\n};\nexport function FiRewind (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 19 2 12 11 5 11 19\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"22 19 13 12 22 5 22 19\"}}]})(props);\n};\nexport function FiRotateCcw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"1 4 1 10 7 10\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.51 15a9 9 0 1 0 2.13-9.36L1 10\"}}]})(props);\n};\nexport function FiRotateCw (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 4 23 10 17 10\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.49 15a9 9 0 1 1-2.12-9.36L23 10\"}}]})(props);\n};\nexport function FiRss (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 11a9 9 0 0 1 9 9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M4 4a16 16 0 0 1 16 16\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5\",\"cy\":\"19\",\"r\":\"1\"}}]})(props);\n};\nexport function FiSave (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 21 17 13 7 13 7 21\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"7 3 7 8 15 8\"}}]})(props);\n};\nexport function FiScissors (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"6\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"18\",\"r\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"4\",\"x2\":\"8.12\",\"y2\":\"15.88\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14.47\",\"y1\":\"14.48\",\"x2\":\"20\",\"y2\":\"20\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8.12\",\"y1\":\"8.12\",\"x2\":\"12\",\"y2\":\"12\"}}]})(props);\n};\nexport function FiSearch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"21\",\"x2\":\"16.65\",\"y2\":\"16.65\"}}]})(props);\n};\nexport function FiSend (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"22\",\"y1\":\"2\",\"x2\":\"11\",\"y2\":\"13\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"22 2 15 22 11 13 2 9 22 2\"}}]})(props);\n};\nexport function FiServer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"2\",\"width\":\"20\",\"height\":\"8\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"14\",\"width\":\"20\",\"height\":\"8\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"6\",\"x2\":\"6.01\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"18\",\"x2\":\"6.01\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiSettings (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"3\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"}}]})(props);\n};\nexport function FiShare2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"5\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6\",\"cy\":\"12\",\"r\":\"3\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18\",\"cy\":\"19\",\"r\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8.59\",\"y1\":\"13.51\",\"x2\":\"15.42\",\"y2\":\"17.49\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15.41\",\"y1\":\"6.51\",\"x2\":\"8.59\",\"y2\":\"10.49\"}}]})(props);\n};\nexport function FiShare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 6 12 2 8 6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiShieldOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiShield (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"}}]})(props);\n};\nexport function FiShoppingBag (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"6\",\"x2\":\"21\",\"y2\":\"6\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 10a4 4 0 0 1-8 0\"}}]})(props);\n};\nexport function FiShoppingCart (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"9\",\"cy\":\"21\",\"r\":\"1\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"20\",\"cy\":\"21\",\"r\":\"1\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"}}]})(props);\n};\nexport function FiShuffle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 3 21 3 21 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"20\",\"x2\":\"21\",\"y2\":\"3\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 16 21 21 16 21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"15\",\"x2\":\"21\",\"y2\":\"21\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"4\",\"x2\":\"9\",\"y2\":\"9\"}}]})(props);\n};\nexport function FiSidebar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"3\",\"x2\":\"9\",\"y2\":\"21\"}}]})(props);\n};\nexport function FiSkipBack (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"19 20 9 12 19 4 19 20\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"5\",\"y1\":\"19\",\"x2\":\"5\",\"y2\":\"5\"}}]})(props);\n};\nexport function FiSkipForward (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"5 4 15 12 5 20 5 4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"19\",\"y1\":\"5\",\"x2\":\"19\",\"y2\":\"19\"}}]})(props);\n};\nexport function FiSlack (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z\"}}]})(props);\n};\nexport function FiSlash (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.93\",\"y1\":\"4.93\",\"x2\":\"19.07\",\"y2\":\"19.07\"}}]})(props);\n};\nexport function FiSliders (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"21\",\"x2\":\"4\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"10\",\"x2\":\"4\",\"y2\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"21\",\"x2\":\"12\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"8\",\"x2\":\"12\",\"y2\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"21\",\"x2\":\"20\",\"y2\":\"16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"12\",\"x2\":\"20\",\"y2\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"14\",\"x2\":\"7\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"8\",\"x2\":\"15\",\"y2\":\"8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"16\",\"x2\":\"23\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiSmartphone (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"5\",\"y\":\"2\",\"width\":\"14\",\"height\":\"20\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12.01\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiSmile (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M8 14s1.5 2 4 2 4-2 4-2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"9.01\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"15.01\",\"y2\":\"9\"}}]})(props);\n};\nexport function FiSpeaker (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"4\",\"y\":\"2\",\"width\":\"16\",\"height\":\"20\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"14\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"6\",\"x2\":\"12.01\",\"y2\":\"6\"}}]})(props);\n};\nexport function FiSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}}]})(props);\n};\nexport function FiStar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"}}]})(props);\n};\nexport function FiStopCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"9\",\"y\":\"9\",\"width\":\"6\",\"height\":\"6\"}}]})(props);\n};\nexport function FiSun (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"1\",\"x2\":\"12\",\"y2\":\"3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"21\",\"x2\":\"12\",\"y2\":\"23\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"4.22\",\"x2\":\"5.64\",\"y2\":\"5.64\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"18.36\",\"x2\":\"19.78\",\"y2\":\"19.78\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"12\",\"x2\":\"3\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"12\",\"x2\":\"23\",\"y2\":\"12\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"19.78\",\"x2\":\"5.64\",\"y2\":\"18.36\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"5.64\",\"x2\":\"19.78\",\"y2\":\"4.22\"}}]})(props);\n};\nexport function FiSunrise (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 18a5 5 0 0 0-10 0\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"2\",\"x2\":\"12\",\"y2\":\"9\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"10.22\",\"x2\":\"5.64\",\"y2\":\"11.64\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"23\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"11.64\",\"x2\":\"19.78\",\"y2\":\"10.22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"22\",\"x2\":\"1\",\"y2\":\"22\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 6 12 2 16 6\"}}]})(props);\n};\nexport function FiSunset (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 18a5 5 0 0 0-10 0\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"9\",\"x2\":\"12\",\"y2\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4.22\",\"y1\":\"10.22\",\"x2\":\"5.64\",\"y2\":\"11.64\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"18\",\"x2\":\"3\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"18\",\"x2\":\"23\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18.36\",\"y1\":\"11.64\",\"x2\":\"19.78\",\"y2\":\"10.22\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"22\",\"x2\":\"1\",\"y2\":\"22\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 5 12 9 8 5\"}}]})(props);\n};\nexport function FiTable (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"}}]})(props);\n};\nexport function FiTablet (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"4\",\"y\":\"2\",\"width\":\"16\",\"height\":\"20\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"18\",\"x2\":\"12.01\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiTag (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"7\",\"y1\":\"7\",\"x2\":\"7.01\",\"y2\":\"7\"}}]})(props);\n};\nexport function FiTarget (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"6\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"2\"}}]})(props);\n};\nexport function FiTerminal (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"4 17 10 11 4 5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"19\",\"x2\":\"20\",\"y2\":\"19\"}}]})(props);\n};\nexport function FiThermometer (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z\"}}]})(props);\n};\nexport function FiThumbsDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"}}]})(props);\n};\nexport function FiThumbsUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"}}]})(props);\n};\nexport function FiToggleLeft (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"5\",\"width\":\"22\",\"height\":\"14\",\"rx\":\"7\",\"ry\":\"7\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8\",\"cy\":\"12\",\"r\":\"3\"}}]})(props);\n};\nexport function FiToggleRight (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"5\",\"width\":\"22\",\"height\":\"14\",\"rx\":\"7\",\"ry\":\"7\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"16\",\"cy\":\"12\",\"r\":\"3\"}}]})(props);\n};\nexport function FiTool (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\"}}]})(props);\n};\nexport function FiTrash2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"3 6 5 6 21 6\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"11\",\"x2\":\"10\",\"y2\":\"17\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"14\",\"y1\":\"11\",\"x2\":\"14\",\"y2\":\"17\"}}]})(props);\n};\nexport function FiTrash (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"3 6 5 6 21 6\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"}}]})(props);\n};\nexport function FiTrello (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"7\",\"y\":\"7\",\"width\":\"3\",\"height\":\"9\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"14\",\"y\":\"7\",\"width\":\"3\",\"height\":\"5\"}}]})(props);\n};\nexport function FiTrendingDown (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 18 13.5 8.5 8.5 13.5 1 6\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 18 23 18 23 12\"}}]})(props);\n};\nexport function FiTrendingUp (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"23 6 13.5 15.5 8.5 10.5 1 18\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 6 23 6 23 12\"}}]})(props);\n};\nexport function FiTriangle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"}}]})(props);\n};\nexport function FiTruck (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"3\",\"width\":\"15\",\"height\":\"13\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"16 8 20 8 23 11 23 16 16 16 16 8\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.5\",\"cy\":\"18.5\",\"r\":\"2.5\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.5\",\"cy\":\"18.5\",\"r\":\"2.5\"}}]})(props);\n};\nexport function FiTv (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"2\",\"y\":\"7\",\"width\":\"20\",\"height\":\"15\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 2 12 7 7 2\"}}]})(props);\n};\nexport function FiTwitch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 2H3v16h5v4l4-4h5l4-4V2zM11 11V7M16 11V7\"}}]})(props);\n};\nexport function FiTwitter (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"}}]})(props);\n};\nexport function FiType (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"4 7 4 4 20 4 20 7\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"20\",\"x2\":\"15\",\"y2\":\"20\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"4\",\"x2\":\"12\",\"y2\":\"20\"}}]})(props);\n};\nexport function FiUmbrella (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7\"}}]})(props);\n};\nexport function FiUnderline (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"4\",\"y1\":\"21\",\"x2\":\"20\",\"y2\":\"21\"}}]})(props);\n};\nexport function FiUnlock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"11\",\"width\":\"18\",\"height\":\"11\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M7 11V7a5 5 0 0 1 9.9-1\"}}]})(props);\n};\nexport function FiUploadCloud (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 16 12 12 8 16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"12\",\"x2\":\"12\",\"y2\":\"21\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"16 16 12 12 8 16\"}}]})(props);\n};\nexport function FiUpload (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 8 12 3 7 8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"3\",\"x2\":\"12\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiUserCheck (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"17 11 19 13 23 9\"}}]})(props);\n};\nexport function FiUserMinus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"11\",\"x2\":\"17\",\"y2\":\"11\"}}]})(props);\n};\nexport function FiUserPlus (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"20\",\"y1\":\"8\",\"x2\":\"20\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"11\",\"x2\":\"17\",\"y2\":\"11\"}}]})(props);\n};\nexport function FiUserX (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.5\",\"cy\":\"7\",\"r\":\"4\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"8\",\"x2\":\"23\",\"y2\":\"13\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"8\",\"x2\":\"18\",\"y2\":\"13\"}}]})(props);\n};\nexport function FiUser (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"7\",\"r\":\"4\"}}]})(props);\n};\nexport function FiUsers (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9\",\"cy\":\"7\",\"r\":\"4\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M23 21v-2a4 4 0 0 0-3-3.87\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16 3.13a4 4 0 0 1 0 7.75\"}}]})(props);\n};\nexport function FiVideoOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiVideo (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"23 7 16 12 23 17 23 7\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"5\",\"width\":\"15\",\"height\":\"14\",\"rx\":\"2\",\"ry\":\"2\"}}]})(props);\n};\nexport function FiVoicemail (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.5\",\"cy\":\"11.5\",\"r\":\"4.5\"}},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.5\",\"cy\":\"11.5\",\"r\":\"4.5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"5.5\",\"y1\":\"16\",\"x2\":\"18.5\",\"y2\":\"16\"}}]})(props);\n};\nexport function FiVolume1 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.54 8.46a5 5 0 0 1 0 7.07\"}}]})(props);\n};\nexport function FiVolume2 (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"}}]})(props);\n};\nexport function FiVolumeX (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"23\",\"y1\":\"9\",\"x2\":\"17\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"17\",\"y1\":\"9\",\"x2\":\"23\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiVolume (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"}}]})(props);\n};\nexport function FiWatch (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"7\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 9 12 12 13.5 13.5\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83\"}}]})(props);\n};\nexport function FiWifiOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.72 11.06A10.94 10.94 0 0 1 19 12.55\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12.55a10.94 10.94 0 0 1 5.17-2.39\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.71 5.05A16 16 0 0 1 22.58 9\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M1.42 9a15.91 15.91 0 0 1 4.7-2.88\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.53 16.11a6 6 0 0 1 6.95 0\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12.01\",\"y2\":\"20\"}}]})(props);\n};\nexport function FiWifi (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5 12.55a11 11 0 0 1 14.08 0\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M1.42 9a16 16 0 0 1 21.16 0\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.53 16.11a6 6 0 0 1 6.95 0\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"12\",\"y1\":\"20\",\"x2\":\"12.01\",\"y2\":\"20\"}}]})(props);\n};\nexport function FiWind (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2\"}}]})(props);\n};\nexport function FiXCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"9\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"15\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiXOctagon (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"9\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"15\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiXSquare (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"3\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"9\",\"y1\":\"9\",\"x2\":\"15\",\"y2\":\"15\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"15\",\"y1\":\"9\",\"x2\":\"9\",\"y2\":\"15\"}}]})(props);\n};\nexport function FiX (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"line\",\"attr\":{\"x1\":\"18\",\"y1\":\"6\",\"x2\":\"6\",\"y2\":\"18\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"6\",\"y1\":\"6\",\"x2\":\"18\",\"y2\":\"18\"}}]})(props);\n};\nexport function FiYoutube (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z\"}},{\"tag\":\"polygon\",\"attr\":{\"points\":\"9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02\"}}]})(props);\n};\nexport function FiZapOff (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"12.41 6.75 13 2 10.57 4.92\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"18.57 12.91 21 10 15.66 10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"8 8 3 14 12 14 11 22 16 16\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"1\",\"y1\":\"1\",\"x2\":\"23\",\"y2\":\"23\"}}]})(props);\n};\nexport function FiZap (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"}}]})(props);\n};\nexport function FiZoomIn (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"21\",\"x2\":\"16.65\",\"y2\":\"16.65\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"11\",\"y1\":\"8\",\"x2\":\"11\",\"y2\":\"14\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"11\",\"x2\":\"14\",\"y2\":\"11\"}}]})(props);\n};\nexport function FiZoomOut (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"11\",\"cy\":\"11\",\"r\":\"8\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"21\",\"y1\":\"21\",\"x2\":\"16.65\",\"y2\":\"16.65\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"11\",\"x2\":\"14\",\"y2\":\"11\"}}]})(props);\n};\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"react-list\", [\"prop-types\", \"react\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"prop-types\"), require(\"react\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.PropTypes, global.React);\n    global.ReactList = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_propTypes, _react) {\n  \"use strict\";\n\n  _propTypes = _interopRequireDefault(_propTypes);\n  _react = _interopRequireWildcard(_react);\n\n  var _class, _temp;\n\n  function _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var CLIENT_SIZE_KEYS = {\n    x: 'clientWidth',\n    y: 'clientHeight'\n  };\n  var CLIENT_START_KEYS = {\n    x: 'clientTop',\n    y: 'clientLeft'\n  };\n  var INNER_SIZE_KEYS = {\n    x: 'innerWidth',\n    y: 'innerHeight'\n  };\n  var OFFSET_SIZE_KEYS = {\n    x: 'offsetWidth',\n    y: 'offsetHeight'\n  };\n  var OFFSET_START_KEYS = {\n    x: 'offsetLeft',\n    y: 'offsetTop'\n  };\n  var OVERFLOW_KEYS = {\n    x: 'overflowX',\n    y: 'overflowY'\n  };\n  var SCROLL_SIZE_KEYS = {\n    x: 'scrollWidth',\n    y: 'scrollHeight'\n  };\n  var SCROLL_START_KEYS = {\n    x: 'scrollLeft',\n    y: 'scrollTop'\n  };\n  var SIZE_KEYS = {\n    x: 'width',\n    y: 'height'\n  };\n\n  var NOOP = function NOOP() {}; // If a browser doesn't support the `options` argument to\n  // add/removeEventListener, we need to check, otherwise we will\n  // accidentally set `capture` with a truthy value.\n\n\n  var PASSIVE = function () {\n    if (typeof window === 'undefined') return false;\n    var hasSupport = false;\n\n    try {\n      document.createElement('div').addEventListener('test', NOOP, {\n        get passive() {\n          hasSupport = true;\n          return false;\n        }\n\n      });\n    } catch (e) {// noop\n    }\n\n    return hasSupport;\n  }() ? {\n    passive: true\n  } : false;\n  var UNSTABLE_MESSAGE = 'ReactList failed to reach a stable state.';\n  var MAX_SYNC_UPDATES = 40;\n\n  var isEqualSubset = function isEqualSubset(a, b) {\n    for (var key in b) {\n      if (a[key] !== b[key]) return false;\n    }\n\n    return true;\n  };\n\n  var defaultScrollParentGetter = function defaultScrollParentGetter(component) {\n    var axis = component.props.axis;\n    var el = component.getEl();\n    var overflowKey = OVERFLOW_KEYS[axis];\n\n    while (el = el.parentElement) {\n      switch (window.getComputedStyle(el)[overflowKey]) {\n        case 'auto':\n        case 'scroll':\n        case 'overlay':\n          return el;\n      }\n    }\n\n    return window;\n  };\n\n  var defaultScrollParentViewportSizeGetter = function defaultScrollParentViewportSizeGetter(component) {\n    var axis = component.props.axis;\n    var scrollParent = component.scrollParent;\n    return scrollParent === window ? window[INNER_SIZE_KEYS[axis]] : scrollParent[CLIENT_SIZE_KEYS[axis]];\n  };\n\n  var constrain = function constrain(props, state) {\n    var length = props.length,\n        minSize = props.minSize,\n        type = props.type;\n    var from = state.from,\n        size = state.size,\n        itemsPerRow = state.itemsPerRow;\n    size = Math.max(size, minSize);\n    var mod = size % itemsPerRow;\n    if (mod) size += itemsPerRow - mod;\n    if (size > length) size = length;\n    from = type === 'simple' || !from ? 0 : Math.max(Math.min(from, length - size), 0);\n\n    if (mod = from % itemsPerRow) {\n      from -= mod;\n      size += mod;\n    }\n\n    if (from === state.from && size == state.size) return state;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      from: from,\n      size: size\n    });\n  };\n\n  module.exports = (_temp = _class = /*#__PURE__*/function (_Component) {\n    _inherits(ReactList, _Component);\n\n    var _super = _createSuper(ReactList);\n\n    _createClass(ReactList, null, [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, state) {\n        var newState = constrain(props, state);\n        return newState === state ? null : newState;\n      }\n    }]);\n\n    function ReactList(props) {\n      var _this;\n\n      _classCallCheck(this, ReactList);\n\n      _this = _super.call(this, props);\n      _this.state = constrain(props, {\n        itemsPerRow: 1,\n        from: props.initialIndex,\n        size: 0\n      });\n      _this.cache = {};\n      _this.cachedScrollPosition = null;\n      _this.prevPrevState = {};\n      _this.unstable = false;\n      _this.updateCounter = 0;\n      return _this;\n    }\n\n    _createClass(ReactList, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.updateFrameAndClearCache = this.updateFrameAndClearCache.bind(this);\n        window.addEventListener('resize', this.updateFrameAndClearCache);\n        this.updateFrame(this.scrollTo.bind(this, this.props.initialIndex));\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        // Viewport scroll is no longer useful if axis changes\n        if (this.props.axis !== prevProps.axis) this.clearSizeCache(); // If the list has reached an unstable state, prevent an infinite loop.\n\n        if (this.unstable) return;\n\n        if (++this.updateCounter > MAX_SYNC_UPDATES) {\n          this.unstable = true;\n          return console.error(UNSTABLE_MESSAGE);\n        }\n\n        if (!this.updateCounterTimeoutId) {\n          this.updateCounterTimeoutId = setTimeout(function () {\n            _this2.updateCounter = 0;\n            delete _this2.updateCounterTimeoutId;\n          }, 0);\n        }\n\n        this.updateFrame();\n      }\n    }, {\n      key: \"maybeSetState\",\n      value: function maybeSetState(b, cb) {\n        if (isEqualSubset(this.state, b)) return cb();\n        this.setState(b, cb);\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        window.removeEventListener('resize', this.updateFrameAndClearCache);\n        this.scrollParent.removeEventListener('scroll', this.updateFrameAndClearCache, PASSIVE);\n        this.scrollParent.removeEventListener('mousewheel', NOOP, PASSIVE);\n      }\n    }, {\n      key: \"getOffset\",\n      value: function getOffset(el) {\n        var axis = this.props.axis;\n        var offset = el[CLIENT_START_KEYS[axis]] || 0;\n        var offsetKey = OFFSET_START_KEYS[axis];\n\n        do {\n          offset += el[offsetKey] || 0;\n        } while (el = el.offsetParent);\n\n        return offset;\n      }\n    }, {\n      key: \"getEl\",\n      value: function getEl() {\n        return this.el || this.items;\n      }\n    }, {\n      key: \"getScrollPosition\",\n      value: function getScrollPosition() {\n        // Cache scroll position as this causes a forced synchronous layout.\n        if (typeof this.cachedScrollPosition === 'number') {\n          return this.cachedScrollPosition;\n        }\n\n        var scrollParent = this.scrollParent;\n        var axis = this.props.axis;\n        var scrollKey = SCROLL_START_KEYS[axis];\n        var actual = scrollParent === window ? // Firefox always returns document.body[scrollKey] as 0 and Chrome/Safari\n        // always return document.documentElement[scrollKey] as 0, so take\n        // whichever has a value.\n        document.body[scrollKey] || document.documentElement[scrollKey] : scrollParent[scrollKey];\n        var max = this.getScrollSize() - this.props.scrollParentViewportSizeGetter(this);\n        var scroll = Math.max(0, Math.min(actual, max));\n        var el = this.getEl();\n        this.cachedScrollPosition = this.getOffset(scrollParent) + scroll - this.getOffset(el);\n        return this.cachedScrollPosition;\n      }\n    }, {\n      key: \"setScroll\",\n      value: function setScroll(offset) {\n        var scrollParent = this.scrollParent;\n        var axis = this.props.axis;\n        offset += this.getOffset(this.getEl());\n        if (scrollParent === window) return window.scrollTo(0, offset);\n        offset -= this.getOffset(this.scrollParent);\n        scrollParent[SCROLL_START_KEYS[axis]] = offset;\n      }\n    }, {\n      key: \"getScrollSize\",\n      value: function getScrollSize() {\n        var scrollParent = this.scrollParent;\n        var _document = document,\n            body = _document.body,\n            documentElement = _document.documentElement;\n        var key = SCROLL_SIZE_KEYS[this.props.axis];\n        return scrollParent === window ? Math.max(body[key], documentElement[key]) : scrollParent[key];\n      }\n    }, {\n      key: \"hasDeterminateSize\",\n      value: function hasDeterminateSize() {\n        var _this$props = this.props,\n            itemSizeGetter = _this$props.itemSizeGetter,\n            type = _this$props.type;\n        return type === 'uniform' || itemSizeGetter;\n      }\n    }, {\n      key: \"getStartAndEnd\",\n      value: function getStartAndEnd() {\n        var threshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.threshold;\n        var scroll = this.getScrollPosition();\n        var start = Math.max(0, scroll - threshold);\n        var end = scroll + this.props.scrollParentViewportSizeGetter(this) + threshold;\n\n        if (this.hasDeterminateSize()) {\n          end = Math.min(end, this.getSpaceBefore(this.props.length));\n        }\n\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }, {\n      key: \"getItemSizeAndItemsPerRow\",\n      value: function getItemSizeAndItemsPerRow() {\n        var _this$props2 = this.props,\n            axis = _this$props2.axis,\n            useStaticSize = _this$props2.useStaticSize;\n        var _this$state = this.state,\n            itemSize = _this$state.itemSize,\n            itemsPerRow = _this$state.itemsPerRow;\n\n        if (useStaticSize && itemSize && itemsPerRow) {\n          return {\n            itemSize: itemSize,\n            itemsPerRow: itemsPerRow\n          };\n        }\n\n        var itemEls = this.items.children;\n        if (!itemEls.length) return {};\n        var firstEl = itemEls[0]; // Firefox has a problem where it will return a *slightly* (less than\n        // thousandths of a pixel) different size for the same element between\n        // renders. This can cause an infinite render loop, so only change the\n        // itemSize when it is significantly different.\n\n        var firstElSize = firstEl[OFFSET_SIZE_KEYS[axis]];\n        var delta = Math.abs(firstElSize - itemSize);\n        if (isNaN(delta) || delta >= 1) itemSize = firstElSize;\n        if (!itemSize) return {};\n        var startKey = OFFSET_START_KEYS[axis];\n        var firstStart = firstEl[startKey];\n        itemsPerRow = 1;\n\n        for (var item = itemEls[itemsPerRow]; item && item[startKey] === firstStart; item = itemEls[itemsPerRow]) {\n          ++itemsPerRow;\n        }\n\n        return {\n          itemSize: itemSize,\n          itemsPerRow: itemsPerRow\n        };\n      }\n    }, {\n      key: \"clearSizeCache\",\n      value: function clearSizeCache() {\n        this.cachedScrollPosition = null;\n      } // Called by 'scroll' and 'resize' events, clears scroll position cache.\n\n    }, {\n      key: \"updateFrameAndClearCache\",\n      value: function updateFrameAndClearCache(cb) {\n        this.clearSizeCache();\n        return this.updateFrame(cb);\n      }\n    }, {\n      key: \"updateFrame\",\n      value: function updateFrame(cb) {\n        this.updateScrollParent();\n        if (typeof cb != 'function') cb = NOOP;\n\n        switch (this.props.type) {\n          case 'simple':\n            return this.updateSimpleFrame(cb);\n\n          case 'variable':\n            return this.updateVariableFrame(cb);\n\n          case 'uniform':\n            return this.updateUniformFrame(cb);\n        }\n      }\n    }, {\n      key: \"updateScrollParent\",\n      value: function updateScrollParent() {\n        var prev = this.scrollParent;\n        this.scrollParent = this.props.scrollParentGetter(this);\n        if (prev === this.scrollParent) return;\n\n        if (prev) {\n          prev.removeEventListener('scroll', this.updateFrameAndClearCache);\n          prev.removeEventListener('mousewheel', NOOP);\n        } // If we have a new parent, cached parent dimensions are no longer useful.\n\n\n        this.clearSizeCache();\n        this.scrollParent.addEventListener('scroll', this.updateFrameAndClearCache, PASSIVE); // You have to attach mousewheel listener to the scrollable element.\n        // Just an empty listener. After that onscroll events will be fired synchronously.\n\n        this.scrollParent.addEventListener('mousewheel', NOOP, PASSIVE);\n      }\n    }, {\n      key: \"updateSimpleFrame\",\n      value: function updateSimpleFrame(cb) {\n        var _this$getStartAndEnd = this.getStartAndEnd(),\n            end = _this$getStartAndEnd.end;\n\n        var itemEls = this.items.children;\n        var elEnd = 0;\n\n        if (itemEls.length) {\n          var axis = this.props.axis;\n          var firstItemEl = itemEls[0];\n          var lastItemEl = itemEls[itemEls.length - 1];\n          elEnd = this.getOffset(lastItemEl) + lastItemEl[OFFSET_SIZE_KEYS[axis]] - this.getOffset(firstItemEl);\n        }\n\n        if (elEnd > end) return cb();\n        var _this$props3 = this.props,\n            pageSize = _this$props3.pageSize,\n            length = _this$props3.length;\n        var size = Math.min(this.state.size + pageSize, length);\n        this.maybeSetState({\n          size: size\n        }, cb);\n      }\n    }, {\n      key: \"updateVariableFrame\",\n      value: function updateVariableFrame(cb) {\n        if (!this.props.itemSizeGetter) this.cacheSizes();\n\n        var _this$getStartAndEnd2 = this.getStartAndEnd(),\n            start = _this$getStartAndEnd2.start,\n            end = _this$getStartAndEnd2.end;\n\n        var _this$props4 = this.props,\n            length = _this$props4.length,\n            pageSize = _this$props4.pageSize;\n        var space = 0;\n        var from = 0;\n        var size = 0;\n        var maxFrom = length - 1;\n\n        while (from < maxFrom) {\n          var itemSize = this.getSizeOfItem(from);\n          if (itemSize == null || space + itemSize > start) break;\n          space += itemSize;\n          ++from;\n        }\n\n        var maxSize = length - from;\n\n        while (size < maxSize && space < end) {\n          var _itemSize = this.getSizeOfItem(from + size);\n\n          if (_itemSize == null) {\n            size = Math.min(size + pageSize, maxSize);\n            break;\n          }\n\n          space += _itemSize;\n          ++size;\n        }\n\n        this.maybeSetState(constrain(this.props, {\n          from: from,\n          itemsPerRow: 1,\n          size: size\n        }), cb);\n      }\n    }, {\n      key: \"updateUniformFrame\",\n      value: function updateUniformFrame(cb) {\n        var _this$getItemSizeAndI = this.getItemSizeAndItemsPerRow(),\n            itemSize = _this$getItemSizeAndI.itemSize,\n            itemsPerRow = _this$getItemSizeAndI.itemsPerRow;\n\n        if (!itemSize || !itemsPerRow) return cb();\n\n        var _this$getStartAndEnd3 = this.getStartAndEnd(),\n            start = _this$getStartAndEnd3.start,\n            end = _this$getStartAndEnd3.end;\n\n        var _constrain = constrain(this.props, {\n          from: Math.floor(start / itemSize) * itemsPerRow,\n          size: (Math.ceil((end - start) / itemSize) + 1) * itemsPerRow,\n          itemsPerRow: itemsPerRow\n        }),\n            from = _constrain.from,\n            size = _constrain.size;\n\n        return this.maybeSetState({\n          itemsPerRow: itemsPerRow,\n          from: from,\n          itemSize: itemSize,\n          size: size\n        }, cb);\n      }\n    }, {\n      key: \"getSpaceBefore\",\n      value: function getSpaceBefore(index) {\n        var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (cache[index] != null) return cache[index]; // Try the static itemSize.\n\n        var _this$state2 = this.state,\n            itemSize = _this$state2.itemSize,\n            itemsPerRow = _this$state2.itemsPerRow;\n\n        if (itemSize) {\n          return cache[index] = Math.floor(index / itemsPerRow) * itemSize;\n        } // Find the closest space to index there is a cached value for.\n\n\n        var from = index;\n\n        while (from > 0 && cache[--from] == null) {\n          ;\n        } // Finally, accumulate sizes of items from - index.\n\n\n        var space = cache[from] || 0;\n\n        for (var i = from; i < index; ++i) {\n          cache[i] = space;\n\n          var _itemSize2 = this.getSizeOfItem(i);\n\n          if (_itemSize2 == null) break;\n          space += _itemSize2;\n        }\n\n        return cache[index] = space;\n      }\n    }, {\n      key: \"cacheSizes\",\n      value: function cacheSizes() {\n        var cache = this.cache;\n        var from = this.state.from;\n        var itemEls = this.items.children;\n        var sizeKey = OFFSET_SIZE_KEYS[this.props.axis];\n\n        for (var i = 0, l = itemEls.length; i < l; ++i) {\n          cache[from + i] = itemEls[i][sizeKey];\n        }\n      }\n    }, {\n      key: \"getSizeOfItem\",\n      value: function getSizeOfItem(index) {\n        var cache = this.cache,\n            items = this.items;\n        var _this$props5 = this.props,\n            axis = _this$props5.axis,\n            itemSizeGetter = _this$props5.itemSizeGetter,\n            itemSizeEstimator = _this$props5.itemSizeEstimator,\n            type = _this$props5.type;\n        var _this$state3 = this.state,\n            from = _this$state3.from,\n            itemSize = _this$state3.itemSize,\n            size = _this$state3.size; // Try the static itemSize.\n\n        if (itemSize) return itemSize; // Try the itemSizeGetter.\n\n        if (itemSizeGetter) return itemSizeGetter(index); // Try the cache.\n\n        if (index in cache) return cache[index]; // Try the DOM.\n\n        if (type === 'simple' && index >= from && index < from + size && items) {\n          var itemEl = items.children[index - from];\n          if (itemEl) return itemEl[OFFSET_SIZE_KEYS[axis]];\n        } // Try the itemSizeEstimator.\n\n\n        if (itemSizeEstimator) return itemSizeEstimator(index, cache);\n      }\n    }, {\n      key: \"scrollTo\",\n      value: function scrollTo(index) {\n        if (index != null) this.setScroll(this.getSpaceBefore(index));\n      }\n    }, {\n      key: \"scrollAround\",\n      value: function scrollAround(index) {\n        var current = this.getScrollPosition();\n        var bottom = this.getSpaceBefore(index);\n        var top = bottom - this.props.scrollParentViewportSizeGetter(this) + this.getSizeOfItem(index);\n        var min = Math.min(top, bottom);\n        var max = Math.max(top, bottom);\n        if (current <= min) return this.setScroll(min);\n        if (current > max) return this.setScroll(max);\n      }\n    }, {\n      key: \"getVisibleRange\",\n      value: function getVisibleRange() {\n        var _this$state4 = this.state,\n            from = _this$state4.from,\n            size = _this$state4.size;\n\n        var _this$getStartAndEnd4 = this.getStartAndEnd(0),\n            start = _this$getStartAndEnd4.start,\n            end = _this$getStartAndEnd4.end;\n\n        var cache = {};\n        var first, last;\n\n        for (var i = from; i < from + size; ++i) {\n          var itemStart = this.getSpaceBefore(i, cache);\n          var itemEnd = itemStart + this.getSizeOfItem(i);\n          if (first == null && itemEnd > start) first = i;\n          if (first != null && itemStart < end) last = i;\n        }\n\n        return [first, last];\n      }\n    }, {\n      key: \"renderItems\",\n      value: function renderItems() {\n        var _this3 = this;\n\n        var _this$props6 = this.props,\n            itemRenderer = _this$props6.itemRenderer,\n            itemsRenderer = _this$props6.itemsRenderer;\n        var _this$state5 = this.state,\n            from = _this$state5.from,\n            size = _this$state5.size;\n        var items = [];\n\n        for (var i = 0; i < size; ++i) {\n          items.push(itemRenderer(from + i, i));\n        }\n\n        return itemsRenderer(items, function (c) {\n          return _this3.items = c;\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n\n        var _this$props7 = this.props,\n            axis = _this$props7.axis,\n            length = _this$props7.length,\n            type = _this$props7.type,\n            useTranslate3d = _this$props7.useTranslate3d;\n        var _this$state6 = this.state,\n            from = _this$state6.from,\n            itemsPerRow = _this$state6.itemsPerRow;\n        var items = this.renderItems();\n        if (type === 'simple') return items;\n        var style = {\n          position: 'relative'\n        };\n        var cache = {};\n        var bottom = Math.ceil(length / itemsPerRow) * itemsPerRow;\n        var size = this.getSpaceBefore(bottom, cache);\n\n        if (size) {\n          style[SIZE_KEYS[axis]] = size;\n          if (axis === 'x') style.overflowX = 'hidden';\n        }\n\n        var offset = this.getSpaceBefore(from, cache);\n        var x = axis === 'x' ? offset : 0;\n        var y = axis === 'y' ? offset : 0;\n        var transform = useTranslate3d ? \"translate3d(\".concat(x, \"px, \").concat(y, \"px, 0)\") : \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n        var listStyle = {\n          msTransform: transform,\n          WebkitTransform: transform,\n          transform: transform\n        };\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: style,\n          ref: function ref(c) {\n            return _this4.el = c;\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: listStyle\n        }, items));\n      }\n    }]);\n\n    return ReactList;\n  }(_react.Component), _defineProperty(_class, \"displayName\", 'ReactList'), _defineProperty(_class, \"propTypes\", {\n    axis: _propTypes[\"default\"].oneOf(['x', 'y']),\n    initialIndex: _propTypes[\"default\"].number,\n    itemRenderer: _propTypes[\"default\"].func,\n    itemSizeEstimator: _propTypes[\"default\"].func,\n    itemSizeGetter: _propTypes[\"default\"].func,\n    itemsRenderer: _propTypes[\"default\"].func,\n    length: _propTypes[\"default\"].number,\n    minSize: _propTypes[\"default\"].number,\n    pageSize: _propTypes[\"default\"].number,\n    scrollParentGetter: _propTypes[\"default\"].func,\n    scrollParentViewportSizeGetter: _propTypes[\"default\"].func,\n    threshold: _propTypes[\"default\"].number,\n    type: _propTypes[\"default\"].oneOf(['simple', 'variable', 'uniform']),\n    useStaticSize: _propTypes[\"default\"].bool,\n    useTranslate3d: _propTypes[\"default\"].bool\n  }), _defineProperty(_class, \"defaultProps\", {\n    axis: 'y',\n    itemRenderer: function itemRenderer(index, key) {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        key: key\n      }, index);\n    },\n    itemsRenderer: function itemsRenderer(items, ref) {\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: ref\n      }, items);\n    },\n    length: 0,\n    minSize: 1,\n    pageSize: 10,\n    scrollParentGetter: defaultScrollParentGetter,\n    scrollParentViewportSizeGetter: defaultScrollParentViewportSizeGetter,\n    threshold: 100,\n    type: 'simple',\n    useStaticSize: false,\n    useTranslate3d: false\n  }), _temp);\n});\n","function shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualArrays(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { shallowEqualArrays, shallowEqualObjects };\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","let e={data:\"\"},t=t=>\"object\"==typeof window?((t?t.querySelector(\"#_goober\"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement(\"style\")),{innerHTML:\" \",id:\"_goober\"})).firstChild:t||e,r=e=>{let r=t(e),l=r.data;return r.data=\"\",l},l=/(?:([\\u0080-\\uFFFF\\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\\s*)/g,a=/\\/\\*[^]*?\\*\\/|  +/g,n=/\\n+/g,o=(e,t)=>{let r=\"\",l=\"\",a=\"\";for(let n in e){let c=e[n];\"@\"==n[0]?\"i\"==n[1]?r=n+\" \"+c+\";\":l+=\"f\"==n[1]?o(c,n):n+\"{\"+o(c,\"k\"==n[1]?\"\":t)+\"}\":\"object\"==typeof c?l+=o(c,t?t.replace(/([^,])+/g,e=>n.replace(/(^:.*)|([^,])+/g,t=>/&/.test(t)?t.replace(/&/g,e):e?e+\" \"+t:t)):n):null!=c&&(n=/^--/.test(n)?n:n.replace(/[A-Z]/g,\"-$&\").toLowerCase(),a+=o.p?o.p(n,c):n+\":\"+c+\";\")}return r+(t&&a?t+\"{\"+a+\"}\":a)+l},c={},s=e=>{if(\"object\"==typeof e){let t=\"\";for(let r in e)t+=r+s(e[r]);return t}return e},i=(e,t,r,i,p)=>{let u=s(e),d=c[u]||(c[u]=(e=>{let t=0,r=11;for(;t<e.length;)r=101*r+e.charCodeAt(t++)>>>0;return\"go\"+r})(u));if(!c[d]){let t=u!==e?e:(e=>{let t,r,o=[{}];for(;t=l.exec(e.replace(a,\"\"));)t[4]?o.shift():t[3]?(r=t[3].replace(n,\" \").trim(),o.unshift(o[0][r]=o[0][r]||{})):o[0][t[1]]=t[2].replace(n,\" \").trim();return o[0]})(e);c[d]=o(p?{[\"@keyframes \"+d]:t}:t,r?\"\":\".\"+d)}let f=r&&c.g?c.g:null;return r&&(c.g=c[d]),((e,t,r,l)=>{l?t.data=t.data.replace(l,e):-1===t.data.indexOf(e)&&(t.data=r?e+t.data:t.data+e)})(c[d],t,i,f),d},p=(e,t,r)=>e.reduce((e,l,a)=>{let n=t[a];if(n&&n.call){let e=n(r),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;n=t?\".\"+t:e&&\"object\"==typeof e?e.props?\"\":o(e,\"\"):!1===e?\"\":e}return e+l+(null==n?\"\":n)},\"\");function u(e){let r=this||{},l=e.call?e(r.p):e;return i(l.unshift?l.raw?p(l,[].slice.call(arguments,1),r.p):l.reduce((e,t)=>Object.assign(e,t&&t.call?t(r.p):t),{}):l,t(r.target),r.g,r.o,r.k)}let d,f,g,b=u.bind({g:1}),h=u.bind({k:1});function m(e,t,r,l){o.p=t,d=e,f=r,g=l}function j(e,t){let r=this||{};return function(){let l=arguments;function a(n,o){let c=Object.assign({},n),s=c.className||a.className;r.p=Object.assign({theme:f&&f()},c),r.o=/ *go\\d+/.test(s),c.className=u.apply(r,l)+(s?\" \"+s:\"\"),t&&(c.ref=o);let i=e;return e[0]&&(i=c.as||e,delete c.as),g&&i[0]&&g(c),d(i,c)}return t?t(a):a}}export{u as css,r as extractCss,b as glob,h as keyframes,m as setup,j as styled};\n","\"use client\";\nvar W=e=>typeof e==\"function\",T=(e,t)=>W(e)?e(t):e;var U=(()=>{let e=0;return()=>(++e).toString()})(),b=(()=>{let e;return()=>{if(e===void 0&&typeof window<\"u\"){let t=matchMedia(\"(prefers-reduced-motion: reduce)\");e=!t||t.matches}return e}})();import{useEffect as H,useState as j}from\"react\";var Q=20;var S=new Map,X=1e3,$=e=>{if(S.has(e))return;let t=setTimeout(()=>{S.delete(e),u({type:4,toastId:e})},X);S.set(e,t)},J=e=>{let t=S.get(e);t&&clearTimeout(t)},v=(e,t)=>{switch(t.type){case 0:return{...e,toasts:[t.toast,...e.toasts].slice(0,Q)};case 1:return t.toast.id&&J(t.toast.id),{...e,toasts:e.toasts.map(r=>r.id===t.toast.id?{...r,...t.toast}:r)};case 2:let{toast:o}=t;return e.toasts.find(r=>r.id===o.id)?v(e,{type:1,toast:o}):v(e,{type:0,toast:o});case 3:let{toastId:s}=t;return s?$(s):e.toasts.forEach(r=>{$(r.id)}),{...e,toasts:e.toasts.map(r=>r.id===s||s===void 0?{...r,visible:!1}:r)};case 4:return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(r=>r.id!==t.toastId)};case 5:return{...e,pausedAt:t.time};case 6:let a=t.time-(e.pausedAt||0);return{...e,pausedAt:void 0,toasts:e.toasts.map(r=>({...r,pauseDuration:r.pauseDuration+a}))}}},A=[],P={toasts:[],pausedAt:void 0},u=e=>{P=v(P,e),A.forEach(t=>{t(P)})},Y={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},I=(e={})=>{let[t,o]=j(P);H(()=>(A.push(o),()=>{let a=A.indexOf(o);a>-1&&A.splice(a,1)}),[t]);let s=t.toasts.map(a=>{var r,c;return{...e,...e[a.type],...a,duration:a.duration||((r=e[a.type])==null?void 0:r.duration)||(e==null?void 0:e.duration)||Y[a.type],style:{...e.style,...(c=e[a.type])==null?void 0:c.style,...a.style}}});return{...t,toasts:s}};var G=(e,t=\"blank\",o)=>({createdAt:Date.now(),visible:!0,type:t,ariaProps:{role:\"status\",\"aria-live\":\"polite\"},message:e,pauseDuration:0,...o,id:(o==null?void 0:o.id)||U()}),h=e=>(t,o)=>{let s=G(t,e,o);return u({type:2,toast:s}),s.id},n=(e,t)=>h(\"blank\")(e,t);n.error=h(\"error\");n.success=h(\"success\");n.loading=h(\"loading\");n.custom=h(\"custom\");n.dismiss=e=>{u({type:3,toastId:e})};n.remove=e=>u({type:4,toastId:e});n.promise=(e,t,o)=>{let s=n.loading(t.loading,{...o,...o==null?void 0:o.loading});return e.then(a=>(n.success(T(t.success,a),{id:s,...o,...o==null?void 0:o.success}),a)).catch(a=>{n.error(T(t.error,a),{id:s,...o,...o==null?void 0:o.error})}),e};import{useEffect as K,useCallback as L}from\"react\";var Z=(e,t)=>{u({type:1,toast:{id:e,height:t}})},ee=()=>{u({type:5,time:Date.now()})},D=e=>{let{toasts:t,pausedAt:o}=I(e);K(()=>{if(o)return;let r=Date.now(),c=t.map(i=>{if(i.duration===1/0)return;let d=(i.duration||0)+i.pauseDuration-(r-i.createdAt);if(d<0){i.visible&&n.dismiss(i.id);return}return setTimeout(()=>n.dismiss(i.id),d)});return()=>{c.forEach(i=>i&&clearTimeout(i))}},[t,o]);let s=L(()=>{o&&u({type:6,time:Date.now()})},[o]),a=L((r,c)=>{let{reverseOrder:i=!1,gutter:d=8,defaultPosition:p}=c||{},g=t.filter(m=>(m.position||p)===(r.position||p)&&m.height),E=g.findIndex(m=>m.id===r.id),x=g.filter((m,R)=>R<E&&m.visible).length;return g.filter(m=>m.visible).slice(...i?[x+1]:[0,x]).reduce((m,R)=>m+(R.height||0)+d,0)},[t]);return{toasts:t,handlers:{updateHeight:Z,startPause:ee,endPause:s,calculateOffset:a}}};import*as l from\"react\";import{styled as B,keyframes as z}from\"goober\";import*as y from\"react\";import{styled as C,keyframes as me}from\"goober\";import{styled as te,keyframes as k}from\"goober\";var oe=k`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}`,re=k`\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,se=k`\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}`,_=te(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#ff4b4b\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${oe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: ${re} 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ${e=>e.secondary||\"#fff\"};\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: ${se} 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n`;import{styled as ae,keyframes as ie}from\"goober\";var ne=ie`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`,V=ae(\"div\")`\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ${e=>e.secondary||\"#e0e0e0\"};\n  border-right-color: ${e=>e.primary||\"#616161\"};\n  animation: ${ne} 1s linear infinite;\n`;import{styled as ce,keyframes as N}from\"goober\";var pe=N`\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}`,de=N`\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}`,w=ce(\"div\")`\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ${e=>e.primary||\"#61d345\"};\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: ${pe} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: ${de} 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ${e=>e.secondary||\"#fff\"};\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n`;var ue=C(\"div\")`\n  position: absolute;\n`,le=C(\"div\")`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n`,Te=me`\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}`,fe=C(\"div\")`\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: ${Te} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n`,M=({toast:e})=>{let{icon:t,type:o,iconTheme:s}=e;return t!==void 0?typeof t==\"string\"?y.createElement(fe,null,t):t:o===\"blank\"?null:y.createElement(le,null,y.createElement(V,{...s}),o!==\"loading\"&&y.createElement(ue,null,o===\"error\"?y.createElement(_,{...s}):y.createElement(w,{...s})))};var ye=e=>`\n0% {transform: translate3d(0,${e*-200}%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n`,ge=e=>`\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,${e*-150}%,-1px) scale(.6); opacity:0;}\n`,he=\"0%{opacity:0;} 100%{opacity:1;}\",xe=\"0%{opacity:1;} 100%{opacity:0;}\",be=B(\"div\")`\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n`,Se=B(\"div\")`\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n`,Ae=(e,t)=>{let s=e.includes(\"top\")?1:-1,[a,r]=b()?[he,xe]:[ye(s),ge(s)];return{animation:t?`${z(a)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${z(r)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},F=l.memo(({toast:e,position:t,style:o,children:s})=>{let a=e.height?Ae(e.position||t||\"top-center\",e.visible):{opacity:0},r=l.createElement(M,{toast:e}),c=l.createElement(Se,{...e.ariaProps},T(e.message,e));return l.createElement(be,{className:e.className,style:{...a,...o,...e.style}},typeof s==\"function\"?s({icon:r,message:c}):l.createElement(l.Fragment,null,r,c))});import{css as Pe,setup as Oe}from\"goober\";import*as f from\"react\";Oe(f.createElement);var Ee=({id:e,className:t,style:o,onHeightUpdate:s,children:a})=>{let r=f.useCallback(c=>{if(c){let i=()=>{let d=c.getBoundingClientRect().height;s(e,d)};i(),new MutationObserver(i).observe(c,{subtree:!0,childList:!0,characterData:!0})}},[e,s]);return f.createElement(\"div\",{ref:r,className:t,style:o},a)},Re=(e,t)=>{let o=e.includes(\"top\"),s=o?{top:0}:{bottom:0},a=e.includes(\"center\")?{justifyContent:\"center\"}:e.includes(\"right\")?{justifyContent:\"flex-end\"}:{};return{left:0,right:0,display:\"flex\",position:\"absolute\",transition:b()?void 0:\"all 230ms cubic-bezier(.21,1.02,.73,1)\",transform:`translateY(${t*(o?1:-1)}px)`,...s,...a}},ve=Pe`\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n`,O=16,Ie=({reverseOrder:e,position:t=\"top-center\",toastOptions:o,gutter:s,children:a,containerStyle:r,containerClassName:c})=>{let{toasts:i,handlers:d}=D(o);return f.createElement(\"div\",{style:{position:\"fixed\",zIndex:9999,top:O,left:O,right:O,bottom:O,pointerEvents:\"none\",...r},className:c,onMouseEnter:d.startPause,onMouseLeave:d.endPause},i.map(p=>{let g=p.position||t,E=d.calculateOffset(p,{reverseOrder:e,gutter:s,defaultPosition:t}),x=Re(g,E);return f.createElement(Ee,{id:p.id,key:p.id,onHeightUpdate:d.updateHeight,className:p.visible?ve:\"\",style:x},p.type===\"custom\"?T(p.message,p):a?a(p):f.createElement(F,{toast:p,position:g}))}))};var _t=n;export{w as CheckmarkIcon,_ as ErrorIcon,V as LoaderIcon,F as ToastBar,M as ToastIcon,Ie as Toaster,_t as default,T as resolveValue,n as toast,D as useToaster,I as useToasterStore};\n//# sourceMappingURL=index.mjs.map","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (toHast(tree, options))\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (toHast(tree, options || destination))\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is PhrasingContent} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      'link',\n      'linkReference',\n      'strong',\n      'text'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is PhrasingContent} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      'link',\n      'linkReference',\n      'strong',\n      'text'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n"],"names":["deselectCurrent","__webpack_require__","clipboardToIE11Formatting","module","exports","text","options","message","copyKey","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","err","error","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","assign","target","object","property","Object","prototype","hasOwnProperty","call","addMonths","dirtyDate","dirtyAmount","_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__","Z","arguments","date","_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__","amount","_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__","isNaN","Date","NaN","dayOfMonth","getDate","endOfDesiredMonth","getTime","setMonth","getMonth","setFullYear","getFullYear","addYears","_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__","_addMonths_index_js__WEBPACK_IMPORTED_MODULE_2__","differenceInCalendarMonths","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","yearDiff","eachDayOfInterval","dirtyInterval","_options$step","interval","startDate","start","endTime","endDate","end","dates","currentDate","setHours","step","Number","push","setDate","endOfMonth","month","endOfWeek","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__","j","weekStartsOn","locale","_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__","day","getDay","compareAsc","requiredArgs","toDate","diff","roundingMap","ceil","Math","round","floor","trunc","value","formatDistanceToNow","formatDistance","dirtyBaseDate","months","_lib_defaultOptions","defaultLocale","comparison","localizeOptions","_lib_assign","addSuffix","Boolean","seconds","differenceInSeconds","method","differenceInMilliseconds","getRoundingMethod","roundingMethod","minutes","getTimezoneOffsetInMilliseconds","includeSeconds","hours","days","differenceInMonths","result","sign","difference","abs","isLastMonthNotFull","isLastDayOfMonth","endOfDay","nearestMonth","monthsSinceStartOfYear","years","now","isAfter","dirtyDateToCompare","dateToCompare","isBefore","isEqual","dirtyLeftDate","dirtyRightDate","isSameDay","dateLeftStartOfDay","_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__","dateRightStartOfDay","isSameMonth","isWeekend","isWithinInterval","time","startTime","max","dirtyDatesArray","datesArray","forEach","_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_1__","Array","slice","_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__","undefined","min","_arrayLikeToArray","arr","len","length","i","arr2","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","_unsupportedIterableToArray","minLen","n","toString","constructor","name","from","F","s","done","_e","f","normalCompletion","didErr","next","_e2","_assertThisInitialized","self","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","writable","configurable","defineProperty","_getPrototypeOf","getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","Super","NewTarget","apply","_possibleConstructorReturn","esm_typeof","_classCallCheck","instance","Constructor","toPropertyKey","t","toPrimitive","r","String","_defineProperties","props","descriptor","enumerable","key","_createClass","protoProps","staticProps","_defineProperty","obj","Setter","_utcDate","_options","ValueSetter","_Setter","_super","validateValue","setValue","priority","subPriority","_this","utcDate","flags","DateToSystemTimezoneSetter","_Setter2","_super2","_this2","_len","args","_key","concat","timestampIsSet","convertedDate","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","Parser","dateString","token","match","parse","setter","validate","set","rest","_value","EraParser","_Parser","era","width","setUTCFullYear","setUTCHours","numericPatterns","dayOfYear","week","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","mapValue","parseFnResult","mapFn","parseNumericPattern","pattern","matchResult","parseInt","parseTimezonePattern","constants","vh","yJ","qk","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","dayPeriod","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isPreviousCentury","isLeapYearIndex","year","YearParser","valueCallback","isTwoDigitYear","ordinalNumber","unit","_date","normalizedTwoDigitYear","LocalWeekYearParser","getUTCWeekYear","firstWeekContainsDate","startOfUTCWeek","ISOWeekYearParser","_flags","firstWeekOfYear","startOfUTCISOWeek","ExtendedYearParser","QuarterParser","quarter","context","setUTCMonth","StandAloneQuarterParser","MonthParser","StandAloneMonthParser","LocalWeekParser","setUTCWeek","dirtyWeek","toInteger","getUTCWeek","setUTCDate","ISOWeekParser","setUTCISOWeek","dirtyISOWeek","isoWeek","getUTCISOWeek","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","DateParser","isLeapYear","DayOfYearParser","setUTCDay","dirtyDay","currentDay","getUTCDay","dayIndex","remainder","DayParser","LocalDayParser","StandAloneLocalDayParser","ISODayParser","setUTCISODay","AMPMParser","AMPMMidnightParser","DayPeriodParser","Hour1to12Parser","isPM","Hour0to23Parser","Hour0To11Parser","Hour1To24Parser","MinuteParser","setUTCMinutes","SecondParser","setUTCSeconds","FractionOfSecondParser","pow","setUTCMilliseconds","ISOTimezoneWithZParser","ISOTimezoneParser","TimestampSecondsParser","TimestampMillisecondsParser","parsers","G","y","Y","R","u","Q","q","M","L","w","I","d","D","E","c","a","b","B","h","H","K","k","m","S","X","x","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","formatString","_ref4","_options$firstWeekCon","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","_step","subFnOptions","setters","tokens","map","substring","firstCharacter","longFormatters","longFormatter","formatLong","join","usedTokens","_iterator","_ret","_loop","useAdditionalWeekYearTokens","protectedTokens","Do","qp","useAdditionalDayOfYearTokens","Iu","parser","incompatibleTokens","incompatibleToken","find","usedToken","includes","fullToken","parseResult","run","v","input","indexOf","uniquePrioritySetters","sort","filter","index","array","setterArray","_step2","subMilliseconds","_iterator2","dirtyMonth","dateWithDesiredMonth","daysInMonth","getDaysInMonth","monthIndex","lastDayOfMonth","setYear","dirtyYear","startOfMonth","startOfWeek","subMonths","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","getProperty","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","trim","str","lineno","column","updatePosition","lines","lastIndexOf","line","node","Position","source","content","errorsList","msg","reason","filename","silent","re","exec","comments","rules","comment","pos","FORWARD_SLASH","charAt","ASTERISK","EMPTY_STRING","type","declarations","decl","decls","declaration","prop","val","ret","__importDefault","mod","__esModule","inline_style_parser_1","styleObject","default","hasIterator","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_typeof","CopyToClipboard","_react","_interopRequireDefault","_copyToClipboard","_excluded","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","_objectSpread","getOwnPropertyDescriptors","defineProperties","_React$PureComponent","event","_this$props","children","elem","Children","only","onClick","_this$props2","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","cloneElement","PureComponent","_require","ariaLabelsShape","_propTypes","dateInput","monthPicker","yearPicker","prevButton","nextButton","_interopRequireWildcard","nodeInterop","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","desc","_DayCell","_Month","_DateInput","_utils","_classnames3","_reactList","_shallowEqual","_max","_min","_differenceInDays","_isSameMonth","_addDays","_endOfMonth","_startOfMonth","_differenceInCalendarMonths","_setMonth2","_setYear2","_addYears","_isSameDay","_endOfWeek","_startOfWeek","_eachDayOfInterval","_format","_subMonths","_addMonths","_enUS","_styles","_accessibility","WeakMap","cacheBabelInterop","cacheNodeInterop","_extends","Calendar","_PureComponent","_props","preventUnnecessary","scroll","enabled","preventSnapRefocus","focusedDateDiff","state","focusedDate","isAllowedForward","calendarFocus","isAllowedBackward","setState","targetMonthIndex","minDate","dateOptions","visibleMonths","list","getVisibleRange","isFirstRender","scrollTo","newProps","newFocus","calcFocusDate","focusToDate","preview","color","mode","onShownDateChange","maxDate","modeMapper","monthOffset","_setMonth","_setYear","newDate","rangesIndex","rangeItemIndex","onRangeFocusChange","_assertThisInitialize","visibleMonth","changeShownDate","showMonthArrow","showMonthAndYearPickers","ariaLabels","upperYearLimit","defaultProps","lowerYearLimit","styles","onMouseUp","className","monthAndYearWrapper","nextPrevButton","monthAndYearPickers","onChange","monthNames","monthName","monthAndYearDivider","fill","_this$props3","focusedRange","ranges","rangeColors","dateDisplayFormat","editableDateInputs","startDatePlaceholder","endDatePlaceholder","defaultColor","dateDisplayWrapper","showDateDisplay","disabled","dateDisplay","dateDisplayItem","dateDisplayItemActive","readOnly","placeholder","ariaLabel","onDragSelectionEnd","onFocus","handleRangeFocusChange","_this$props4","dragSelectionEnabled","drag","status","disablePreview","_this$props5","updateRange","displayMode","newRange","_this$props6","direction","scrollArea","listSizeCache","monthWidth","monthStep","_getMonthDisplayRange","getMonthDisplayRange","isLongMonth","longMonthHeight","monthHeight","generateStyles","classNames","getMonthNames","calcScrollArea","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","iter","_nonIterableSpread","localize","calendarWidth","calendarHeight","_this3","setTimeout","prevProps","targetProp","propMapper","dateRange","updateShownDate","shallowEqualObjects","_this4","weekDays","weekDay","weekdayDisplayFormat","_this5","_this$props7","onPreviewChange","disabledDates","disabledDay","navigatorRenderer","_this$state","isVertical","monthAndYearRenderer","renderMonthAndYear","calendarWrapper","onMouseLeave","renderDateDisplay","renderWeekdays","infiniteMonths","monthsVertical","monthsHorizontal","height","onScroll","handleScroll","treshold","ref","itemSizeEstimator","estimateMonthSize","axis","itemRenderer","updatePreview","onDragSelectionStart","onDragSelectionMove","showMonthName","showWeekDays","_","monthDisplayFormat","dayDisplayFormat","showPreview","fixedHeight","propTypes","shownDate","rangeShape","initialFocusedRange","_classnames","_isEqual","_isValid","_parse","DateInput","update","changed","invalid","formatDate","parsed","_this$state2","onKeyDown","onBlur","_Calendar","_isWithinInterval","_differenceInCalendarDays","_isBefore","DateRange","_Component","nextFocusRange","isSingleValue","moveRangeOnFirstSelection","retainEndDateOnFirstSelection","selectedRange","dayOffset","isStartDateSelected","inValidDatesWithinRange","disabledDate","findNextRangeIndex","wasValid","focusedRangeIndex","newSelection","calcNewSelection","_ranges$focusedRange$","dateRangeWrapper","setSelection","calendar","Component","_DateRange","_DefinedRange","DateRangePicker","dateRangePickerWrapper","_classnames4","_endOfDay","_isAfter","_startOfDay","DayCell","onMouseDown","keyCode","onMouseEnter","stateChanges","hover","active","isPassive","isToday","isStartOfWeek","isEndOfWeek","isStartOfMonth","isEndOfMonth","dayPassive","dayDisabled","dayToday","dayWeekend","dayStartOfWeek","dayEndOfWeek","dayStartOfMonth","dayEndOfMonth","dayHovered","dayActive","_classnames2","isInRange","isStartEdge","isEndEdge","dayStartPreview","dayInPreview","dayEndPreview","isSelected","selected","inRanges","reduce","startEdge","endEdge","inRange","dayContentRenderer","handleMouseEvent","onPauseCapture","handleKeyEvent","onKeyUp","getClassNames","tabIndex","renderSelectionPlaceholders","renderPreviewPlaceholder","dayNumber","autoFocus","previewColor","_defaultRanges","_InputRangeField","DefinedRange","rangeOffset","focusedInput","option","_this$props2$ranges","_this$props2$focusedR","getCurrentValue","staticRange","findIndex","headerContent","footerContent","inputRanges","staticRanges","renderStaticRangeLabel","definedRangesWrapper","labelContent","_this2$getSelectedRan","getSelectedRange","hasCustomRendering","label","staticRangeSelected","handleRangeChange","onMouseOver","staticRangeLabel","rangeOption","getRangeOptionValue","defaultInputRanges","defaultStaticRanges","InputRangeField","nextProps","inputRange","inputRangeInput","inputRangeLabel","_isWeekend","Month","monthDisplay","_drag$range","startDateOfMonth","endDateOfMonth","isOutsideMinMax","isDisabledSpecifically","some","isDisabledDay","dragRange","createStaticRanges","defineds","startOfLastWeek","endOfLastWeek","startOfToday","endOfToday","startOfYesterday","endOfYesterday","startOfLastMonth","endOfLastMonth","staticRangeHandler","definedRange","today","daySelected","currentFocusedDate","targetInterval","targetDate","currentRangeIndex","nextIndex","startDateOfCalendar","endDateOfCalendar","sources","styleSource","FiShare","_lib__WEBPACK_IMPORTED_MODULE_0__","w_","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","globalThis","_class","_temp","CLIENT_SIZE_KEYS","CLIENT_START_KEYS","INNER_SIZE_KEYS","OFFSET_SIZE_KEYS","OFFSET_START_KEYS","OVERFLOW_KEYS","SCROLL_SIZE_KEYS","SCROLL_START_KEYS","SIZE_KEYS","NOOP","PASSIVE","hasSupport","passive","isEqualSubset","constrain","minSize","size","itemsPerRow","ReactList","initialIndex","cachedScrollPosition","prevPrevState","unstable","updateCounter","newState","updateFrameAndClearCache","updateFrame","clearSizeCache","updateCounterTimeoutId","cb","removeEventListener","scrollParent","el","offset","offsetKey","offsetParent","items","scrollKey","actual","documentElement","getScrollSize","scrollParentViewportSizeGetter","getEl","getOffset","_document","itemSizeGetter","threshold","getScrollPosition","hasDeterminateSize","getSpaceBefore","useStaticSize","itemSize","itemEls","firstEl","firstElSize","delta","startKey","firstStart","item","updateScrollParent","updateSimpleFrame","updateVariableFrame","updateUniformFrame","prev","scrollParentGetter","_this$getStartAndEnd","getStartAndEnd","elEnd","firstItemEl","lastItemEl","pageSize","maybeSetState","cacheSizes","_this$getStartAndEnd2","space","maxFrom","getSizeOfItem","maxSize","_itemSize","_this$getItemSizeAndI","getItemSizeAndItemsPerRow","_this$getStartAndEnd3","_constrain","_itemSize2","sizeKey","l","_this$state3","itemEl","setScroll","current","bottom","first","last","_this$state4","_this$getStartAndEnd4","itemStart","itemEnd","itemsRenderer","_this$state5","useTranslate3d","_this$state6","renderItems","overflowX","transform","msTransform","WebkitTransform","component","overflowKey","parentElement","getComputedStyle","objA","objB","aKeys","bKeys","shallowEqualArrays","arrA","arrB","rangeCount","activeElement","getRangeAt","tagName","toUpperCase","blur","focus","ok","unreachable","data","querySelector","_goober","head","innerHTML","id","firstChild","toLowerCase","charCodeAt","shift","unshift","g","raw","theme","as","W","U","dist_b","matchMedia","matches","Map","$","delete","dist_u","toastId","J","clearTimeout","toasts","toast","visible","pausedAt","pauseDuration","A","P","blank","loading","custom","react","useState","useEffect","splice","duration","createdAt","ariaProps","role","dist_h","dist_n","dismiss","remove","promise","then","catch","ee","useCallback","reverseOrder","gutter","defaultPosition","handlers","updateHeight","startPause","endPause","calculateOffset","oe","se","primary","secondary","ne","V","pe","de","ue","le","Te","fe","icon","iconTheme","ye","ge","be","Se","Ae","animation","memo","opacity","Fragment","Ee","onHeightUpdate","getBoundingClientRect","MutationObserver","observe","subtree","childList","characterData","Re","justifyContent","left","right","display","transition","ve","Ie","toastOptions","containerStyle","containerClassName","zIndex","pointerEvents","_t","nameRe","nameReJsx","emptyOptions","lib_name","settings","jsx","empty","Schema","normal","merge","definitions","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","types_boolean","increment","checks","types_namespaceObject","DefinedInfo","mask","values","check","own","definition","properties","info","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","async","autoCapitalize","autoComplete","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","lang","language","loop","low","manifest","maxLength","media","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onCancel","onCanPlay","onCanPlayThrough","onClose","onContextLost","onContextMenu","onContextRestored","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFormData","onHashChange","onInput","onInvalid","onKeyPress","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseMove","onMouseOut","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","shadowRootDelegatesFocus","shadowRootMode","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","title","translate","typeMustMatch","useMap","wrap","align","aLink","archive","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","property_information_html","property_information_svg","valid","dash","cap","kebab","$0","camelcase","hastToReact","esm","cjs","point","pointStart","lib_point","lib_position","VFileMessage","Error","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","ruleId","parent","fatal","file","stringifyPosition","stack","expected","note","url","lib_own","emptyMap","lib_cap","dashSomething","tableElements","Set","tableCellElement","docs","one","lib_element","parentSchema","schema","findComponentFromName","createElementProps","alignValue","createProperty","Type","dashes","stringify","padRight","padLeft","parseStyle","toCamel","ignoreInvalidStyle","filePath","stylePropertyNameCase","transformStylesToCssCasing","domCasing","cssCasing","transformStyleToCssCasing","toDash","elementAttributeNameCase","tableCellAlignToStyle","createChildren","child","thing","addNode","addChildren","pop","mdxExpression","estree","evaluater","program","expression","lib_default","evaluateExpression","crashEstree","mdxJsxElement","createJsxElementProps","objectExpression","argument","mdxEsm","evaluateProgram","root","passNode","countsByName","passKeys","count","allowExpression","identifiers","split","computed","optional","components","$1","urlAttributes","lib_emptyOptions","lib_one","includeImageAlt","includeHtml","lib_all","parameters","chunkStart","subtokenize","events","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","eventIndex","stream","previous","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","_container","micromark_util_combine_extensions_hasOwnProperty","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","constructs","contentInitial","lineStart","document_document","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","disable","null","blankLine","after","partial","content_content","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text_text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","tabs","chunks","bufferIndex","chunk","_index","_bufferIndex","called","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","titleBefore","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","setextUnderline","paragraph","resolveTo","heading","htmlBlockNames","htmlRawNames","blankLineBefore","nonLazyContinuationStart","nonLazyContinuation","codeFenced","closeStart","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","index_dom_element","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","before","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","labelStartLink","constructs_document","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","constructs_flow","sequenceFurther","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeEnd","completeAttributeNameBefore","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","constructs_string","constructs_text","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","between","tailExitIndex","headEnterIndex","search","decodeNumericCharacterReference","base","fromCodePoint","characterEscapeOrReference","decode","$2","hex","lib_stringifyPosition","unist_util_stringify_position_lib_position","unist_util_stringify_position_lib_point","lib_index","mdast_util_from_markdown_lib_own","mdast_util_from_markdown_lib_point","defaultOnError","remarkParse","doc","encoding","atCarriageReturn","extensions","mdastExtensions","compiler","config","transforms","canContainEols","autolink","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","image","listItem","spread","_spread","listItemValue","expectingFirstListItemValue","ancestor","listOrdered","listUnordered","reference","referenceType","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","depth","onexitdata","characterEscapeValue","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","characterReferenceType","resume","flowCodeInside","codeFencedFence","onexithardbreak","inReference","fragment","labelText","atHardBreak","setextHeadingSlurpLineEnding","setextHeadingLineSequence","codePointAt","setextHeadingText","configure","combined","extension","tree","tokenStack","listStack","prepareList","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","and","errorHandler","siblings","onExitError","lib_toString","ordered","postprocess","parse_parse","combineExtensions","syntaxExtension","hook","maybe","existing","add","constructs_namespaceObject","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","serializeChunks","atTab","main","chunkIndex","sliceChunks","view","startIndex","startBufferIndex","endIndex","endBufferIndex","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","preprocess","endPosition","TextDecoder","lastIndex","env","deserializer","out","unpair","RegExp","BigInt","deserialize","serialized","serialize_toString","asString","shouldSkip","TYPE","serializer","strict","json","pair","toJSON","entries","toISOString","serialize","lossy","structured_clone_esm","structuredClone","micromark_util_character_regexCheck","micromark_util_character_asciiAlphanumeric","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","lib_pointEnd","unist_util_position_lib_point","lib_pointStart","revert","subtype","suffix","contents","listItemLoose","trimLine","handlers_handlers","blockquote","patch","applyData","break","footnoteReference","counter","clobberPrefix","safeId","footnoteOrder","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","rowIndex","cellIndex","cells","cell","trimLines","toml","ignore","yaml","footnoteDefinition","state_own","state_emptyOptions","unist_util_position_lib_position","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","createState","testOrVisitor","visitorOrReverse","reverse","visitor","footnoteById","handle","passThrough","shallow","unknown","unknownHandler","maybeReverse","lib","S4","parents","foot","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","remarkRehype","destination","hastTree","bail","toStringTag","basename","ext","seenNonSlash","assertPath","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","minpath_browser_normalize","absolute","normalizeString","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","sep","JSON","isUrl","fileUrlOrPath","protocol","auth","VFile","cwd","history","messages","stored","assertNonEmpty","assertPart","lib_assertPath","stem","urlToPath","URL","getPathFromURLPosix","hostname","pathname","third","decodeURIComponent","fail","decoder","part","CallableInstance","constr","proto","names","getOwnPropertyNames","unified_lib_own","Processor","Compiler","attachers","freezeIndex","frozen","namespace","transformers","trough","fns","pipeline","middlewareIndex","callback","output","fn","trough_wrap","middleware","fnExpectsCallback","Promise","middelware","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","reject","parseTree","realDone","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugins","plugin","entryIndex","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","t1","mdastTree","toJsxRuntime","jsxDEV","jsxs","development","isStaticChildren","columnNumber","fileName","lineNumber","createEvaluater","jsx_runtime","colon","questionMark","numberSign","ccount","character","convert","castFactory","anyFactory","tests","nodeAsRecord","checkAsRecord","testFunction","looksLikeANode","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findAndReplace","ignored","pairs","toPairs","tupleOrList","tuple","escapeStringRegexp","toFunction","pairIndex","grandparent","change","matchObject","global","findUrl","findEmail","domain","isCorrectDomain","parts","splitUrl","trailExec","trail","closingParenIndex","openingParens","closingParens","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","blockquote_map","listInScope","none","_1","unsafe","longestStreak","code_map","checkQuote","quote","checkEmphasis","image_image","compilePattern","formatLinkAsAutolink","resourceLink","link_link","checkBullet","bullet","checkRule","rule","lib_convert","lib_ok","lib_castFactory","lib_anyFactory","lib_looksLikeANode","phrasing","checkStrong","checkFence","fence","fences","repeat","encode","literalWithBreak","rank","BK","setext","closeAtx","bulletCurrent","checkBulletOrdered","bulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","hasPhrasing","ruleSpaces","checkRuleRepetition","repetition","ruleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","handle_blockquote_map","pattern_in_scope_listInScope","break_hardBreak","handle_code_map","check_quote_checkQuote","emphasis_emphasis","check_emphasis_checkEmphasis","mdast_util_to_string_lib_toString","mdast_util_to_string_lib_all","html_html","handle_image_image","image_reference_imageReference","inline_code_inlineCode","format_link_as_autolink_formatLinkAsAutolink","handle_link_link","link_reference_linkReference","check_bullet_checkBullet","check_rule_checkRule","unist_util_is_lib_convert","unist_util_is_lib_ok","unist_util_is_lib_castFactory","unist_util_is_lib_anyFactory","unist_util_is_lib_looksLikeANode","lib_phrasing","strong_strong","check_strong_checkStrong","handle_handle","check_fence_checkFence","check_bullet_ordered_checkBulletOrdered","check_bullet_other_checkBulletOther","check_list_item_indent_checkListItemIndent","check_rule_repetition_checkRuleRepetition","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","micromark_util_character_unicodePunctuationInternal","micromark_util_character_asciiAlpha","micromark_util_character_asciiPunctuation","micromark_util_character_markdownLineEndingOrSpace","micromark_util_character_unicodeWhitespace","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","syntax_text","syntax_code","_gfmAutolinkLiteralWalkedInto","node_modules_micromark_util_character_markdownLineEndingOrSpace","node_modules_micromark_util_character_markdownSpace","node_modules_micromark_util_character_regexCheck","micromark_util_normalize_identifier_normalizeIdentifier","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","micromark_util_chunked_splice","micromark_extension_gfm_strikethrough_node_modules_micromark_util_character_unicodePunctuationInternal","micromark_extension_gfm_strikethrough_node_modules_micromark_util_character_regexCheck","micromark_extension_gfm_strikethrough_node_modules_micromark_util_character_asciiPunctuation","micromark_extension_gfm_strikethrough_node_modules_micromark_util_character_unicodeWhitespace","micromark_extension_gfm_table_node_modules_micromark_util_character_markdownLineEnding","micromark_extension_gfm_table_node_modules_micromark_util_character_markdownLineEndingOrSpace","micromark_extension_gfm_table_node_modules_micromark_util_character_markdownSpace","micromark_extension_gfm_table_node_modules_micromark_util_character_regexCheck","micromark_factory_space_factorySpace","EditMap","addImpl","editMap","at","vecs","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","gfmTableAlign","inDelimiterRow","alignIndex","rowEnd","previousCell","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","micromark_extension_gfm_task_list_item_node_modules_micromark_util_character_markdownSpace","micromark_extension_gfm_task_list_item_node_modules_micromark_util_character_regexCheck","tasklistCheck","spaceThenNonSpace","node_modules_micromark_factory_space_factorySpace","remark_gfm_lib_emptyOptions","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfmStrikethrough","single","options_","singleTilde","strikethrough","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableAsData","handleTableRowAsData","handleTableCell","row","matrix","markdownTable","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","columnIndex","delimiterStart","delimiterEnd","EXIT","visitParents","factory","visit","subresult","grandparents","nodeAsParent"],"sourceRoot":""}