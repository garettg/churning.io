{"version":3,"file":"static/chunks/pages/index-ee91ddf7fa1728b0.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/components/Options.js","webpack://_N_E/./src/components/SearchForm.js","webpack://_N_E/./src/components/Help.js","webpack://_N_E/./src/components/Reset.js","webpack://_N_E/./src/components/Share.js","webpack://_N_E/./src/components/Error.js","webpack://_N_E/./src/components/Suggestion.js","webpack://_N_E/./src/components/Announce.js","webpack://_N_E/./src/components/Results.js","webpack://_N_E/./src/components/Facets.js","webpack://_N_E/./src/pages/index.js","webpack://_N_E/./src/styles/Share.module.css","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport {Button, Modal, ToggleSwitch} from 'flowbite-react';\nimport {TbAdjustmentsHorizontal} from \"react-icons/tb\";\nimport { useTheme } from 'next-themes';\n\nimport {Config} from \"../../app.config\";\nimport {useSearchContext} from \"../utils/Context\";\nimport {compress, customEvent} from \"../utils/Utils\";\n\nconst Options = () => {\n    const {\n        options,\n        setOptions\n    } = useSearchContext();\n\n    const [mounted, setMounted] = useState(false);\n    const [show, setShow] = useState(false);\n    const { theme, setTheme } = useTheme()\n\n    useEffect(() => setMounted(true), []);\n    if (!mounted) return null;\n\n    const handleClose = () => {\n        localStorage.setItem(Config.id + \"-options\", compress(options));\n        setShow(false);\n    }\n    const toggleShow = () => setShow((s) => !s);\n\n    const handleChange = (name, checked) => {\n        setOptions((oldOptions) => ({ ...oldOptions, [name]: checked }));\n        if (name === \"darkMode\") {\n            if (checked) {\n                setTheme('dark');\n            } else {\n                setTheme('light');\n            }\n        }\n        customEvent(\"options\", {\n            option: name,\n            enabled: checked ? \"Yes\":\"No\"\n        })\n    }\n\n    const optionAvailable = [\n        {id:'dark-mode', label: \"Dark Mode\", name:\"darkMode\", checked: options.darkMode},\n        {id:'old-reddit', label: \"Old Reddit\", name:\"oldReddit\", checked: options.oldReddit},\n        {id:'show-date', label: \"Show Date\", name:\"showDate\", checked: options.showDate},\n        {id:'show-suggestions', label: \"Show Suggestions\", name: \"showSuggestions\", checked: options.showSuggestions}\n    ];\n\n    const optionsList = optionAvailable.map((option, index) => (\n        <ToggleSwitch\n            color=\"blue\"\n            key={index}\n            id={option.id}\n            name={option.name}\n            label={option.label}\n            checked={option.checked}\n            onChange={(checked) => handleChange(option.name, checked)}\n        />\n    ));\n\n    return (\n        <>\n            <Button\n                color=\"blue\"\n                size=\"sm\"\n                title={`${Config.name} Options`}\n                aria-label={`${Config.name} Options`}\n                aria-haspopup={true}\n                onClick={toggleShow}>\n                <TbAdjustmentsHorizontal className=\"h-5 w-5\" />\n            </Button>\n            <Modal\n                show={show}\n                aria-labelledby=\"options-modal\"\n                onClose={handleClose}\n                size=\"sm\">\n                <Modal.Header id=\"options-modal\">\n                    {Config.name} Options\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"\">\n                        <div className=\"flex flex-col gap-4\">\n                            {optionsList}\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        color=\"blue\"\n                        aria-label=\"Close\"\n                        onClick={handleClose}\n                        fullSized>\n                        OK\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default Options;","import React from 'react';\nimport {Label, TextInput, Select, Button, Spinner} from \"flowbite-react\";\nimport {DateRange} from \"react-date-range\";\nimport {parseISO} from 'date-fns';\nimport classNames from \"classnames\";\n\nimport {SearchRange} from \"../utils/Constants\";\nimport {Config} from \"../../app.config\";\nimport {useSearchContext} from \"../utils/Context\";\n\nconst SearchForm = () => {\n    const {\n        query,\n        author,\n        selectionRange,\n        sort,\n        time,\n        subreddit,\n        search,\n        setState,\n        searching,\n    } = useSearchContext();\n\n    const searchSubmit = async (e) => {\n        // Update state\n        e.preventDefault();\n        search(true);\n    };\n\n    const handleChange = (e) => {\n        setState((oldState) => ({ ...oldState, [e.target.name]: e.target.value }));\n    };\n\n    const handleRangeChange = (item) => {\n        setState((oldState) => ({ ...oldState, selectionRange: item.selection }))\n    }\n\n    const timeRangeOptions = Object.entries(SearchRange).map(([key, value], index) => {\n        return (\n            <option value={key} key={index}>{value}</option>\n        );\n    });\n\n    const subredditOptions = Object.entries(Config.subreddits).map(([key, value], index) => {\n        return (\n            <option value={key} key={index}>{key}</option>\n        );\n    });\n\n    let searchButtonLabel = \"Search\"\n    if (searching) {\n        searchButtonLabel =\n            <>\n                <span className=\"mr-3\">\n                    <Spinner size=\"sm\" light={true} />\n                </span>\n                Searching ...\n            </>;\n    }\n\n    let searchButtonDisabled = (query.length < (Config.enableAcronymSearch ? 2:3) && author === \"\");\n\n    return (\n        <form onSubmit={searchSubmit} className=\"flex flex-col gap-3 lg:gap-4 mt-3 md:mt-4\" role=\"search\" aria-label=\"Search Form\">\n            <div>\n                <div className=\"lg:mb-1\">\n                    <Label htmlFor=\"query\" value=\"Search\" />\n                </div>\n                <TextInput\n                    id=\"query\"\n                    name=\"query\"\n                    type=\"search\"\n                    value={query}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <div className=\"lg:mb-1\">\n                    <Label htmlFor=\"author\" value=\"Author\" />\n                </div>\n                <TextInput\n                    id=\"author\"\n                    name=\"author\"\n                    type=\"search\"\n                    value={author}\n                    onChange={handleChange}\n                />\n            </div>\n            <div className=\"grid grid-cols-12 gap-4\">\n                <div className=\"col-span-5\">\n                    <div className=\"lg:mb-1\">\n                        <Label htmlFor=\"sort\" value=\"Sort By\" />\n                    </div>\n                    <Select\n                        id=\"sort\"\n                        name=\"sort\"\n                        value={sort}\n                        onChange={handleChange}>\n                        <option value=\"desc\">Newest</option>\n                        <option value=\"asc\">Oldest</option>\n                    </Select>\n                </div>\n                <div className=\"col-span-7\">\n                    <div className=\"lg:mb-1\">\n                        <Label htmlFor=\"subreddit\" value=\"Subreddit\" />\n                    </div>\n                    <Select\n                        id=\"subreddit\"\n                        name=\"subreddit\"\n                        value={subreddit}\n                        onChange={handleChange}>\n                        {subredditOptions}\n                    </Select>\n                </div>\n            </div>\n            <div>\n                <div className=\"lg:mb-1\">\n                    <Label htmlFor=\"time\" value=\"Time Range\" />\n                </div>\n                <Select\n                    id=\"time\"\n                    name=\"time\"\n                    value={time}\n                    onChange={handleChange}>\n                    {timeRangeOptions}\n                    <option value=\"all\">All</option>\n                    <option value=\"\">Custom</option>\n                </Select>\n            </div>\n            <div className={classNames('custom-date-range', {\"hidden\": time !== \"\"})}>\n                <Label htmlFor=\"date-range\" value=\"Custom Time Range\" className=\"sr-only\" />\n                <DateRange\n                    id=\"date-range\"\n                    editableDateInputs={false}\n                    onChange={(item) => handleRangeChange(item)}\n                    moveRangeOnFirstSelection={false}\n                    minDate={parseISO(`${Config.subreddits[subreddit]}T00:00:00`)}\n                    maxDate={new Date()}\n                    ranges={[selectionRange]}\n                    rangeColors={['#1B5DE7', '#3ecf8e', '#fed14c']}\n                />\n            </div>\n            <div className=\"mt-4\">\n                <Button\n                    color=\"blue\"\n                    disabled={searchButtonDisabled}\n                    aria-disabled={searchButtonDisabled}\n                    aria-label=\"Search\"\n                    type=\"submit\"\n                    fullSized>\n                    {searchButtonLabel}\n                </Button>\n            </div>\n        </form>\n    );\n}\n\nexport default SearchForm;","import React from 'react';\n\nconst Help = () => {\n    return (\n        <table className=\"table-auto text-sm mx-auto\">\n            <thead>\n                <tr>\n                    <th className=\"px-4 py-2 text-left\">Field</th>\n                    <th className=\"px-4 py-2 text-left\">Options</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td className=\"border px-4 py-2 align-top whitespace-nowrap font-bold border-gray-200 dark:border-gray-700\">Search</td>\n                    <td className=\"border px-4 py-2 align-top border-gray-200 dark:border-gray-700\">\n                        <dl>\n                            <dt className=\"font-bold\">General Advice</dt>\n                            <dd className=\"pl-4\">\n                                <p>Search queries should be at least 3 characters long. Common language words could be ignored. Acronyms of 3 letters or more are more likely to produce results, 2 letter acronyms will most likely be filtered out. Variations and pluralizations of words will be found.</p>\n                                <p className=\"italic\">Example: \"save\" can return results that contain \"saving\"</p>\n                                <p className=\"italic\">Example: \"bank bonus\" can return results that contain \"bank\", \"banks\", \"bonus\", or \"bonuses\"</p>\n                            </dd>\n                            <dt className=\"mt-2 font-bold\">Multiple terms</dt>\n                            <dd className=\"pl-4\">\n                                <p>Using words separated using a space should be an \"AND\" search (includes both words)</p>\n                                <p className=\"italic\">Example: chase sapphire</p>\n                                <p>Using words separated with an \"OR\" should find either</p>\n                                <p className=\"italic\">Example: chase or amex</p>\n                            </dd>\n                            <dt className=\"mt-2 font-bold\">Negation</dt>\n                            <dd className=\"pl-4\">\n                                <p>To find comments that match one word but not another word, use a \"-\" before the word you wish to exclude.</p>\n                                <p className=\"italic\">Example: chase -sapphire</p>\n                            </dd>\n                            <dt className=\"mt-2 font-bold\">Exact Phrase</dt>\n                            <dd className=\"pl-4\">\n                                <p>If you wanted to find an exact phrase, you can put the phrase in quotation marks.</p>\n                                <p className=\"italic\">Example: \"amex gold\"</p>\n                            </dd>\n                        </dl>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"border px-4 py-2 align-top whitespace-nowrap font-bold border-gray-200 dark:border-gray-700\">Author</td>\n                    <td className=\"border px-4 py-2 align-top border-gray-200 dark:border-gray-700\">\n                        <p>This parameter will restrict the search to specific Reddit authors.</p>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"border px-4 py-2 align-top whitespace-nowrap font-bold border-gray-200 dark:border-gray-700\">Sort By</td>\n                    <td className=\"border px-4 py-2 align-top border-gray-200 dark:border-gray-700\">\n                        <p>Select a sort order by date, options are newest and oldest.</p>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"border px-4 py-2 align-top whitespace-nowrap font-bold border-gray-200 dark:border-gray-700\">Subreddit</td>\n                    <td className=\"border px-4 py-2 align-top border-gray-200 dark:border-gray-700\">\n                        <p>Select a subreddit to search of multiple options.</p>\n                    </td>\n                </tr>\n                <tr>\n                    <td className=\"border px-4 py-2 align-top whitespace-nowrap font-bold border-gray-200 dark:border-gray-700\">Time Range</td>\n                    <td className=\"border px-4 py-2 align-top border-gray-200 dark:border-gray-700\">\n                        <p>Select a time range from the dropdown. Options include:</p>\n                        <ul className=\"list-inside list-disc px-4 my-3\">\n                            <li>1 day</li>\n                            <li>1 week</li>\n                            <li>1 month</li>\n                            <li>3 months</li>\n                            <li>6 months</li>\n                            <li>1 year</li>\n                            <li>2 years</li>\n                            <li>All</li>\n                            <li>Custom</li>\n                        </ul>\n                        <p>Custom allows a date range to be selected via calendar widget.</p>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default Help;","import React from 'react';\nimport {Button} from \"flowbite-react\";\nimport {MdRefresh} from \"react-icons/md\";\n\nimport {useSearchContext} from \"../utils/Context\";\n\nconst Reset = () => {\n    const {\n        reset\n    } = useSearchContext();\n\n    return (\n        <Button\n            color=\"blue\"\n            size=\"xs\"\n            aria-label=\"Reset Search\"\n            title=\"Reset Search\"\n            onClick={reset}>\n            <MdRefresh className=\"md:mr-2 h-4 w-4\" />\n            <span className=\"hidden md:inline\">Reset</span>\n        </Button>\n    )\n}\n\nexport default Reset;","import React from 'react';\nimport {Button} from \"flowbite-react\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport classNames from \"classnames\";\nimport {FiShare} from \"react-icons/fi\";\nimport {MdOutlineClose} from \"react-icons/md\";\nimport {differenceInDays, endOfDay, startOfDay, toDate, parseISO} from \"date-fns\";\n\nimport styles from \"../styles/Share.module.css\";\n\nimport {useSearchContext} from \"../utils/Context\";\nimport {decompress, gaEvent, customEvent} from \"../utils/Utils\";\nimport {KeywordsRegex} from \"../utils/Constants\";\nimport {Config} from \"../../app.config\";\n\n// https://dev.to/franciscomendes10866/how-to-create-a-notificationtoast-using-react-and-tailwind-545o\nconst Share = () => {\n    const {\n        shareUrl,\n        totalCount\n    } = useSearchContext();\n\n    const onSuccess = () => {\n        toast.custom(\n            (t) => (\n                <div\n                    className={classNames([\n                        styles.notificationWrapper,\n                        t.visible ? \"top-0\" : \"-top-96\",\n                    ])}\n                >\n                    <div className={styles.iconWrapper}>\n                        <FiShare />\n                    </div>\n                    <div className={styles.contentWrapper}>\n                        <h1>Share Link Copied</h1>\n                        <p>You may now paste the link where needed.</p>\n                    </div>\n                    <div className={styles.closeIcon} onClick={() => toast.dismiss(t.id)}>\n                        <MdOutlineClose />\n                    </div>\n                </div>\n            ),\n            { id: \"share-notification\", position: \"top-center\" }\n        );\n        let urlHash = shareUrl.split(\"#\")[1];\n        let formData = decompress(urlHash);\n        gaEvent(\"share\", {\n            category: \"Share\",\n            label: \"share\",\n            value: formData.query,\n            nonInteraction: true\n        });\n\n        let {selectionRange: _, ...rest} = formData;\n        let eventData = Object.assign({}, rest, {\n            time: rest.time !== \"\" ? (\n                rest.time !== \"all\" ? rest.time : (differenceInDays(endOfDay(new Date()), startOfDay(toDate(parseISO(Config.subreddits[rest.subreddit])))) + 1)\n            ) : (differenceInDays(endOfDay(formData.selectionRange.endDate), startOfDay(formData.selectionRange.startDate)) + 1),\n            keywords: formData.query.replace(KeywordsRegex, ' ').trim().replace(/\\s+/g, ',').toLowerCase(),\n            resultCount: totalCount\n        });\n\n        customEvent(\"share\", eventData);\n    }\n\n    return (\n        <>\n            <CopyToClipboard\n                text={shareUrl}\n                onCopy={onSuccess}>\n                <Button\n                    color=\"blue\"\n                    size=\"xs\"\n                    aria-label=\"Share Search Results\"\n                    title=\"Share Search Results\">\n                    <FiShare className=\"md:mr-2 h-4 w-4\" />\n                    <span className=\"hidden md:inline\">Share</span>\n                </Button>\n            </CopyToClipboard>\n            <Toaster />\n        </>\n    )\n}\n\nexport default Share;","import React from 'react';\nimport {Alert} from \"flowbite-react\";\nimport {BiErrorAlt} from \"react-icons/bi\";\n\nimport {Config} from \"../../app.config\";\nimport {useSearchContext} from \"../utils/Context\";\n\nconst Error = () => {\n    const {\n        options,\n        error\n    } = useSearchContext();\n\n    const errorMessage = error.message ?? \"An unknown error has occurred. Please try again later.\";\n\n    const additionalContent =\n        <div className=\"mt-4 text-red-800 dark:text-red-800\">\n            <p className=\"text-2xl font-bold mb-6\">{errorMessage}</p>\n            <p className=\"text-base mb-3\">There is probably an issue with API that provides the search results data.</p>\n            <p className=\"text-base\">In the meantime, you can use this <a href={`https://www.google.com/search?q=site:reddit.com/r/${Config.defaultSubreddit}`} className=\"underline font-semibold\" target=\"_blank\">Google search query</a> to help find\n                what you are looking for, just add your search to the existing text that helps narrow the search to the {Config.defaultSubreddit} subreddit.</p>\n        </div>\n\n    return (\n        <div className=\"p-12 w-full\">\n            <Alert\n                color=\"failure\"\n                icon={BiErrorAlt}\n                additionalContent={additionalContent}>\n                <h2 className=\"text-xl font-semibold text-red-800 dark:text-red-800\">An Error Has Occurred</h2>\n            </Alert>\n        </div>\n    )\n}\n\nexport default Error;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {Alert, Button} from \"flowbite-react\";\nimport {FaBookOpen} from \"react-icons/fa\";\nimport {HiEye} from \"react-icons/hi2\";\n\nimport {KeywordsRegex, Suggestions} from \"../utils/Constants\";\nimport {testMatches, gaEvent, customEvent} from \"../utils/Utils\";\nimport {useSearchContext} from \"../utils/Context\";\n\nconst Suggestion = (props) => {\n    const {\n        options,\n        totalCount\n    } = useSearchContext();\n\n    const onClick = (name, query) => {\n        gaEvent(\"suggestion\", {\n            category: \"Suggestion\",\n            label: name,\n            value: query,\n            nonInteraction: true\n        });\n        customEvent(\"suggestion\", {\n            suggest: name,\n            query: query,\n            keywords: query.replace(KeywordsRegex, ' ').trim().replace(/\\s+/g, ',').toLowerCase(),\n            resultCount: totalCount\n        });\n    }\n\n    if (props.query && options.showSuggestions) {\n        const matches = Suggestions.filter(suggestion => testMatches(props.query, suggestion.matches));\n\n        if (matches.length) {\n            let suggestionComponents = matches.map((suggestion, index) => {\n                let comments = `Looking for ${suggestion.name} information? Here is a resource that might help.`;\n                if (suggestion.hasOwnProperty(\"comments\") && suggestion.comments.trim() !== \"\") {\n                    comments = suggestion.comments;\n                }\n\n                let color = \"teal\";\n                if (suggestion.hasOwnProperty(\"color\") && suggestion.color.trim() !== \"\") {\n                    color = suggestion.color;\n                }\n\n                let icon = FaBookOpen;\n                if (suggestion.hasOwnProperty(\"icon\") && suggestion.icon) {\n                    icon = suggestion.icon;\n                }\n\n                const additionalContent =\n                    <>\n                        <div className=\"mt-1 mb-3 text-sm\">{comments}</div>\n                        <div className=\"flex flex-wrap items-center gap-2\">\n                            <Button\n                                href={suggestion.link}\n                                onClick={() => onClick(suggestion.name, props.query)}\n                                target=\"_blank\"\n                                color={color}\n                                size=\"xs\"\n                                pill>\n                                <HiEye className=\"-ml-0.5 mr-2 h-4 w-4\" /> View more\n                            </Button>\n                        </div>\n                    </>;\n\n                return (\n                    <Alert\n                        key={index}\n                        color={color}\n                        withBorderAccent\n                        icon={icon}\n                        additionalContent={additionalContent}\n                        className=\"shadow-md\"\n                    >\n                        <h3 className=\"text-lg font-medium leading-tight\">{suggestion.name}</h3>\n                    </Alert>\n                )\n            });\n\n            let gridColumns;\n            switch (suggestionComponents.length) {\n                case 2:\n                case 4:\n                    gridColumns = 2;\n                    break;\n                case 3:\n                    gridColumns = 3;\n                    break;\n                default:\n                    gridColumns = 1;\n            }\n\n            return (\n                <div className={`gap-4 grid grid-cols-1 xl:grid-cols-${gridColumns}`}>\n                    {suggestionComponents}\n                </div>\n            )\n        }\n    }\n\n    return null;\n}\n\nSuggestion.propTypes = {\n    query: PropTypes.string.isRequired\n}\n\nexport default Suggestion;","import React from 'react';\nimport {Config} from \"../../app.config\";\nimport {Alert} from \"flowbite-react\";\nimport { HiInformationCircle } from 'react-icons/hi';\n\nconst Announce = () => {\n    const announce = Config.announce\n    if (announce.enable) {\n        return (\n            <Alert\n                color={announce.color}\n                icon={HiInformationCircle}\n                className=\"mb-4\">\n                {announce.message}\n            </Alert>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default Announce;","import React from \"react\";\nimport {Card, Badge, Spinner, Avatar} from \"flowbite-react\";\nimport PropTypes from \"prop-types\";\nimport {format, formatDistanceToNow} from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {ImPriceTag, ImClock2} from 'react-icons/im';\nimport {TbBrandReddit} from 'react-icons/tb';\n\nimport {Config} from \"../../app.config\";\nimport {useSearchContext} from \"../utils/Context\";\nimport {gaEvent, customEvent} from \"../utils/Utils\";\nimport {BlockquoteRegEx, LinkClasses, ThreadTypes} from \"../utils/Constants\";\nimport Help from \"./Help\";\nimport Reset from \"./Reset\";\nimport Share from \"./Share\";\nimport Error from \"./Error\";\nimport Suggestion from \"./Suggestion\";\nimport Announce from \"./Announce\";\n\nconst ResultItem = (props) => {\n    const {\n        options\n    } = useSearchContext();\n\n    const handleAuthorClick = (event, comment, link) => {\n        gaEvent(\"author\", {\n            category: \"Author\",\n            label: \"author\",\n            value: comment.author,\n            nonInteraction: true\n        });\n        customEvent(\"author\", {\n            username: comment.author,\n            resultNumber: props.resultNumber,\n            thread: ThreadTypes[comment.thread].name,\n            link: `https://reddit.com${link}`\n        })\n    }\n\n    const handleResultClick = (event, comment, link) => {\n        gaEvent(\"result\", {\n            category: \"Result\",\n            label: \"thread\",\n            value: comment.thread,\n            nonInteraction: true\n        });\n        gaEvent(\"result\", {\n            category: \"Result\",\n            label: \"author\",\n            value: comment.author,\n            nonInteraction: true\n        });\n        customEvent(\"result\", {\n            author: comment.author,\n            resultNumber: props.resultNumber,\n            thread: ThreadTypes[comment.thread].name,\n            link: `https://reddit.com${link}`\n        });\n    }\n\n    const redditDomain = `https://${options.oldReddit ? 'old' : 'www'}.reddit.com`;\n\n    let permalink;\n    if (props.permalink) {\n        permalink = props.permalink;\n    } else {\n        permalink = `/comments/${props.link_id.split('_')[1]}/_/${props.id}/`\n    }\n    const commentLink = `${redditDomain}${permalink}?context=1`;\n\n    let threadBadge;\n    if (props.thread) {\n        threadBadge = <Badge icon={ImPriceTag} color={ThreadTypes[props.thread].color} size=\"xs\" className=\"pr-1.5\"><span className=\"sr-only\">Comment Thread:</span>{ThreadTypes[props.thread].name}</Badge>\n    }\n\n    let commentFormattedDate = format(new Date(props.created_utc * 1000), \"M/d/yy h:mm aaa\")\n    let commentPosted =\n        <>\n            <span className=\"inline md:hidden\">{formatDistanceToNow(new Date(props.created_utc * 1000), {addSuffix: false})}</span>\n            <span className=\"hidden md:inline\">{formatDistanceToNow(new Date(props.created_utc * 1000), {addSuffix: true})}</span>\n        </>\n    if (options.showDate) {\n        commentPosted = commentFormattedDate;\n    }\n\n    let subredditBadge = <Badge icon={TbBrandReddit} color=\"success\" size=\"xs\" className=\"pr-1.5\"><span className=\"sr-only\">Subreddit:</span> {props.subreddit}</Badge>\n\n    let postedBadge = <Badge icon={ImClock2} color=\"warning\" size=\"xs\" className=\"pr-1.5\" title={commentFormattedDate}><span className=\"sr-only\">Comment Posted:</span> {commentPosted}</Badge>\n\n    let authorAvatar = <Avatar size=\"xs\" img={`https://www.redditstatic.com/avatars/defaults/v2/avatar_default_${Math.floor(Math.random() * 8)}.png`} />\n\n    return (\n        <Card>\n            <div className=\"flex flex-wrap items-center justify-between -mx-2 md:mx-0\">\n                <div className=\"flex flex-wrap items-center gap-3\">\n                    {authorAvatar}\n                    <a href={`${redditDomain}/user/${props.author}`}\n                       onClick={(e) => handleAuthorClick(e, props, permalink)}\n                       className={`font-semibold text-base no-underline md:text-lg ${LinkClasses}`}\n                       target=\"_blank\">\n                        <span className=\"sr-only\">Comment Author:</span> {props.author}\n                    </a>\n                </div>\n                {threadBadge}\n            </div>\n            <div className=\"-mx-2 md:mx-0\">\n                <a href={commentLink}\n                   onClick={(e) => handleResultClick(e, props, permalink)}\n                   className=\"block text-sm leading-snug reddit-comment text-ellipsis overflow-hidden no-underline\"\n                   target=\"_blank\">\n                <ReactMarkdown\n                    disallowedElements={['a']}\n                    remarkPlugins={[remarkGfm]}\n                    unwrapDisallowed>\n                    {props.body.replace(BlockquoteRegEx, \"\\n\\n>\")}\n                </ReactMarkdown>\n                </a>\n            </div>\n            <div className={`flex flex-wrap justify-${subredditBadge ? 'between':'end'} items-center -mx-2 md:mx-0`}>\n                {subredditBadge}\n                {postedBadge}\n            </div>\n        </Card>\n    )\n}\n\nResultItem.propTypes = {\n    author: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    created_utc: PropTypes.number.isRequired,\n    link_id: PropTypes.string,\n    id: PropTypes.string,\n    permalink: PropTypes.string,\n    thread: PropTypes.string,\n    subreddit: PropTypes.string,\n    resultNumber: PropTypes.number\n}\n\nconst Results = () => {\n    const {\n        comments,\n        allData,\n        filteredCount,\n        totalCount,\n        searching,\n        options,\n        searched,\n        error,\n        query\n    } = useSearchContext();\n\n    if (error) {\n        return <Error />;\n    }\n\n    if (searching) {\n        return (\n            <div className=\"p-8 w-full\">\n                <div className=\"flex flex-col text-center\">\n                    <Spinner aria-label=\"Searching...\" size=\"xl\" />\n                </div>\n            </div>\n        );\n    }\n\n    if (!searched) {\n        return (\n            <div className=\"md:pt-6 px-4 md:px-6 lg:px-8 pb-6 w-full\">\n                <Announce />\n                <Help />\n            </div>\n\n        );\n    } else {\n        let resultsContent;\n\n        if (allData.length === 0 && comments.length === 0) {\n            resultsContent =\n                <div className=\"p-8 w-full\">\n                    <Card>\n                        <div className=\"font-semibold text-lg text-center\">\n                            No Results Found\n                        </div>\n                    </Card>\n                </div>\n        } else {\n            if (comments.length !== 0) {\n                resultsContent = [\n                    comments.map((comment, index) => <ResultItem key={index} {...comment} resultNumber={(index+1)} />),\n                    <div key={9999} className=\"font-semibold text-center my-4\">\n                        End of Results\n                    </div>\n                ];\n            }\n        }\n\n        return (\n            <>\n                <div id=\"results-top-bar\" className=\"flex justify-between items-center px-4 py-3 border-b border-t lg:border-t-0 border-gray-200 dark:border-gray-700 bg-blue-100 dark:bg-slate-800\">\n                    <div id=\"results-title\" aria-live=\"polite\" aria-atomic=\"true\" className=\"font-semibold text-lg text-gray-700 dark:text-gray-50\">\n                        Showing {filteredCount < totalCount ? `${filteredCount} of ` : ''}{totalCount} result{totalCount === 1 ? '':'s'}\n                    </div>\n                    <div className=\"flex flex-wrap items-center gap-3 md:gap-4\">\n                        <Share />\n                        <Reset />\n                    </div>\n                </div>\n                <main id=\"results-list\" role=\"region\" aria-label=\"Search Results\" className=\"flex-1 overflow-y-scroll py-4 px-2 md:px-6 lg:px-10 xl:px-12 space-y-6\">\n                    <Suggestion query={query} />\n                    <div className=\"flex flex-col gap-4\">\n                        {resultsContent}\n                    </div>\n                </main>\n                <div id=\"results-footer\" className=\"flex justify-between items-center px-4 py-2 border-t border-gray-200 dark:border-gray-700 text-center text-xs bg-blue-100 dark:bg-slate-800\">\n                    <div>\n                        Maintained by <a href={`https://${options.oldReddit ? 'old' : 'www'}.reddit.com/user/${Config.author}`}\n                                         target=\"_blank\"\n                                         className={LinkClasses}>{Config.author}</a>\n                    </div>\n                    <div>\n                        <a href={`https://${options.oldReddit ? 'old' : 'www'}.reddit.com/message/compose/?to=${Config.author}&subject=${Config.name.replace(/\\s+/g, '+')}`}\n                           target=\"_blank\"\n                           className={LinkClasses}>PM with comments, suggestions, issues</a>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Results;","import React from 'react';\nimport {Checkbox, Label, Spinner} from \"flowbite-react\";\n\nimport {useSearchContext} from \"../utils/Context\";\nimport {LinkClasses, ThreadTypes} from \"../utils/Constants\";\nimport {gaEvent, customEvent} from \"../utils/Utils\";\n\nconst Facets = () => {\n    const {\n        threadFilters,\n        setThreadFilters,\n        searching,\n        allData\n    } = useSearchContext();\n\n    if (searching) {\n        return (\n            <div className=\"mt-8 md:mt-0 lg:mt-8 md:w-1/2 lg:w-full md:pl-4 lg:pl-0\">\n                <div className=\"hidden md:flex flex-col text-center \">\n                    <Spinner aria-label=\"Searching...\" size=\"md\" />\n                </div>\n            </div>\n        );\n    }\n\n    if (!threadFilters || Object.keys(threadFilters).length <= 1 || allData === undefined) {\n        return null;\n    }\n\n    const handleChange = (e) => {\n        threadFilters[e.target.name] = e.target.checked;\n        setThreadFilters({...threadFilters});\n        gaEvent(\"filter\", {\n            category: \"Filter\",\n            label: (e.target.checked ? 'Show' : 'Hide'),\n            value: e.target.name,\n            nonInteraction: true\n        });\n        customEvent(\"filter\", {\n            thread: ThreadTypes[e.target.name].name,\n            action: (e.target.checked ? 'Show' : 'Hide')\n        });\n    }\n\n    const handleOnly = (key) => {\n        for (const subkey in threadFilters) {\n            threadFilters[subkey] = subkey === key;\n        }\n        setThreadFilters({...threadFilters});\n        gaEvent(\"filter\", {\n            category: \"Filter\",\n            label: \"Only\",\n            value: key,\n            nonInteraction: true\n        });\n        customEvent(\"filter\", {\n            thread: ThreadTypes[key].name,\n            action: \"Only\"\n        });\n    }\n\n    const handleAll = () => {\n        for (const key in threadFilters) {\n            threadFilters[key] = true;\n        }\n        setThreadFilters({...threadFilters});\n        gaEvent(\"filter\", {\n            category: \"Filter\",\n            label: \"All\",\n            value: \"All\",\n            nonInteraction: true\n        });\n        customEvent(\"filter\", {\n            thread: \"All\",\n            action: \"All\"\n        });\n    }\n\n    const allChecked = Object.values(threadFilters).every((v) => v);\n    let selectAll;\n    if (!allChecked) {\n        selectAll =\n            <button\n                className={`text-sm ${LinkClasses}`}\n                onClick={handleAll}>\n                Select All\n            </button>\n    }\n\n    const threadFiltersList = Object.entries(threadFilters);\n    const threadsFilter = threadFiltersList.map(([key, value], i) => {\n        const checkboxId = key.replace(/\\s/g, '-').toLowerCase();\n\n        let listItemClasses;\n        switch (i) {\n            case 0:\n                listItemClasses = \"rounded-t-lg border-b border-gray-200 dark:border-gray-600\";\n                break;\n            case (threadFiltersList.length - 1):\n                listItemClasses = \"rounded-b-lg\";\n                break;\n            default:\n                listItemClasses = \"border-b border-gray-200 dark:border-gray-600\";\n        }\n        return (\n            <li className={`flex items-center flex-wrap gap-4 facet py-2 px-4 w-full ${listItemClasses}`} key={i}>\n                <Checkbox\n                    id={checkboxId}\n                    name={key}\n                    checked={value}\n                    onChange={handleChange}\n                />\n                <Label htmlFor={checkboxId} className=\"cursor-pointer\">{ThreadTypes.hasOwnProperty(key) ? ThreadTypes[key].name : \"None\"}</Label>\n                <button\n                    className={`text-xs ${LinkClasses}`}\n                    aria-label={`show only ${key} thread results`}\n                    onClick={() => handleOnly(key)}>\n                    only\n                </button>\n            </li>\n        )\n    });\n\n    return (\n        <div role=\"region\" aria-label=\"Search Result Filters\" className=\"mt-8 md:mt-0 lg:mt-8 md:w-1/2 lg:w-full md:pl-4 lg:pl-0\">\n            <div className=\"mb-1 flex justify-between items-center\">\n                <Label htmlFor=\"threads-filter\">Threads Filter</Label>\n                {selectAll}\n            </div>\n            <ul id=\"threads-filter\" className=\"text-sm font-medium text-gray-900 bg-white rounded-lg border border-gray-200 dark:bg-gray-700 dark:border-gray-600 dark:text-white\">\n                {threadsFilter}\n            </ul>\n        </div>\n    )\n}\n\nexport default Facets;","import React, {useEffect} from 'react';\n\nimport {Alert, Button} from \"flowbite-react\";\nimport {IoWarningOutline} from \"react-icons/io5\";\nimport {HiEye} from \"react-icons/hi2\";\n\nimport {Config} from \"../../app.config\";\nimport Options from \"../components/Options\";\nimport SearchForm from \"../components/SearchForm\";\nimport Results from \"../components/Results\";\nimport Facets from \"../components/Facets\";\nimport {woopraInitialize} from \"../utils/Utils\";\n\nexport default function Home() {\n    if (Config.enableCustomEvents) {\n        useEffect(() => {\n            woopraInitialize();\n        }, []);\n    }\n\n    if (Config.disableSearch) {\n        return (\n            <div className=\"container mx-auto text-gray-700 w-full md:w-3/4 lg:w-2/3 xl:w-1/2 dark:text-gray-100 p-4 md:p-8 lg:p-12\">\n                <div className=\"\">\n                    <Alert\n                        color=\"warning\"\n                        icon={IoWarningOutline}\n                        additionalContent={\n                            <>\n                                <div className=\"mb-4 text-sm\">\n                                    <p>Due to Pushshift being cut off from the Reddit API, they have shut off their own API. The only communication at this point from Pushshift is\n                                        \"Check back in the next few weeks for updates.\"</p>\n                                    <p className=\"mt-2\">So until further notice, Churning Search is unavailable. Once Pushshift determines/announces their path forward, it will be decided how\n                                        Churning Search will proceed. All announcements regarding Churning Search will be posted in the Daily Discussion thread and here.</p>\n                                    <p className=\"mt-2\"><strong className=\"font-medium\">Search Help:</strong> <a className=\"underline underline-offset-3\" href=\"https://www.google.com/search?q=site%3Areddit.com%2Fr%2Fchurning+intitle%3A%22question+thread%22\">Try\n                                        a google search including the following:</a></p>\n                                    <div className=\"mt-4 text-center\"><code>site:reddit.com/r/churning intitle:\"question thread\"</code></div>\n                                </div>\n                                <div className=\"flex flex-wrap items-center gap-2\">\n                                    <Button\n                                        color=\"warning\"\n                                        href=\"https://reddit.com/r/churning/comments/13lpwno/daily_discussion_thread_may_19_2023/jkvb7fs/?context=3\"\n                                        target=\"_blank\"\n                                        size=\"xs\"\n                                        pill>\n                                        <HiEye className=\"-ml-0.5 mr-2 h-4 w-4\" /> More info\n                                    </Button>\n                                </div>\n                            </>\n                        }\n                        rounded>\n                        <h4 className=\"text-lg md:text-xl lg:text-2xl font-medium font-mono tracking-tighter\">Churning Search Unavailable</h4>\n                    </Alert>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"lg:h-screen lg:min-h-screen lg:h-screen-ios lg:min-h-screen-ios lg:flex text-gray-700 dark:text-gray-100\">\n                <div id=\"search-form-panel\" className=\"md:flex lg:block lg:w-2/5 xl:w-1/3 2xl:w-1/4 p-4 overflow-y-scroll bg-blue-200 dark:bg-slate-900 border-r border-gray-200 dark:border-gray-700 shadow-lg\">\n                    <div className=\"md:w-1/2 lg:w-full md:pr-4 lg:pr-0\">\n                        <div className=\"flex items-center justify-between\">\n                            <h1 className=\"text-2xl text-gray-700 dark:text-gray-100 font-mono tracking-tighter\">{Config.name}</h1>\n                            <Options />\n                        </div>\n                        <SearchForm />\n                    </div>\n                    <Facets />\n                </div>\n                <div id=\"results-panel\" className=\"mt-8 lg:mt-0 flex flex-1 flex-col bg-white dark:bg-slate-900 overflow-y-scroll\">\n                    <Results />\n                </div>\n            </div>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationWrapper\":\"Share_notificationWrapper__kF_8m\",\"iconWrapper\":\"Share_iconWrapper__YfKlP\",\"contentWrapper\":\"Share_contentWrapper__qFQqs\",\"closeIcon\":\"Share_closeIcon__p6fFV\"};"],"names":["window","__NEXT_P","push","__webpack_require__","components_Options","options","setOptions","useSearchContext","mounted","setMounted","useState","show","setShow","theme","setTheme","useTheme","useEffect","handleClose","localStorage","setItem","Config","id","compress","handleChange","name","checked","oldOptions","customEvent","option","enabled","optionAvailable","label","darkMode","oldReddit","showDate","showSuggestions","optionsList","map","index","jsx_runtime","jsx","ToggleSwitch","color","onChange","jsxs","Fragment","Button","size","title","concat","aria-label","aria-haspopup","onClick","s","TbAdjustmentsHorizontal","className","Modal","aria-labelledby","onClose","Header","Body","form","div","Footer","fullSized","components_SearchForm","query","author","selectionRange","sort","time","subreddit","search","setState","searching","searchSubmit","e","preventDefault","oldState","target","value","handleRangeChange","item","selection","timeRangeOptions","Object","entries","SearchRange","param","key","subredditOptions","subreddits","searchButtonLabel","span","Spinner","light","searchButtonDisabled","length","enableAcronymSearch","onSubmit","role","Label","htmlFor","TextInput","type","Select","classNames","DateRange","editableDateInputs","moveRangeOnFirstSelection","minDate","parseISO","maxDate","Date","ranges","rangeColors","disabled","aria-disabled","components_Help","table","thead","tr","th","tbody","td","dl","dt","dd","p","ul","li","components_Reset","reset","MdRefresh","components_Share","shareUrl","totalCount","CopyToClipboard","text","onCopy","toast","custom","styles","t","visible","FiShare","h1","dismiss","MdOutlineClose","position","urlHash","split","formData","decompress","gaEvent","category","nonInteraction","_","rest","eventData","assign","differenceInDays","endOfDay","startOfDay","toDate","endDate","startDate","keywords","replace","KeywordsRegex","trim","toLowerCase","resultCount","Toaster","components_Error","error","errorMessage","message","additionalContent","a","href","defaultSubreddit","Alert","icon","BiErrorAlt","h2","Suggestion","suggest","props","matches","Suggestions","filter","suggestion","testMatches","gridColumns","suggestionComponents","comments","hasOwnProperty","FaBookOpen","link","pill","HiEye","withBorderAccent","h3","propTypes","PropTypes","isRequired","components_Announce","announce","enable","HiInformationCircle","ResultItem","permalink","threadBadge","handleAuthorClick","event","comment","username","resultNumber","thread","ThreadTypes","handleResultClick","redditDomain","link_id","commentLink","Badge","ImPriceTag","commentFormattedDate","format","created_utc","commentPosted","formatDistanceToNow","addSuffix","subredditBadge","TbBrandReddit","postedBadge","ImClock2","authorAvatar","Avatar","img","Math","floor","random","Card","LinkClasses","ReactMarkdown","disallowedElements","remarkPlugins","remarkGfm","unwrapDisallowed","body","BlockquoteRegEx","components_Results","allData","filteredCount","searched","Error","Announce","Help","resultsContent","aria-live","aria-atomic","Share","Reset","main","components_Facets","selectAll","threadFilters","setThreadFilters","keys","undefined","action","handleOnly","subkey","allChecked","values","every","v","button","threadFiltersList","threadsFilter","i","listItemClasses","checkboxId","Checkbox","Home","enableCustomEvents","woopraInitialize","disableSearch","IoWarningOutline","strong","code","rounded","h4","Options","SearchForm","Facets","Results","module","exports"],"sourceRoot":""}